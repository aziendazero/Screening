package model;

import insiel.dataHandling.DateUtils;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;

import model.common.Round_AppModule;

import model.commons.Parent_AppModuleImpl;

import model.global.A_SoCnfParametriSistemaViewImpl;

import model.round.Round_CountSoContegAltriInvitiViewImpl;
import model.round.Round_CountSoConteggioInvitiViewImpl;
import model.round.Round_LovComuneViewImpl;
import model.round.Round_RichSelCprelViewImpl;
import model.round.Round_SoAppuntamentoViewImpl;
import model.round.Round_SoAziendaViewImpl;
import model.round.Round_SoCentriPrelViewImpl;
import model.round.Round_SoCentro1livViewImpl;
import model.round.Round_SoCnfAnagScrViewImpl;
import model.round.Round_SoCnfComuneViewImpl;
import model.round.Round_SoCnfDistrzonaViewImpl;
import model.round.Round_SoCnfEsitoinvitoViewImpl;
import model.round.Round_SoCnfTpinvitoAltriViewImpl;
import model.round.Round_SoCnfTpinvitoSollViewImpl;
import model.round.Round_SoCnfTpinvitoSollecitiViewImpl;
import model.round.Round_SoCnfTpinvitoViewImpl;
import model.round.Round_SoCnfTpscrViewImpl;
import model.round.Round_SoComDistrettiZoneViewImpl;
import model.round.Round_SoComuneViewImpl;
import model.round.Round_SoComuniByCentriImpl;
import model.round.Round_SoComuniSenzaRoundImpl;
import model.round.Round_SoConteggiInvitiViewImpl;
import model.round.Round_SoDistrettoZonaViewImpl;
import model.round.Round_SoEsclusioneViewImpl;
import model.round.Round_SoInvitoSollecitiViewImpl;
import model.round.Round_SoInvitoViewImpl;
import model.round.Round_SoMediciByCentriViewImpl;
import model.round.Round_SoMedicoViewImpl;
import model.round.Round_SoRoundAttiviViewImpl;
import model.round.Round_SoRoundInScadenzaViewImpl;
import model.round.Round_SoRoundorgViewImpl;
import model.round.Round_SoSoggScrViewImpl;
import model.round.Round_SoSoggettiFilteredHPVViewImpl;
import model.round.Round_SoSoggettiFilteredViewImpl;
import model.round.Round_SoSoggettoViewImpl;
import model.round.Round_SoZoneByComuniCentriImpl;

import model.round.Round_pianificaInvitiCountViewImpl;

import model.round.Round_pianificaInvitiListaSoggettiViewImpl;

import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.DBTransaction;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---    Warning: Do not modify method signatures of generated methods.
//  ---------------------------------------------------------------------

public class Round_AppModuleImpl extends Parent_AppModuleImpl implements Round_AppModule {
    /**
     *
     *  This is the default constructor (do not remove)
     */
    public Round_AppModuleImpl() {
    }

    public java.lang.Integer callContaInviti(String ulss, String tpscr, String stringa1, String stringa2,
                                                    BigDecimal id_query_old, String tipoInvito)

        {

        CallableStatement st = null;

        try {
            String stmt = "BEGIN  conteggi_inviti_new.conta_inviti(?,?,?,?,?,?,?,?); END;";

            DBTransaction tr = this.getDBTransaction();
            st = tr.createCallableStatement(stmt, 1);
            if (ulss == null)
                throw new Exception("Nessuna azienda sanitaria indicata");
            st.setString(1, stringa1);
            st.setString(2, stringa2);
            st.setString(3, tipoInvito);
            st.setString(4, ulss);
            st.setString(5, tpscr);
            st.setBigDecimal(6, id_query_old);
            st.registerOutParameter(7, java.sql.Types.NUMERIC);
            st.registerOutParameter(8, java.sql.Types.VARCHAR);
            st.executeUpdate();

            // se si vuole mandare un messaggio
            String mess = st.getString(8);
            int num = (st.getBigDecimal(7)).intValue();
            return new java.lang.Integer(num);

        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }

        finally {
            try {
                if (st != null)
                    st.close();
            } catch (SQLException s) { /* ignore */
            }

        }
    }

    /**
     *
     *  Container's getter for Round_SoCnfComuneView1
     */
    public Round_SoCnfComuneViewImpl getRound_SoCnfComuneView1() {
        return (Round_SoCnfComuneViewImpl) findViewObject("Round_SoCnfComuneView1");
    }

    /**
     *
     *  Container's getter for Round_SoCnfTpscrView1
     */
    public Round_SoCnfTpscrViewImpl getRound_SoCnfTpscrView1() {
        return (Round_SoCnfTpscrViewImpl) findViewObject("Round_SoCnfTpscrView1");
    }

    /**
     *
     *  Container's getter for Round_SoComuneView1
     */
    public Round_SoComuneViewImpl getRound_SoComuneView1() {
        return (Round_SoComuneViewImpl) findViewObject("Round_SoComuneView1");
    }

    /**
     *
     *  Container's getter for Round_SoRoundorgView1
     */
    public Round_SoRoundorgViewImpl getRound_SoRoundorgView1() {
        return (Round_SoRoundorgViewImpl) findViewObject("Round_SoRoundorgView1");
    }

    /**
     *
     *  Container's getter for Round_SoRoundorgView2
     */
    public Round_SoRoundorgViewImpl getRound_SoRoundorgView2() {
        return (Round_SoRoundorgViewImpl) findViewObject("Round_SoRoundorgView2");
    }

    /**
     *
     *  Container's getter for FkSoRoundSiRifASoCnfTLink1
     */
    public ViewLinkImpl getFkSoRoundSiRifASoCnfTLink1() {
        return (ViewLinkImpl) findViewLink("FkSoRoundSiRifASoCnfTLink1");
    }

    /**
     *
     *  Sample main for debugging Business Components code using the tester.
     */
    public static void main(String[] args) {
        launchTester("model", "Round_AppModuleLocal");
    }

    /**
     *
     *  Container's getter for Round_SoRoundAttiviView1
     */
    public Round_SoRoundAttiviViewImpl getRound_SoRoundAttiviView1() {
        return (Round_SoRoundAttiviViewImpl) findViewObject("Round_SoRoundAttiviView1");
    }

    /**
     * Metodo che si occupa di filtrare tutti i viewObject di configurazione in base
     * al tipo di screening e di ulss
     */
    public void filterConfiguration(String ulss, String scr, String codregionale, boolean regionale) {
        String where = "TPSCR='" + scr + "'";

        String where2 = null;
        if (!regionale) {
            where2 = "ULSS='" + ulss + "'";
        }

        //round attivi: scremo i couni ch evisualizzo in base alla ulss
        ViewObject vo = this.getRound_SoRoundAttiviView1();
        String ad_hoc = "Round_SoRoundorg.CODSCR(+)='" + scr + "'";
        if (where2 != null)
            ad_hoc += " AND " + where2;
        vo.setWhereClause(ad_hoc);
        vo.executeQuery();


        //storico round: scremo in base al tipo di screening
        vo = this.getRound_SoRoundorgView1();
        ad_hoc = "CODSCR='" + scr + "'";

        vo.setWhereClause(ad_hoc);
        vo.executeQuery();

        vo = this.getRound_SoRoundorgView3();
        vo.setWhereClause(ad_hoc);
        vo.executeQuery();


        //comuni della ulss
        vo = this.getRound_SoComuneView1();
        String entity = vo.getDefName().substring(0, vo.getDefName().indexOf("View"));
        ad_hoc = null;
        if (where2 != null)
            ad_hoc = entity + "." + where2;
        vo.setWhereClause(ad_hoc);
        vo.executeQuery();

        //comuni che si possono filtrare in base ai centri
        vo = this.getRound_SoComuniByCentri1();
        /* ad_hoc="(TPSCR_COMUNE IS NULL OR TPSCR_COMUNE='"+scr+"') "+
      "and (TPSCR_ZONA is null OR TPSCR_ZONA='"+scr+"')";
      if(!regionale)
      {
        ad_hoc+=" AND ULSS_COMUNE='"+ulss+"'";
      }*/
        vo.setWhereClauseParams(new String[] { scr, scr });
        ad_hoc = "TPSCR='" + scr + "'";
        if (!regionale) {
            ad_hoc += " AND ULSS='" + ulss + "'";
        }
        vo.setWhereClause(ad_hoc);
        vo.executeQuery();

        //zone che si possono filtrare in base al comune e ai centri
        //scremo solo per tpscr, la ulss la filtro nei comuni
        vo = this.getRound_SoZoneByComuniCentri1();
        ad_hoc = "(TPSCR IS NULL OR " + where + ")";
        vo.setWhereClause(ad_hoc);
        vo.executeQuery();


        //tipi di inviti, filtro su ulss e tpscr
        vo = this.getRound_SoCnfTpinvitoView1();
        entity = vo.getDefName().substring(0, vo.getDefName().indexOf("View"));
        ad_hoc = entity + "." + where;
        if (where2 != null)
            ad_hoc += " AND " + entity + "." + where2;
        vo.setWhereClause(ad_hoc);
        vo.executeQuery();

        //tipi di inviti con sollecito, come sopra
        vo = this.getRound_SoCnfTpinvitoSollView1();
        vo.setWhereClause(ad_hoc);
        vo.executeQuery();

        //altri tipi di inviti
        vo = this.getRound_SoCnfTpinvitoAltriView1();
        vo.setWhereClause(ad_hoc);
        vo.executeQuery();

        //tipi solleciti
        vo = this.getRound_SoCnfTpinvitoSollecitiView1();
        vo.setWhereClauseParam(0, ulss);
        vo.setWhereClauseParam(1, scr);
        vo.executeQuery();

        //configurazioni di comuni, filtro sul tipo di csreening
        vo = this.getRound_SoCnfComuneView1();
        entity = vo.getDefName().substring(0, vo.getDefName().indexOf("View"));
        ad_hoc = entity + "." + where;
        vo.setWhereClause(ad_hoc);
        vo.executeQuery();

        //tipi di esito
        vo = this.getRound_SoCnfEsitoinvitoView1();
        entity = vo.getDefName().substring(0, vo.getDefName().indexOf("View"));
        ad_hoc = entity + "." + where;
        if (where2 != null)
            ad_hoc += " AND " + entity + "." + where2;
        vo.setWhereClause(ad_hoc);
        vo.executeQuery();

        //esclusioni
        /*   vo=this.getRound_SoEsclusioneView1();
     entity=vo.getDefName().substring(0,vo.getDefName().indexOf("View"));
      ad_hoc=entity+"."+where;
     if(where2!=null)
       ad_hoc+=" AND "+entity+"."+where2;
      vo.setWhereClause(ad_hoc);
      vo.executeQuery();*/

        //inclusione dei codici anagrafici regionali
        vo = this.getRound_SoCnfAnagScrView1();
        entity = vo.getDefName().substring(0, vo.getDefName().indexOf("View"));
        ad_hoc = entity + "." + where;
        if (where2 != null)
            ad_hoc += " AND " + entity + "." + where2;
        vo.setWhereClause(ad_hoc);
        vo.executeQuery();


        //scrematura sui soli comuni della ulss
        vo = this.getRound_SoComuniSenzaRound1();
        ad_hoc = "Round_SoRoundorg.CODSCR(+)='" + scr + "'";
        if (where2 != null)
            ad_hoc += " AND " + where2;
        vo.setWhereClause(ad_hoc);
        vo.executeQuery();


        vo = this.getRound_SoRoundInScadenzaView1();
        vo.setWhereClause(ad_hoc);
        vo.executeQuery();


        //////////////////BINDING DEI PARAMETRI
        Date dtCorr = DateUtils.getOracleDateNow();
        String dtString = DateUtils.dateToString(dtCorr.getValue());

        vo = this.getRound_SoSoggettiFilteredView1();
        /* vo.setWhereClauseParam(0,ulss);
      vo.setWhereClauseParam(1,scr);
      vo.setWhereClauseParam(2,scr);
      vo.setWhereClauseParam(3,scr);
      vo.setWhereClauseParam(4,ulss);
      */
        vo.setWhereClauseParam(0, scr);
        vo.setWhereClauseParam(1, scr);
        vo.setWhereClauseParam(2, ulss);
        vo.setWhereClauseParam(3, scr);
        vo.setWhereClauseParam(4, scr);
        vo.setWhereClauseParam(5, ulss);
        vo.setWhereClauseParam(6, dtString);
        vo.setWhereClauseParam(7, dtString);
        vo.setWhereClauseParam(8, scr);


        vo = this.getRound_SoSoggettiFilteredView2();
        /*vo.setWhereClauseParam(0,ulss);
      vo.setWhereClauseParam(1,scr);
      vo.setWhereClauseParam(2,scr);
      vo.setWhereClauseParam(3,scr);
      vo.setWhereClauseParam(4,ulss);*/
        vo.setWhereClauseParam(0, scr);
        vo.setWhereClauseParam(1, scr);
        vo.setWhereClauseParam(2, ulss);
        vo.setWhereClauseParam(3, scr);
        vo.setWhereClauseParam(4, scr);
        vo.setWhereClauseParam(5, ulss);
        vo.setWhereClauseParam(6, dtString);
        vo.setWhereClauseParam(7, dtString);
        vo.setWhereClauseParam(8, scr);

        vo = this.getRound_SoSoggettiFilteredView4();
        vo.setWhereClauseParam(0, scr);
        vo.setWhereClauseParam(1, scr);
        vo.setWhereClauseParam(2, ulss);
        vo.setWhereClauseParam(3, scr);
        vo.setWhereClauseParam(4, scr);
        vo.setWhereClauseParam(5, ulss);
        vo.setWhereClauseParam(6, dtString);
        vo.setWhereClauseParam(7, dtString);
        vo.setWhereClauseParam(8, scr);

        vo = this.getRound_SoSoggettiFilteredHPVView1();
        vo.setWhereClauseParam(0, null);
        vo.setWhereClauseParam(1, null);
        vo.setWhereClauseParam(2, null);
        vo.setWhereClauseParam(3, dtString);
        vo.setWhereClauseParam(4, new java.lang.Integer(0));
        vo.setWhereClauseParam(5, dtString);
        vo.setWhereClauseParam(6, new java.lang.Integer(0));
        vo.setWhereClauseParam(7, scr);
        vo.setWhereClauseParam(8, scr);
        vo.setWhereClauseParam(9, ulss);
        vo.setWhereClauseParam(10, scr);
        vo.setWhereClauseParam(11, scr);
        vo.setWhereClauseParam(12, ulss);
        vo.setWhereClauseParam(13, dtString);
        vo.setWhereClauseParam(14, dtString);
        vo.setWhereClauseParam(15, scr);

        vo = this.getRound_SoSoggettiFilteredHPVView2();
        vo.setWhereClauseParam(0, null);
        vo.setWhereClauseParam(1, null);
        vo.setWhereClauseParam(2, null);
        vo.setWhereClauseParam(3, dtString);
        vo.setWhereClauseParam(4, new java.lang.Integer(0));
        vo.setWhereClauseParam(5, dtString);
        vo.setWhereClauseParam(6, new java.lang.Integer(0));
        vo.setWhereClauseParam(7, scr);
        vo.setWhereClauseParam(8, scr);
        vo.setWhereClauseParam(9, ulss);
        vo.setWhereClauseParam(10, scr);
        vo.setWhereClauseParam(11, scr);
        vo.setWhereClauseParam(12, ulss);
        vo.setWhereClauseParam(13, dtString);
        vo.setWhereClauseParam(14, dtString);
        vo.setWhereClauseParam(15, scr);

        vo = this.getRound_SoSoggettiFilteredHPVView3();
        vo.setWhereClauseParam(0, null);
        vo.setWhereClauseParam(1, null);
        vo.setWhereClauseParam(2, null);
        vo.setWhereClauseParam(3, dtString);
        vo.setWhereClauseParam(4, new java.lang.Integer(0));
        vo.setWhereClauseParam(5, dtString);
        vo.setWhereClauseParam(6, new java.lang.Integer(0));
        vo.setWhereClauseParam(7, scr);
        vo.setWhereClauseParam(8, scr);
        vo.setWhereClauseParam(9, ulss);
        vo.setWhereClauseParam(10, scr);
        vo.setWhereClauseParam(11, scr);
        vo.setWhereClauseParam(12, ulss);
        vo.setWhereClauseParam(13, dtString);
        vo.setWhereClauseParam(14, dtString);
        vo.setWhereClauseParam(15, scr);

        // Centri
        vo = this.getRound_SoCentro1livView1();
        vo.setWhereClause("1 = 2");
        vo.executeQuery();

        // Medici
        vo = this.getRound_SoMediciByCentriView1();
        vo.setWhereClause("1 = 2");
        vo.executeQuery();
    }

    /**
     *
     *  Container's getter for Round_SoRoundorgView3
     */
    public Round_SoRoundorgViewImpl getRound_SoRoundorgView3() {
        return (Round_SoRoundorgViewImpl) findViewObject("Round_SoRoundorgView3");
    }

    /**
     *
     *  Container's getter for Round_RoundAttiviTuttiRoundLink1
     */
    public ViewLinkImpl getRound_RoundAttiviTuttiRoundLink1() {
        return (ViewLinkImpl) findViewLink("Round_RoundAttiviTuttiRoundLink1");
    }

    /**
     *
     *  Container's getter for Round_SoAziendaView1
     */
    public Round_SoAziendaViewImpl getRound_SoAziendaView1() {
        return (Round_SoAziendaViewImpl) findViewObject("Round_SoAziendaView1");
    }

    /**
     *
     *  Container's getter for Round_SoInvitoView1
     */
    public Round_SoInvitoViewImpl getRound_SoInvitoView1() {
        return (Round_SoInvitoViewImpl) findViewObject("Round_SoInvitoView1");
    }

    /**
     *
     *  Container's getter for Round_SoSoggScrView1
     */
    public Round_SoSoggScrViewImpl getRound_SoSoggScrView1() {
        return (Round_SoSoggScrViewImpl) findViewObject("Round_SoSoggScrView1");
    }

    /**
     *
     *  Container's getter for Round_SoSoggettoView1
     */
    public Round_SoSoggettoViewImpl getRound_SoSoggettoView1() {
        return (Round_SoSoggettoViewImpl) findViewObject("Round_SoSoggettoView1");
    }

    /**
     *
     *  Container's getter for Round_SoSoggScrView2
     */
    public Round_SoSoggScrViewImpl getRound_SoSoggScrView2() {
        return (Round_SoSoggScrViewImpl) findViewObject("Round_SoSoggScrView2");
    }

    /**
     *
     *  Container's getter for FkSoSoggScrSoggLink1
     */
    public ViewLinkImpl getFkSoSoggScrSoggLink1() {
        return (ViewLinkImpl) findViewLink("FkSoSoggScrSoggLink1");
    }

    /**
     *
     *  Container's getter for Round_SoInvitoView2
     */
    public Round_SoInvitoViewImpl getRound_SoInvitoView2() {
        return (Round_SoInvitoViewImpl) findViewObject("Round_SoInvitoView2");
    }

    /**
     *
     *  Container's getter for Round_SoTipiInvitiDaGenerareView1
     */
    public ViewObjectImpl getRound_SoTipiInvitiDaGenerareView1() {
        return (ViewObjectImpl) findViewObject("Round_SoTipiInvitiDaGenerareView1");
    }

    /**
     *
     *  Container's getter for Round_SoSoggettoInvitiLink1
     */
    public ViewLinkImpl getRound_SoSoggettoInvitiLink1() {
        return (ViewLinkImpl) findViewLink("Round_SoSoggettoInvitiLink1");
    }

    /**
     *
     *  Container's getter for Round_SoCentriPrelView1
     */
    public Round_SoCentriPrelViewImpl getRound_SoCentriPrelView1() {
        return (Round_SoCentriPrelViewImpl) findViewObject("Round_SoCentriPrelView1");
    }

    /**
     *
     *  Container's getter for Round_SoCentro1livView1
     */
    public Round_SoCentro1livViewImpl getRound_SoCentro1livView1() {
        return (Round_SoCentro1livViewImpl) findViewObject("Round_SoCentro1livView1");
    }

    /**
     *
     *  Container's getter for Round_SoComDistrettiZoneView1
     */
    public Round_SoComDistrettiZoneViewImpl getRound_SoComDistrettiZoneView1() {
        return (Round_SoComDistrettiZoneViewImpl) findViewObject("Round_SoComDistrettiZoneView1");
    }

    /**
     *
     *  Container's getter for Round_SoDistrettoZonaView1
     */
    public Round_SoDistrettoZonaViewImpl getRound_SoDistrettoZonaView1() {
        return (Round_SoDistrettoZonaViewImpl) findViewObject("Round_SoDistrettoZonaView1");
    }

    /**
     *
     *  Container's getter for Round_SoCnfDistrzonaView1
     */
    public Round_SoCnfDistrzonaViewImpl getRound_SoCnfDistrzonaView1() {
        return (Round_SoCnfDistrzonaViewImpl) findViewObject("Round_SoCnfDistrzonaView1");
    }

    /**
     *
     *  Container's getter for Round_SoComuniByCentri1
     */
    public Round_SoComuniByCentriImpl getRound_SoComuniByCentri1() {
        return (Round_SoComuniByCentriImpl) findViewObject("Round_SoComuniByCentri1");
    }

    /**
     *
     *  Container's getter for Round_SoZoneByComuniCentri1
     */
    public Round_SoZoneByComuniCentriImpl getRound_SoZoneByComuniCentri1() {
        return (Round_SoZoneByComuniCentriImpl) findViewObject("Round_SoZoneByComuniCentri1");
    }

    /**
     *
     *  Container's getter for Round_SoMedicoView1
     */
    public Round_SoMedicoViewImpl getRound_SoMedicoView1() {
        return (Round_SoMedicoViewImpl) findViewObject("Round_SoMedicoView1");
    }

    /**
     *
     *  Container's getter for Round_SoInvitoView3
     */
    public Round_SoInvitoViewImpl getRound_SoInvitoView3() {
        return (Round_SoInvitoViewImpl) findViewObject("Round_SoInvitoView3");
    }

    /**
     *
     *  Container's getter for Round_SoSoggettoDirInvitiLink1
     */
    public ViewLinkImpl getRound_SoSoggettoDirInvitiLink1() {
        return (ViewLinkImpl) findViewLink("Round_SoSoggettoDirInvitiLink1");
    }


    /**
     *
     *  Container's getter for Round_SoCnfTpinvitoView1
     */
    public Round_SoCnfTpinvitoViewImpl getRound_SoCnfTpinvitoView1() {
        return (Round_SoCnfTpinvitoViewImpl) findViewObject("Round_SoCnfTpinvitoView1");
    }

    /**
     *
     *  Container's getter for Round_SoCnfTpinvitoView2
     */
    public Round_SoCnfTpinvitoViewImpl getRound_SoCnfTpinvitoView2() {
        return (Round_SoCnfTpinvitoViewImpl) findViewObject("Round_SoCnfTpinvitoView2");
    }

    /**
     *
     *  Container's getter for FkTpinvitoTpinvsollLink1
     */
    public ViewLinkImpl getFkTpinvitoTpinvsollLink1() {
        return (ViewLinkImpl) findViewLink("FkTpinvitoTpinvsollLink1");
    }

    /**
     *
     *  Container's getter for Round_SoSoggettiFilteredView1
     */
    public Round_SoSoggettiFilteredViewImpl getRound_SoSoggettiFilteredView1() {
        return (Round_SoSoggettiFilteredViewImpl) findViewObject("Round_SoSoggettiFilteredView1");
    }


    /**
     *
     *  Container's getter for Round_SoAppuntamentoView1
     */
    public Round_SoAppuntamentoViewImpl getRound_SoAppuntamentoView1() {
        return (Round_SoAppuntamentoViewImpl) findViewObject("Round_SoAppuntamentoView1");
    }

    /**
     *
     *  Container's getter for Round_SoCnfEsitoinvitoView1
     */
    public Round_SoCnfEsitoinvitoViewImpl getRound_SoCnfEsitoinvitoView1() {
        return (Round_SoCnfEsitoinvitoViewImpl) findViewObject("Round_SoCnfEsitoinvitoView1");
    }

    /**
     *
     *  Container's getter for Round_SoCnfTpinvitoSollView1
     */
    public Round_SoCnfTpinvitoSollViewImpl getRound_SoCnfTpinvitoSollView1() {
        return (Round_SoCnfTpinvitoSollViewImpl) findViewObject("Round_SoCnfTpinvitoSollView1");
    }

    /**
     *
     *  Container's getter for Round_SoInvitoSollecitiView1
     */
    public Round_SoInvitoSollecitiViewImpl getRound_SoInvitoSollecitiView1() {
        return (Round_SoInvitoSollecitiViewImpl) findViewObject("Round_SoInvitoSollecitiView1");
    }

    /**
     *
     *  Container's getter for Round_SoTipiInvitiDaGenerareView2
     */
    public ViewObjectImpl getRound_SoTipiInvitiDaGenerareView2() {
        return (ViewObjectImpl) findViewObject("Round_SoTipiInvitiDaGenerareView2");
    }


    /**
     *
     *  Container's getter for Round_SoTipiInvitiDaGenerareView3
     */
    public ViewObjectImpl getRound_SoTipiInvitiDaGenerareView3() {
        return (ViewObjectImpl) findViewObject("Round_SoTipiInvitiDaGenerareView3");
    }


    /**
     *
     *  Container's getter for Round_SoInvitoSollecitiView2
     */
    public Round_SoInvitoSollecitiViewImpl getRound_SoInvitoSollecitiView2() {
        return (Round_SoInvitoSollecitiViewImpl) findViewObject("Round_SoInvitoSollecitiView2");
    }

    /**
     *
     *  Container's getter for Round_SoTpinvitiDaGenerareSollLink1
     */
    public ViewLinkImpl getRound_SoTpinvitiDaGenerareSollLink1() {
        return (ViewLinkImpl) findViewLink("Round_SoTpinvitiDaGenerareSollLink1");
    }

    /**
     *
     *  Container's getter for Round_SoEsclusioneView1
     */
    public Round_SoEsclusioneViewImpl getRound_SoEsclusioneView1() {
        return (Round_SoEsclusioneViewImpl) findViewObject("Round_SoEsclusioneView1");
    }

    /**
     *
     *  Container's getter for Round_SoCnfAnagScrView1
     */
    public Round_SoCnfAnagScrViewImpl getRound_SoCnfAnagScrView1() {
        return (Round_SoCnfAnagScrViewImpl) findViewObject("Round_SoCnfAnagScrView1");
    }

    /**
     *
     *  Container's getter for Round_SoInvitoView4
     */
    public Round_SoInvitoViewImpl getRound_SoInvitoView4() {
        return (Round_SoInvitoViewImpl) findViewObject("Round_SoInvitoView4");
    }

    /**
     *
     *  Container's getter for Rounf_FKInvitoSoll_Invito1
     */
    public ViewLinkImpl getRounf_FKInvitoSoll_Invito1() {
        return (ViewLinkImpl) findViewLink("Rounf_FKInvitoSoll_Invito1");
    }

    /**
     *
     *  Container's getter for Round_SoRoundInScadenzaView1
     */
    public Round_SoRoundInScadenzaViewImpl getRound_SoRoundInScadenzaView1() {
        return (Round_SoRoundInScadenzaViewImpl) findViewObject("Round_SoRoundInScadenzaView1");
    }

    /**
     *
     *  Container's getter for Round_SoComuniSenzaRound1
     */
    public Round_SoComuniSenzaRoundImpl getRound_SoComuniSenzaRound1() {
        return (Round_SoComuniSenzaRoundImpl) findViewObject("Round_SoComuniSenzaRound1");
    }

    /**
     *
     *  Container's getter for Round_RichSelCprelView1
     */
    public Round_RichSelCprelViewImpl getRound_RichSelCprelView1() {
        return (Round_RichSelCprelViewImpl) findViewObject("Round_RichSelCprelView1");
    }

    /**
     *
     *  Container's getter for Round_RichSelCprelView2
     */
    public Round_RichSelCprelViewImpl getRound_RichSelCprelView2() {
        return (Round_RichSelCprelViewImpl) findViewObject("Round_RichSelCprelView2");
    }

    /**
     *
     *  Container's getter for Round_LovComuneView1
     */
    public Round_LovComuneViewImpl getRound_LovComuneView1() {
        return (Round_LovComuneViewImpl) findViewObject("Round_LovComuneView1");
    }

    /**
     *
     *  Container's getter for Round_SoCentriPrelView2
     */
    public Round_SoCentriPrelViewImpl getRound_SoCentriPrelView2() {
        return (Round_SoCentriPrelViewImpl) findViewObject("Round_SoCentriPrelView2");
    }

    /**
     *
     *  Container's getter for Round_SoSoggettiFilteredView2
     */
    public Round_SoSoggettiFilteredViewImpl getRound_SoSoggettiFilteredView2() {
        return (Round_SoSoggettiFilteredViewImpl) findViewObject("Round_SoSoggettiFilteredView2");
    }

    /**
     *
     *  Container's getter for Round_SoTpinvitiSoggettiLink1
     */
    public ViewLinkImpl getRound_SoTpinvitiSoggettiLink1() {
        return (ViewLinkImpl) findViewLink("Round_SoTpinvitiSoggettiLink1");
    }

    /**
     *
     *  Container's getter for Round_SoTipiInvitiDaGenerareView4
     */
    public ViewObjectImpl getRound_SoTipiInvitiDaGenerareView4() {
        return (ViewObjectImpl) findViewObject("Round_SoTipiInvitiDaGenerareView4");
    }

    /**
     *
     *  Container's getter for Round_SoSoggettiFilteredView4
     */
    public Round_SoSoggettiFilteredViewImpl getRound_SoSoggettiFilteredView4() {
        return (Round_SoSoggettiFilteredViewImpl) findViewObject("Round_SoSoggettiFilteredView4");
    }

    /**
     *
     *  Container's getter for A_SoCnfParametriSistemaView1
     */
    public A_SoCnfParametriSistemaViewImpl getA_SoCnfParametriSistemaView1() {
        return (A_SoCnfParametriSistemaViewImpl) findViewObject("A_SoCnfParametriSistemaView1");
    }

    /**
     *
     *  Container's getter for Round_SoMediciByCentriView1
     */
    public Round_SoMediciByCentriViewImpl getRound_SoMediciByCentriView1() {
        return (Round_SoMediciByCentriViewImpl) findViewObject("Round_SoMediciByCentriView1");
    }

    /**
     *
     *  Container's getter for Round_SoSoggettiFilteredHPVView1
     */
    public Round_SoSoggettiFilteredHPVViewImpl getRound_SoSoggettiFilteredHPVView1() {
        return (Round_SoSoggettiFilteredHPVViewImpl) findViewObject("Round_SoSoggettiFilteredHPVView1");
    }

    /**
     *
     *  Container's getter for Round_SoSoggettiFilteredHPVView2
     */
    public Round_SoSoggettiFilteredHPVViewImpl getRound_SoSoggettiFilteredHPVView2() {
        return (Round_SoSoggettiFilteredHPVViewImpl) findViewObject("Round_SoSoggettiFilteredHPVView2");
    }

    /**
     *
     *  Container's getter for Round_SoSoggettiFilteredHPVView3
     */
    public Round_SoSoggettiFilteredHPVViewImpl getRound_SoSoggettiFilteredHPVView3() {
        return (Round_SoSoggettiFilteredHPVViewImpl) findViewObject("Round_SoSoggettiFilteredHPVView3");
    }

    /**
     *
     *  Container's getter for Round_CountSoConteggioInvitiView1
     */
    public Round_CountSoConteggioInvitiViewImpl getRound_CountSoConteggioInvitiView1() {
        return (Round_CountSoConteggioInvitiViewImpl) findViewObject("Round_CountSoConteggioInvitiView1");
    }

    /**
     *
     *  Container's getter for Round_SoConteggiInvitiView1
     */
    public Round_SoConteggiInvitiViewImpl getRound_SoConteggiInvitiView1() {
        return (Round_SoConteggiInvitiViewImpl) findViewObject("Round_SoConteggiInvitiView1");
    }

    /**
     *
     *  Container's getter for Round_CountSoContegAltriInvitiView1
     */
    public Round_CountSoContegAltriInvitiViewImpl getRound_CountSoContegAltriInvitiView1() {
        return (Round_CountSoContegAltriInvitiViewImpl) findViewObject("Round_CountSoContegAltriInvitiView1");
    }

    /**
     *
     *  Container's getter for Round_SoTipiInvitiDaGenerareView5
     */
    public ViewObjectImpl getRound_SoTipiInvitiDaGenerareView5() {
        return (ViewObjectImpl) findViewObject("Round_SoTipiInvitiDaGenerareView5");
    }

    /**
     *
     *  Container's getter for Round_SoCnfTpinvitoAltriView1
     */
    public Round_SoCnfTpinvitoAltriViewImpl getRound_SoCnfTpinvitoAltriView1() {
        return (Round_SoCnfTpinvitoAltriViewImpl) findViewObject("Round_SoCnfTpinvitoAltriView1");
    }

    /**
     *
     *  Container's getter for Round_SoTipiInvitiDaGenerareView6
     */
    public ViewObjectImpl getRound_SoTipiInvitiDaGenerareView6() {
        return (ViewObjectImpl) findViewObject("Round_SoTipiInvitiDaGenerareView6");
    }

    /**
     *
     *  Container's getter for Round_SoCnfTpinvitoSollecitiView1
     */
    public Round_SoCnfTpinvitoSollecitiViewImpl getRound_SoCnfTpinvitoSollecitiView1() {
        return (Round_SoCnfTpinvitoSollecitiViewImpl) findViewObject("Round_SoCnfTpinvitoSollecitiView1");
    }

    /**
     *
     *  Container's getter for Round_SoTipiInvitiDaGenerareView7
     */
    public ViewObjectImpl getRound_SoTipiInvitiDaGenerareView7() {
        return (ViewObjectImpl) findViewObject("Round_SoTipiInvitiDaGenerareView7");
    }

    /**
     *
     *  Container's getter for Round_SoInvitoSollecitiView3
     */
    public Round_SoInvitoSollecitiViewImpl getRound_SoInvitoSollecitiView3() {
        return (Round_SoInvitoSollecitiViewImpl) findViewObject("Round_SoInvitoSollecitiView3");
    }

    /**
     *
     *  Container's getter for Round_SoTpinvitiDaGenerareSollLink2
     */
    public ViewLinkImpl getRound_SoTpinvitiDaGenerareSollLink2() {
        return (ViewLinkImpl) findViewLink("Round_SoTpinvitiDaGenerareSollLink2");
    }

    /**
     * Container's getter for Sogg_SoCnfClassePopView1.
     * @return Sogg_SoCnfClassePopView1
     */
    public ViewObjectImpl getSogg_SoCnfClassePopView1() {
        return (ViewObjectImpl) findViewObject("Sogg_SoCnfClassePopView1");
    }

    /**
     * Container's getter for Round_SoTipiInvitiDaGenerareView8.
     * @return Round_SoTipiInvitiDaGenerareView8
     */
    public ViewObjectImpl getRound_SoPianificazioneInvitiView1() {
        return (ViewObjectImpl) findViewObject("Round_SoPianificazioneInvitiView1");
    }

    /**
     * Container's getter for Round_pianificaInvitiCountView1.
     * @return Round_pianificaInvitiCountView1
     */
    public Round_pianificaInvitiCountViewImpl getRound_pianificaInvitiCountView1() {
        return (Round_pianificaInvitiCountViewImpl) findViewObject("Round_pianificaInvitiCountView1");
    }

    /**
     * Container's getter for Round_pianificaInvitiListaSoggettiView1.
     * @return Round_pianificaInvitiListaSoggettiView1
     */
    public Round_pianificaInvitiListaSoggettiViewImpl getRound_pianificaInvitiListaSoggettiView1() {
        return (Round_pianificaInvitiListaSoggettiViewImpl) findViewObject("Round_pianificaInvitiListaSoggettiView1");
    }
}
