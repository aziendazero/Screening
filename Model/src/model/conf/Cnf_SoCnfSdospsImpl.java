package model.conf;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Date;
import oracle.jbo.Key;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---    Warning: Do not modify method signatures of generated methods.
//  ---------------------------------------------------------------------

public class Cnf_SoCnfSdospsImpl extends EntityImpl {


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Codsdosps {
            public Object get(Cnf_SoCnfSdospsImpl obj) {
                return obj.getCodsdosps();
            }

            public void put(Cnf_SoCnfSdospsImpl obj, Object value) {
                obj.setCodsdosps((String) value);
            }
        }
        ,
        Descrizione {
            public Object get(Cnf_SoCnfSdospsImpl obj) {
                return obj.getDescrizione();
            }

            public void put(Cnf_SoCnfSdospsImpl obj, Object value) {
                obj.setDescrizione((String) value);
            }
        }
        ,
        TipoFlusso {
            public Object get(Cnf_SoCnfSdospsImpl obj) {
                return obj.getTipoFlusso();
            }

            public void put(Cnf_SoCnfSdospsImpl obj, Object value) {
                obj.setTipoFlusso((String) value);
            }
        }
        ,
        DataInizioValidita {
            public Object get(Cnf_SoCnfSdospsImpl obj) {
                return obj.getDataInizioValidita();
            }

            public void put(Cnf_SoCnfSdospsImpl obj, Object value) {
                obj.setDataInizioValidita((Date) value);
            }
        }
        ,
        DataFineValidita {
            public Object get(Cnf_SoCnfSdospsImpl obj) {
                return obj.getDataFineValidita();
            }

            public void put(Cnf_SoCnfSdospsImpl obj, Object value) {
                obj.setDataFineValidita((Date) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(Cnf_SoCnfSdospsImpl object);

        public abstract void put(Cnf_SoCnfSdospsImpl object, Object value);

        public int index() {
            return Cnf_SoCnfSdospsImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return Cnf_SoCnfSdospsImpl.AttributesEnum.firstIndex() + Cnf_SoCnfSdospsImpl.AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = Cnf_SoCnfSdospsImpl.AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CODSDOSPS = AttributesEnum.Codsdosps.index();
    public static final int DESCRIZIONE = AttributesEnum.Descrizione.index();
    public static final int TIPOFLUSSO = AttributesEnum.TipoFlusso.index();
    public static final int DATAINIZIOVALIDITA = AttributesEnum.DataInizioValidita.index();
    public static final int DATAFINEVALIDITA = AttributesEnum.DataFineValidita.index();

    /**
     *
     *  This is the default constructor (do not remove)
     */
  public Cnf_SoCnfSdospsImpl()
  {
  }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.conf.Cnf_SoCnfSdosps");
    }


    /**
     *
     *  Gets the attribute value for Codsdosps, using the alias name Codsdosps
     */
    public String getCodsdosps()
  {
    return (String)getAttributeInternal(CODSDOSPS);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Codsdosps
   */
  public void setCodsdosps(String value)
  {
    setAttributeInternal(CODSDOSPS, value);
  }

  /**
   * 
   *  Gets the attribute value for Descrizione, using the alias name Descrizione
   */
  public String getDescrizione()
  {
    return (String)getAttributeInternal(DESCRIZIONE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Descrizione
   */
  public void setDescrizione(String value)
  {
    setAttributeInternal(DESCRIZIONE, value);
  }

  /**
   * 
   *  Gets the attribute value for TipoFlusso, using the alias name TipoFlusso
   */
  public String getTipoFlusso()
  {
    return (String)getAttributeInternal(TIPOFLUSSO);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for TipoFlusso
   */
  public void setTipoFlusso(String value)
  {
    setAttributeInternal(TIPOFLUSSO, value);
  }

  /**
   * 
   *  Gets the attribute value for DataInizioValidita, using the alias name DataInizioValidita
   */
  public Date getDataInizioValidita()
  {
    return (Date)getAttributeInternal(DATAINIZIOVALIDITA);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for DataInizioValidita
   */
  public void setDataInizioValidita(Date value)
  {
    setAttributeInternal(DATAINIZIOVALIDITA, value);
  }

  /**
   * 
   *  Gets the attribute value for DataFineValidita, using the alias name DataFineValidita
   */
  public Date getDataFineValidita()
  {
    return (Date)getAttributeInternal(DATAFINEVALIDITA);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for DataFineValidita
   */
  public void setDataFineValidita(Date value)
  {
    setAttributeInternal(DATAFINEVALIDITA, value);
  }

  /**
   * 
   *  getAttrInvokeAccessor: generated method. Do not modify.
   */
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

  /**
   * 
   *  setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param codsdosps key constituent
     * @param tipoFlusso key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String codsdosps, String tipoFlusso) {
        return new Key(new Object[] { codsdosps, tipoFlusso });
    }


}
