package model.conf;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;

import oracle.jbo.Key;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---    Warning: Do not modify method signatures of generated methods.
//  ---------------------------------------------------------------------

public class Cnf_SoCnfTrialBraccioImpl extends EntityImpl {


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        IdbraccioTrial,
        Idtrial,
        Tpscr,
        Descr,
        Descrbreve;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int IDBRACCIOTRIAL = AttributesEnum.IdbraccioTrial.index();
    public static final int IDTRIAL = AttributesEnum.Idtrial.index();
    public static final int TPSCR = AttributesEnum.Tpscr.index();
    public static final int DESCR = AttributesEnum.Descr.index();
    public static final int DESCRBREVE = AttributesEnum.Descrbreve.index();

    /**
     *
     *  This is the default constructor (do not remove)
     */
	public Cnf_SoCnfTrialBraccioImpl() {
	}

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.conf.Cnf_SoCnfTrialBraccio");
    }


    /**
     *
     *  Gets the attribute value for IdbraccioTrial, using the alias name IdbraccioTrial
     */
	public Integer getIdbraccioTrial() {
		return (Integer)getAttributeInternal(IDBRACCIOTRIAL);
	}

	/**
	 * 
	 *  Sets <code>value</code> as the attribute value for IdbraccioTrial
	 */
	public void setIdbraccioTrial(Integer value) {
		setAttributeInternal(IDBRACCIOTRIAL, value);
	}

	/**
	 * 
	 *  Gets the attribute value for Idtrial, using the alias name Idtrial
	 */
	public Integer getIdtrial() {
		return (Integer)getAttributeInternal(IDTRIAL);
	}

	/**
	 * 
	 *  Sets <code>value</code> as the attribute value for Idtrial
	 */
	public void setIdtrial(Integer value) {
		setAttributeInternal(IDTRIAL, value);
	}

	/**
	 * 
	 *  Gets the attribute value for Tpscr, using the alias name Tpscr
	 */
	public String getTpscr() {
		return (String)getAttributeInternal(TPSCR);
	}

	/**
	 * 
	 *  Sets <code>value</code> as the attribute value for Tpscr
	 */
	public void setTpscr(String value) {
		setAttributeInternal(TPSCR, value);
	}

	/**
	 * 
	 *  Gets the attribute value for Descr, using the alias name Descr
	 */
	public String getDescr() {
		return (String)getAttributeInternal(DESCR);
	}

	/**
	 * 
	 *  Sets <code>value</code> as the attribute value for Descr
	 */
	public void setDescr(String value) {
		setAttributeInternal(DESCR, value);
	}

	/**
	 * 
	 *  Gets the attribute value for Descrbreve, using the alias name Descrbreve
	 */
	public String getDescrbreve() {
		return (String)getAttributeInternal(DESCRBREVE);
	}

	/**
	 * 
	 *  Sets <code>value</code> as the attribute value for Descrbreve
	 */
	public void setDescrbreve(String value) {
		setAttributeInternal(DESCRBREVE, value);
	}

    /**
     * @param idbraccioTrial key constituent
     * @param idtrial key constituent
     * @param tpscr key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer idbraccioTrial, Integer idtrial, String tpscr) {
        return new Key(new Object[] { idbraccioTrial, idtrial, tpscr });
    }


}
