package model.conf;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jan 23 11:15:33 CET 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class Cnf_SoTemplateImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Codtempl {
            public Object get(Cnf_SoTemplateImpl obj) {
                return obj.getCodtempl();
            }

            public void put(Cnf_SoTemplateImpl obj, Object value) {
                obj.setCodtempl((Integer) value);
            }
        }
        ,
        Idtplettera {
            public Object get(Cnf_SoTemplateImpl obj) {
                return obj.getIdtplettera();
            }

            public void put(Cnf_SoTemplateImpl obj, Object value) {
                obj.setIdtplettera((Integer) value);
            }
        }
        ,
        Codtemplreg {
            public Object get(Cnf_SoTemplateImpl obj) {
                return obj.getCodtemplreg();
            }

            public void put(Cnf_SoTemplateImpl obj, Object value) {
                obj.setCodtemplreg((Integer) value);
            }
        }
        ,
        Nomefile {
            public Object get(Cnf_SoTemplateImpl obj) {
                return obj.getNomefile();
            }

            public void put(Cnf_SoTemplateImpl obj, Object value) {
                obj.setNomefile((String) value);
            }
        }
        ,
        Filexml {
            public Object get(Cnf_SoTemplateImpl obj) {
                return obj.getFilexml();
            }

            public void put(Cnf_SoTemplateImpl obj, Object value) {
                obj.setFilexml((BlobDomain) value);
            }
        }
        ,
        Dtcreazione {
            public Object get(Cnf_SoTemplateImpl obj) {
                return obj.getDtcreazione();
            }

            public void put(Cnf_SoTemplateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Autore {
            public Object get(Cnf_SoTemplateImpl obj) {
                return obj.getAutore();
            }

            public void put(Cnf_SoTemplateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Dtultmod {
            public Object get(Cnf_SoTemplateImpl obj) {
                return obj.getDtultmod();
            }

            public void put(Cnf_SoTemplateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Opultmod {
            public Object get(Cnf_SoTemplateImpl obj) {
                return obj.getOpultmod();
            }

            public void put(Cnf_SoTemplateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Dtfinevaltempl {
            public Object get(Cnf_SoTemplateImpl obj) {
                return obj.getDtfinevaltempl();
            }

            public void put(Cnf_SoTemplateImpl obj, Object value) {
                obj.setDtfinevaltempl((Date) value);
            }
        }
        ,
        Ulss {
            public Object get(Cnf_SoTemplateImpl obj) {
                return obj.getUlss();
            }

            public void put(Cnf_SoTemplateImpl obj, Object value) {
                obj.setUlss((String) value);
            }
        }
        ,
        Tpscr {
            public Object get(Cnf_SoTemplateImpl obj) {
                return obj.getTpscr();
            }

            public void put(Cnf_SoTemplateImpl obj, Object value) {
                obj.setTpscr((String) value);
            }
        }
        ,
        Descrizione {
            public Object get(Cnf_SoTemplateImpl obj) {
                return obj.getDescrizione();
            }

            public void put(Cnf_SoTemplateImpl obj, Object value) {
                obj.setDescrizione((String) value);
            }
        }
        ,
        Compiled {
            public Object get(Cnf_SoTemplateImpl obj) {
                return obj.getCompiled();
            }

            public void put(Cnf_SoTemplateImpl obj, Object value) {
                obj.setCompiled((BlobDomain) value);
            }
        }
        ,
        Cnf_SoCnfTplettera {
            public Object get(Cnf_SoTemplateImpl obj) {
                return obj.getCnf_SoCnfTplettera();
            }

            public void put(Cnf_SoTemplateImpl obj, Object value) {
                obj.setCnf_SoCnfTplettera((Cnf_SoCnfTpletteraImpl) value);
            }
        }
        ,
        CodtemplregCnf_SoTemplate {
            public Object get(Cnf_SoTemplateImpl obj) {
                return obj.getCodtemplregCnf_SoTemplate();
            }

            public void put(Cnf_SoTemplateImpl obj, Object value) {
                obj.setCodtemplregCnf_SoTemplate((Cnf_SoTemplateImpl) value);
            }
        }
        ,
        Cnf_SoCnfLetteracentro {
            public Object get(Cnf_SoTemplateImpl obj) {
                return obj.getCnf_SoCnfLetteracentro();
            }

            public void put(Cnf_SoTemplateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Cnf_SoTemplate {
            public Object get(Cnf_SoTemplateImpl obj) {
                return obj.getCnf_SoTemplate();
            }

            public void put(Cnf_SoTemplateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Cnf_SoFiltriTemplate {
            public Object get(Cnf_SoTemplateImpl obj) {
                return obj.getCnf_SoFiltriTemplate();
            }

            public void put(Cnf_SoTemplateImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(Cnf_SoTemplateImpl object);

        public abstract void put(Cnf_SoTemplateImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CODTEMPL = AttributesEnum.Codtempl.index();
    public static final int IDTPLETTERA = AttributesEnum.Idtplettera.index();
    public static final int CODTEMPLREG = AttributesEnum.Codtemplreg.index();
    public static final int NOMEFILE = AttributesEnum.Nomefile.index();
    public static final int FILEXML = AttributesEnum.Filexml.index();
    public static final int DTCREAZIONE = AttributesEnum.Dtcreazione.index();
    public static final int AUTORE = AttributesEnum.Autore.index();
    public static final int DTULTMOD = AttributesEnum.Dtultmod.index();
    public static final int OPULTMOD = AttributesEnum.Opultmod.index();
    public static final int DTFINEVALTEMPL = AttributesEnum.Dtfinevaltempl.index();
    public static final int ULSS = AttributesEnum.Ulss.index();
    public static final int TPSCR = AttributesEnum.Tpscr.index();
    public static final int DESCRIZIONE = AttributesEnum.Descrizione.index();
    public static final int COMPILED = AttributesEnum.Compiled.index();
    public static final int CNF_SOCNFTPLETTERA = AttributesEnum.Cnf_SoCnfTplettera.index();
    public static final int CODTEMPLREGCNF_SOTEMPLATE = AttributesEnum.CodtemplregCnf_SoTemplate.index();
    public static final int CNF_SOCNFLETTERACENTRO = AttributesEnum.Cnf_SoCnfLetteracentro.index();
    public static final int CNF_SOTEMPLATE = AttributesEnum.Cnf_SoTemplate.index();
    public static final int CNF_SOFILTRITEMPLATE = AttributesEnum.Cnf_SoFiltriTemplate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public Cnf_SoTemplateImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.conf.Cnf_SoTemplate");
    }

    @Override
    protected Object getHistoryContextForAttribute(AttributeDefImpl attr) {
            byte historyKind = attr.getHistoryKind();

            if ((historyKind == AttributeDefImpl.HISTORY_CREATE_USER) || (historyKind == AttributeDefImpl.HISTORY_MODIFY_USER)) {
                    return ADFContext.getCurrent().getSessionScope().get("user");
            }
            return super.getHistoryContextForAttribute(attr);
    }
    
    protected void doDML(int operation, TransactionEvent e)
      {
        if(operation==this.DML_INSERT)
        {//inserisco il codice da sequenza
          SequenceImpl s = new SequenceImpl("SO_TEMPLATE_SEQ", getDBTransaction());     
          this.setCodtempl(s.getSequenceNumber().intValue()); 
        }
          
        super.doDML(operation, e);
      }

    /**
     * Gets the attribute value for Codtempl, using the alias name Codtempl.
     * @return the value of Codtempl
     */
    public Integer getCodtempl() {
        return (Integer) getAttributeInternal(CODTEMPL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Codtempl.
     * @param value value to set the Codtempl
     */
    public void setCodtempl(Integer value) {
        setAttributeInternal(CODTEMPL, value);
    }

    /**
     * Gets the attribute value for Idtplettera, using the alias name Idtplettera.
     * @return the value of Idtplettera
     */
    public Integer getIdtplettera() {
        return (Integer) getAttributeInternal(IDTPLETTERA);
    }

    /**
     * Sets <code>value</code> as the attribute value for Idtplettera.
     * @param value value to set the Idtplettera
     */
    public void setIdtplettera(Integer value) {
        setAttributeInternal(IDTPLETTERA, value);
    }

    /**
     * Gets the attribute value for Codtemplreg, using the alias name Codtemplreg.
     * @return the value of Codtemplreg
     */
    public Integer getCodtemplreg() {
        return (Integer) getAttributeInternal(CODTEMPLREG);
    }

    /**
     * Sets <code>value</code> as the attribute value for Codtemplreg.
     * @param value value to set the Codtemplreg
     */
    public void setCodtemplreg(Integer value) {
        setAttributeInternal(CODTEMPLREG, value);
    }

    /**
     * Gets the attribute value for Nomefile, using the alias name Nomefile.
     * @return the value of Nomefile
     */
    public String getNomefile() {
        return (String) getAttributeInternal(NOMEFILE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Nomefile.
     * @param value value to set the Nomefile
     */
    public void setNomefile(String value) {
        setAttributeInternal(NOMEFILE, value);
    }

    /**
     * Gets the attribute value for Filexml, using the alias name Filexml.
     * @return the value of Filexml
     */
    public BlobDomain getFilexml() {
        return (BlobDomain) getAttributeInternal(FILEXML);
    }

    /**
     * Sets <code>value</code> as the attribute value for Filexml.
     * @param value value to set the Filexml
     */
    public void setFilexml(BlobDomain value) {
        setAttributeInternal(FILEXML, value);
    }

    /**
     * Gets the attribute value for Dtcreazione, using the alias name Dtcreazione.
     * @return the value of Dtcreazione
     */
    public Date getDtcreazione() {
        return (Date) getAttributeInternal(DTCREAZIONE);
    }

    /**
     * Gets the attribute value for Autore, using the alias name Autore.
     * @return the value of Autore
     */
    public String getAutore() {
        return (String) getAttributeInternal(AUTORE);
    }

    /**
     * Gets the attribute value for Dtultmod, using the alias name Dtultmod.
     * @return the value of Dtultmod
     */
    public Date getDtultmod() {
        return (Date) getAttributeInternal(DTULTMOD);
    }

    /**
     * Gets the attribute value for Opultmod, using the alias name Opultmod.
     * @return the value of Opultmod
     */
    public String getOpultmod() {
        return (String) getAttributeInternal(OPULTMOD);
    }

    /**
     * Gets the attribute value for Dtfinevaltempl, using the alias name Dtfinevaltempl.
     * @return the value of Dtfinevaltempl
     */
    public Date getDtfinevaltempl() {
        return (Date) getAttributeInternal(DTFINEVALTEMPL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dtfinevaltempl.
     * @param value value to set the Dtfinevaltempl
     */
    public void setDtfinevaltempl(Date value) {
        setAttributeInternal(DTFINEVALTEMPL, value);
    }

    /**
     * Gets the attribute value for Ulss, using the alias name Ulss.
     * @return the value of Ulss
     */
    public String getUlss() {
        return (String) getAttributeInternal(ULSS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ulss.
     * @param value value to set the Ulss
     */
    public void setUlss(String value) {
        setAttributeInternal(ULSS, value);
    }

    /**
     * Gets the attribute value for Tpscr, using the alias name Tpscr.
     * @return the value of Tpscr
     */
    public String getTpscr() {
        return (String) getAttributeInternal(TPSCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for Tpscr.
     * @param value value to set the Tpscr
     */
    public void setTpscr(String value) {
        setAttributeInternal(TPSCR, value);
    }

    /**
     * Gets the attribute value for Descrizione, using the alias name Descrizione.
     * @return the value of Descrizione
     */
    public String getDescrizione() {
        return (String) getAttributeInternal(DESCRIZIONE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Descrizione.
     * @param value value to set the Descrizione
     */
    public void setDescrizione(String value) {
        setAttributeInternal(DESCRIZIONE, value);
    }

    /**
     * Gets the attribute value for Compiled, using the alias name Compiled.
     * @return the value of Compiled
     */
    public BlobDomain getCompiled() {
        return (BlobDomain) getAttributeInternal(COMPILED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Compiled.
     * @param value value to set the Compiled
     */
    public void setCompiled(BlobDomain value) {
        setAttributeInternal(COMPILED, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity Cnf_SoCnfTpletteraImpl.
     */
    public Cnf_SoCnfTpletteraImpl getCnf_SoCnfTplettera() {
        return (Cnf_SoCnfTpletteraImpl) getAttributeInternal(CNF_SOCNFTPLETTERA);
    }

    /**
     * Sets <code>value</code> as the associated entity Cnf_SoCnfTpletteraImpl.
     */
    public void setCnf_SoCnfTplettera(Cnf_SoCnfTpletteraImpl value) {
        setAttributeInternal(CNF_SOCNFTPLETTERA, value);
    }

    /**
     * @return the associated entity Cnf_SoTemplateImpl.
     */
    public Cnf_SoTemplateImpl getCodtemplregCnf_SoTemplate() {
        return (Cnf_SoTemplateImpl) getAttributeInternal(CODTEMPLREGCNF_SOTEMPLATE);
    }

    /**
     * Sets <code>value</code> as the associated entity Cnf_SoTemplateImpl.
     */
    public void setCodtemplregCnf_SoTemplate(Cnf_SoTemplateImpl value) {
        setAttributeInternal(CODTEMPLREGCNF_SOTEMPLATE, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getCnf_SoCnfLetteracentro() {
        return (RowIterator) getAttributeInternal(CNF_SOCNFLETTERACENTRO);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getCnf_SoTemplate() {
        return (RowIterator) getAttributeInternal(CNF_SOTEMPLATE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getCnf_SoFiltriTemplate() {
        return (RowIterator) getAttributeInternal(CNF_SOFILTRITEMPLATE);
    }

    /**
     * @param codtempl key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer codtempl) {
        return new Key(new Object[] { codtempl });
    }

}

