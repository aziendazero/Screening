package model.conf;


import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.Key;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---    Warning: Do not modify method signatures of generated methods.
//  ---------------------------------------------------------------------

public class Cnf_SoUtentiCentriImpl extends EntityImpl {


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Utente {
            public Object get(Cnf_SoUtentiCentriImpl obj) {
                return obj.getUtente();
            }

            public void put(Cnf_SoUtentiCentriImpl obj, Object value) {
                obj.setUtente((String)value);
            }
        }
        ,
        Idcentrof {
            public Object get(Cnf_SoUtentiCentriImpl obj) {
                return obj.getIdcentrof();
            }

            public void put(Cnf_SoUtentiCentriImpl obj, Object value) {
                obj.setIdcentrof((Integer)value);
            }
        }
        ,
        Ulss {
            public Object get(Cnf_SoUtentiCentriImpl obj) {
                return obj.getUlss();
            }

            public void put(Cnf_SoUtentiCentriImpl obj, Object value) {
                obj.setUlss((String)value);
            }
        }
        ,
        Tpscr {
            public Object get(Cnf_SoUtentiCentriImpl obj) {
                return obj.getTpscr();
            }

            public void put(Cnf_SoUtentiCentriImpl obj, Object value) {
                obj.setTpscr((String)value);
            }
        }
        ,
        Note {
            public Object get(Cnf_SoUtentiCentriImpl obj) {
                return obj.getNote();
            }

            public void put(Cnf_SoUtentiCentriImpl obj, Object value) {
                obj.setNote((String)value);
            }
        }
        ,
        Cnf_SoCnfCentroFisico {
            public Object get(Cnf_SoUtentiCentriImpl obj) {
                return obj.getCnf_SoCnfCentroFisico();
            }

            public void put(Cnf_SoUtentiCentriImpl obj, Object value) {
                obj.setCnf_SoCnfCentroFisico((Cnf_SoCnfCentroFisicoImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(Cnf_SoUtentiCentriImpl object);

        public abstract void put(Cnf_SoUtentiCentriImpl object, Object value);

        public int index() {
            return Cnf_SoUtentiCentriImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return Cnf_SoUtentiCentriImpl.AttributesEnum.firstIndex() + Cnf_SoUtentiCentriImpl.AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = Cnf_SoUtentiCentriImpl.AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int UTENTE = AttributesEnum.Utente.index();
    public static final int IDCENTROF = AttributesEnum.Idcentrof.index();
    public static final int ULSS = AttributesEnum.Ulss.index();
    public static final int TPSCR = AttributesEnum.Tpscr.index();
    public static final int NOTE = AttributesEnum.Note.index();
    public static final int CNF_SOCNFCENTROFISICO = AttributesEnum.Cnf_SoCnfCentroFisico.index();

    /**
     *
     *  This is the default constructor (do not remove)
     */
  public Cnf_SoUtentiCentriImpl()
  {
  }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.Cnf_SoUtentiCentri");
    }

    /**
     *
     *  Gets the attribute value for Utente, using the alias name Utente
     */
    public String getUtente()
  {
    return (String)getAttributeInternal(UTENTE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Utente
   */
  public void setUtente(String value)
  {
    setAttributeInternal(UTENTE, value);
  }

  /**
   * 
   *  Gets the attribute value for Idcentrof, using the alias name Idcentrof
   */
  public Integer getIdcentrof()
  {
    return (Integer)getAttributeInternal(IDCENTROF);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Idcentrof
   */
  public void setIdcentrof(Integer value)
  {
    setAttributeInternal(IDCENTROF, value);
  }

  /**
   * 
   *  Gets the attribute value for Ulss, using the alias name Ulss
   */
  public String getUlss()
  {
    return (String)getAttributeInternal(ULSS);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Ulss
   */
  public void setUlss(String value)
  {
    setAttributeInternal(ULSS, value);
  }

  /**
   * 
   *  Gets the attribute value for Tpscr, using the alias name Tpscr
   */
  public String getTpscr()
  {
    return (String)getAttributeInternal(TPSCR);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Tpscr
   */
  public void setTpscr(String value)
  {
    setAttributeInternal(TPSCR, value);
  }

  /**
   * 
   *  Gets the attribute value for Note, using the alias name Note
   */
  public String getNote()
  {
    return (String)getAttributeInternal(NOTE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Note
   */
  public void setNote(String value)
  {
    setAttributeInternal(NOTE, value);
  }

  /**
   * 
   *  getAttrInvokeAccessor: generated method. Do not modify.
   */
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

  /**
   * 
   *  setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

  /**
   * 
   *  Gets the associated entity Cnf_SoCnfCentroFisicoImpl
   */
  public Cnf_SoCnfCentroFisicoImpl getCnf_SoCnfCentroFisico()
  {
    return (Cnf_SoCnfCentroFisicoImpl)getAttributeInternal(CNF_SOCNFCENTROFISICO);
  }

  /**
   * 
   *  Sets <code>value</code> as the associated entity Cnf_SoCnfCentroFisicoImpl
   */
  public void setCnf_SoCnfCentroFisico(Cnf_SoCnfCentroFisicoImpl value)
  {
    setAttributeInternal(CNF_SOCNFCENTROFISICO, value);
  }

    /**
     * @param utente key constituent
     * @param idcentrof key constituent
     * @param ulss key constituent
     * @param tpscr key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String utente, Integer idcentrof, String ulss, String tpscr) {
        return new Key(new Object[]{utente, idcentrof, ulss, tpscr});
    }


}
