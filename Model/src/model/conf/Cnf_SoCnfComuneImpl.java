package model.conf;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Date;
import oracle.jbo.Key;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---    Warning: Do not modify method signatures of generated methods.
//  ---------------------------------------------------------------------

public class Cnf_SoCnfComuneImpl extends EntityImpl {


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Idcnf {
            public Object get(Cnf_SoCnfComuneImpl obj) {
                return obj.getIdcnf();
            }

            public void put(Cnf_SoCnfComuneImpl obj, Object value) {
                obj.setIdcnf((Integer) value);
            }
        }
        ,
        Codcom {
            public Object get(Cnf_SoCnfComuneImpl obj) {
                return obj.getCodcom();
            }

            public void put(Cnf_SoCnfComuneImpl obj, Object value) {
                obj.setCodcom((String) value);
            }
        }
        ,
        Idcentro1liv {
            public Object get(Cnf_SoCnfComuneImpl obj) {
                return obj.getIdcentro1liv();
            }

            public void put(Cnf_SoCnfComuneImpl obj, Object value) {
                obj.setIdcentro1liv((Integer) value);
            }
        }
        ,
        Idcentro2liv {
            public Object get(Cnf_SoCnfComuneImpl obj) {
                return obj.getIdcentro2liv();
            }

            public void put(Cnf_SoCnfComuneImpl obj, Object value) {
                obj.setIdcentro2liv((Integer) value);
            }
        }
        ,
        Tpscr {
            public Object get(Cnf_SoCnfComuneImpl obj) {
                return obj.getTpscr();
            }

            public void put(Cnf_SoCnfComuneImpl obj, Object value) {
                obj.setTpscr((String) value);
            }
        }
        ,
        ReleaseCodeCom {
            public Object get(Cnf_SoCnfComuneImpl obj) {
                return obj.getReleaseCodeCom();
            }

            public void put(Cnf_SoCnfComuneImpl obj, Object value) {
                obj.setReleaseCodeCom((Integer) value);
            }
        }
        ,
        Cnf_SoCentroPrelRef {
            public Object get(Cnf_SoCnfComuneImpl obj) {
                return obj.getCnf_SoCentroPrelRef();
            }

            public void put(Cnf_SoCnfComuneImpl obj, Object value) {
                obj.setCnf_SoCentroPrelRef((Cnf_SoCentroPrelRefImpl) value);
            }
        }
        ,
        Cnf_SoCentroPrelRef1 {
            public Object get(Cnf_SoCnfComuneImpl obj) {
                return obj.getCnf_SoCentroPrelRef1();
            }

            public void put(Cnf_SoCnfComuneImpl obj, Object value) {
                obj.setCnf_SoCentroPrelRef1((Cnf_SoCentroPrelRefImpl) value);
            }
        }
        ,
        Cnf_SoComune {
            public Object get(Cnf_SoCnfComuneImpl obj) {
                return obj.getCnf_SoComune();
            }

            public void put(Cnf_SoCnfComuneImpl obj, Object value) {
                obj.setCnf_SoComune((Cnf_SoComuneImpl) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(Cnf_SoCnfComuneImpl object);

        public abstract void put(Cnf_SoCnfComuneImpl object, Object value);

        public int index() {
            return Cnf_SoCnfComuneImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return Cnf_SoCnfComuneImpl.AttributesEnum.firstIndex() + Cnf_SoCnfComuneImpl.AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = Cnf_SoCnfComuneImpl.AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int IDCNF = AttributesEnum.Idcnf.index();
    public static final int CODCOM = AttributesEnum.Codcom.index();
    public static final int IDCENTRO1LIV = AttributesEnum.Idcentro1liv.index();
    public static final int IDCENTRO2LIV = AttributesEnum.Idcentro2liv.index();
    public static final int TPSCR = AttributesEnum.Tpscr.index();
    public static final int RELEASECODECOM = AttributesEnum.ReleaseCodeCom.index();
    public static final int CNF_SOCENTROPRELREF = AttributesEnum.Cnf_SoCentroPrelRef.index();
    public static final int CNF_SOCENTROPRELREF1 = AttributesEnum.Cnf_SoCentroPrelRef1.index();
    public static final int CNF_SOCOMUNE = AttributesEnum.Cnf_SoComune.index();

    /**
     *
     *  This is the default constructor (do not remove)
     */
  public Cnf_SoCnfComuneImpl()
  {
  }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.conf.Cnf_SoCnfComune");
    }


    /**
     *
     *  Gets the attribute value for Idcnf, using the alias name Idcnf
     */
    public Integer getIdcnf()
  {
    return (Integer)getAttributeInternal(IDCNF);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Idcnf
   */
  public void setIdcnf(Integer value)
  {
    setAttributeInternal(IDCNF, value);
  }

  /**
   * 
   *  Gets the attribute value for Codcom, using the alias name Codcom
   */
  public String getCodcom()
  {
    return (String)getAttributeInternal(CODCOM);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Codcom
   */
  public void setCodcom(String value)
  {
    setAttributeInternal(CODCOM, value);
  }

  /**
   * 
   *  Gets the attribute value for Idcentro1liv, using the alias name Idcentro1liv
   */
  public Integer getIdcentro1liv()
  {
    return (Integer)getAttributeInternal(IDCENTRO1LIV);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Idcentro1liv
   */
  public void setIdcentro1liv(Integer value)
  {
    setAttributeInternal(IDCENTRO1LIV, value);
  }

  /**
   * 
   *  Gets the attribute value for Idcentro2liv, using the alias name Idcentro2liv
   */
  public Integer getIdcentro2liv()
  {
    return (Integer)getAttributeInternal(IDCENTRO2LIV);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Idcentro2liv
   */
  public void setIdcentro2liv(Integer value)
  {
    setAttributeInternal(IDCENTRO2LIV, value);
  }







  /**
   * 
   *  Gets the attribute value for Tpscr, using the alias name Tpscr
   */
  public String getTpscr()
  {
    return (String)getAttributeInternal(TPSCR);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Tpscr
   */
  public void setTpscr(String value)
  {
    setAttributeInternal(TPSCR, value);
  }

    /**
     * Gets the attribute value for ReleaseCodeCom, using the alias name ReleaseCodeCom.
     * @return the value of ReleaseCodeCom
     */
    public Integer getReleaseCodeCom() {
        return (Integer) getAttributeInternal(RELEASECODECOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReleaseCodeCom.
     * @param value value to set the ReleaseCodeCom
     */
    public void setReleaseCodeCom(Integer value) {
        setAttributeInternal(RELEASECODECOM, value);
    }

    /**
     *
     *  getAttrInvokeAccessor: generated method. Do not modify.
     */
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

  /**
   * 
   *  setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }



  /**
   * 
   *  Gets the associated entity Cnf_SoCentroPrelRefImpl
   */
  public Cnf_SoCentroPrelRefImpl getCnf_SoCentroPrelRef()
  {
    return (Cnf_SoCentroPrelRefImpl)getAttributeInternal(CNF_SOCENTROPRELREF);
  }

  /**
   * 
   *  Sets <code>value</code> as the associated entity Cnf_SoCentroPrelRefImpl
   */
  public void setCnf_SoCentroPrelRef(Cnf_SoCentroPrelRefImpl value)
  {
    setAttributeInternal(CNF_SOCENTROPRELREF, value);
  }

  /**
   * 
   *  Gets the associated entity Cnf_SoCentroPrelRefImpl
   */
  public Cnf_SoCentroPrelRefImpl getCnf_SoCentroPrelRef1()
  {
    return (Cnf_SoCentroPrelRefImpl)getAttributeInternal(CNF_SOCENTROPRELREF1);
  }

  /**
   * 
   *  Sets <code>value</code> as the associated entity Cnf_SoCentroPrelRefImpl
   */
  public void setCnf_SoCentroPrelRef1(Cnf_SoCentroPrelRefImpl value)
  {
    setAttributeInternal(CNF_SOCENTROPRELREF1, value);
  }


  /**
   * 
   *  Gets the associated entity Cnf_SoComuneImpl
   */
  public Cnf_SoComuneImpl getCnf_SoComune()
  {
    return (Cnf_SoComuneImpl)getAttributeInternal(CNF_SOCOMUNE);
  }

  /**
   * 
   *  Sets <code>value</code> as the associated entity Cnf_SoComuneImpl
   */
  public void setCnf_SoComune(Cnf_SoComuneImpl value)
  {
    setAttributeInternal(CNF_SOCOMUNE, value);
  }


    /**
     * @param idcnf key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer idcnf) {
        return new Key(new Object[] { idcnf });
    }

    protected void doDML(int operation, TransactionEvent e) {
        if(operation==this.DML_INSERT){
            //inserisco il codice da sequenza
            SequenceImpl s = new SequenceImpl("SO_CONF_COMUNI_SEQ", getDBTransaction());     
            this.setIdcnf(s.getSequenceNumber().intValue());
        }  
        super.doDML(operation, e);
  }


}
