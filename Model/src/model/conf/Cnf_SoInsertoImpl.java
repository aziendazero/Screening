package model.conf;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeDef;
import oracle.jbo.AttributeList;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.Date;
import oracle.jbo.Key;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---    Warning: Do not modify method signatures of generated methods.
//  ---------------------------------------------------------------------

public class Cnf_SoInsertoImpl extends EntityImpl {


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Idinserto {
            public Object get(Cnf_SoInsertoImpl obj) {
                return obj.getIdinserto();
            }

            public void put(Cnf_SoInsertoImpl obj, Object value) {
                obj.setIdinserto((Integer) value);
            }
        }
        ,
        Nomefile {
            public Object get(Cnf_SoInsertoImpl obj) {
                return obj.getNomefile();
            }

            public void put(Cnf_SoInsertoImpl obj, Object value) {
                obj.setNomefile((String) value);
            }
        }
        ,
        Inserto {
            public Object get(Cnf_SoInsertoImpl obj) {
                return obj.getInserto();
            }

            public void put(Cnf_SoInsertoImpl obj, Object value) {
                obj.setInserto((BlobDomain) value);
            }
        }
        ,
        Descrizione {
            public Object get(Cnf_SoInsertoImpl obj) {
                return obj.getDescrizione();
            }

            public void put(Cnf_SoInsertoImpl obj, Object value) {
                obj.setDescrizione((String) value);
            }
        }
        ,
        Ulss {
            public Object get(Cnf_SoInsertoImpl obj) {
                return obj.getUlss();
            }

            public void put(Cnf_SoInsertoImpl obj, Object value) {
                obj.setUlss((String) value);
            }
        }
        ,
        Tpscr {
            public Object get(Cnf_SoInsertoImpl obj) {
                return obj.getTpscr();
            }

            public void put(Cnf_SoInsertoImpl obj, Object value) {
                obj.setTpscr((String) value);
            }
        }
        ,
        Dtinserimento {
            public Object get(Cnf_SoInsertoImpl obj) {
                return obj.getDtinserimento();
            }

            public void put(Cnf_SoInsertoImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Opinserimento {
            public Object get(Cnf_SoInsertoImpl obj) {
                return obj.getOpinserimento();
            }

            public void put(Cnf_SoInsertoImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Dtultmodifica {
            public Object get(Cnf_SoInsertoImpl obj) {
                return obj.getDtultmodifica();
            }

            public void put(Cnf_SoInsertoImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Opultmodifica {
            public Object get(Cnf_SoInsertoImpl obj) {
                return obj.getOpultmodifica();
            }

            public void put(Cnf_SoInsertoImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(Cnf_SoInsertoImpl object);

        public abstract void put(Cnf_SoInsertoImpl object, Object value);

        public int index() {
            return Cnf_SoInsertoImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return Cnf_SoInsertoImpl.AttributesEnum.firstIndex() + Cnf_SoInsertoImpl.AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = Cnf_SoInsertoImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int IDINSERTO = AttributesEnum.Idinserto.index();
    public static final int NOMEFILE = AttributesEnum.Nomefile.index();
    public static final int INSERTO = AttributesEnum.Inserto.index();
    public static final int DESCRIZIONE = AttributesEnum.Descrizione.index();
    public static final int ULSS = AttributesEnum.Ulss.index();
    public static final int TPSCR = AttributesEnum.Tpscr.index();
    public static final int DTINSERIMENTO = AttributesEnum.Dtinserimento.index();
    public static final int OPINSERIMENTO = AttributesEnum.Opinserimento.index();
    public static final int DTULTMODIFICA = AttributesEnum.Dtultmodifica.index();
    public static final int OPULTMODIFICA = AttributesEnum.Opultmodifica.index();

    /**
     *
     *  This is the default constructor (do not remove)
     */
  public Cnf_SoInsertoImpl()
  {
  }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.conf.Cnf_SoInserto");
    }

    @Override
    protected Object getHistoryContextForAttribute(AttributeDefImpl attr) {
            byte historyKind = attr.getHistoryKind();

            if ((historyKind == AttributeDefImpl.HISTORY_CREATE_USER) || (historyKind == AttributeDefImpl.HISTORY_MODIFY_USER)) {
                    return ADFContext.getCurrent().getSessionScope().get("user");
            }
            return super.getHistoryContextForAttribute(attr);
    }
    
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == this.DML_INSERT) { //inserisco il codice da sequenza
            SequenceImpl s = new SequenceImpl("SO_INSERTI_SEQ", getDBTransaction());
            this.setIdinserto(s.getSequenceNumber().intValue());
        }

        super.doDML(operation, e);
    }

    /**
     *
     *  Gets the attribute value for Idinserto, using the alias name Idinserto
     */
    public Integer getIdinserto() {
        if (getAttributeInternal(IDINSERTO) == null) {
            SequenceImpl s = new SequenceImpl("SO_INSERTI_SEQ", getDBTransaction());
            this.setIdinserto(s.getSequenceNumber().intValue());
        }
        return (Integer) getAttributeInternal(IDINSERTO);
    }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Idinserto
   */
  public void setIdinserto(Integer value)
  {
    setAttributeInternal(IDINSERTO, value);
  }

  /**
   * 
   *  Gets the attribute value for Nomefile, using the alias name Nomefile
   */
  public String getNomefile()
  {
    return (String)getAttributeInternal(NOMEFILE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Nomefile
   */
  public void setNomefile(String value)
  {
    setAttributeInternal(NOMEFILE, value);
  }

  /**
   * 
   *  Gets the attribute value for Inserto, using the alias name Inserto
   */
  public BlobDomain getInserto()
  {
    return (BlobDomain)getAttributeInternal(INSERTO);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Inserto
   */
  public void setInserto(BlobDomain value)
  {
    setAttributeInternal(INSERTO, value);
  }

  /**
   * 
   *  Gets the attribute value for Descrizione, using the alias name Descrizione
   */
  public String getDescrizione()
  {
    return (String)getAttributeInternal(DESCRIZIONE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Descrizione
   */
  public void setDescrizione(String value)
  {
    setAttributeInternal(DESCRIZIONE, value);
  }

  /**
   * 
   *  Gets the attribute value for Ulss, using the alias name Ulss
   */
  public String getUlss()
  {
    return (String)getAttributeInternal(ULSS);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Ulss
   */
  public void setUlss(String value)
  {
    setAttributeInternal(ULSS, value);
  }

  /**
   * 
   *  Gets the attribute value for Tpscr, using the alias name Tpscr
   */
  public String getTpscr()
  {
    return (String)getAttributeInternal(TPSCR);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Tpscr
   */
  public void setTpscr(String value)
  {
    setAttributeInternal(TPSCR, value);
  }

  /**
     *
     *  Gets the attribute value for Dtinserimento, using the alias name Dtinserimento
     */
    public Date getDtinserimento()
  {
        return (Date) getAttributeInternal(DTINSERIMENTO);
    }


    /**
     *
     *  Gets the attribute value for Opinserimento, using the alias name Opinserimento
     */
  public String getOpinserimento()
  {
    return (String)getAttributeInternal(OPINSERIMENTO);
  }


    /**
     *
     *  Gets the attribute value for Dtultmodifica, using the alias name Dtultmodifica
     */
    public Date getDtultmodifica()
  {
        return (Date) getAttributeInternal(DTULTMODIFICA);
    }


    /**
     *
     *  Gets the attribute value for Opultmodifica, using the alias name Opultmodifica
     */
  public String getOpultmodifica()
  {
    return (String)getAttributeInternal(OPULTMODIFICA);
  }


    /**
     *
     *  getAttrInvokeAccessor: generated method. Do not modify.
     */
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

  /**
   * 
   *  setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param idinserto key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer idinserto) {
        return new Key(new Object[] { idinserto });
    }


}
