package model.conf;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Feb 09 10:02:46 CET 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class Cnf_SoCnfFestivitaImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Fst0 {
            public Object get(Cnf_SoCnfFestivitaImpl obj) {
                return obj.getFst0();
            }

            public void put(Cnf_SoCnfFestivitaImpl obj, Object value) {
                obj.setFst0((Integer) value);
            }
        }
        ,
        Ulss {
            public Object get(Cnf_SoCnfFestivitaImpl obj) {
                return obj.getUlss();
            }

            public void put(Cnf_SoCnfFestivitaImpl obj, Object value) {
                obj.setUlss((String) value);
            }
        }
        ,
        Giorno {
            public Object get(Cnf_SoCnfFestivitaImpl obj) {
                return obj.getGiorno();
            }

            public void put(Cnf_SoCnfFestivitaImpl obj, Object value) {
                obj.setGiorno((Integer) value);
            }
        }
        ,
        Mese {
            public Object get(Cnf_SoCnfFestivitaImpl obj) {
                return obj.getMese();
            }

            public void put(Cnf_SoCnfFestivitaImpl obj, Object value) {
                obj.setMese((Integer) value);
            }
        }
        ,
        Anno {
            public Object get(Cnf_SoCnfFestivitaImpl obj) {
                return obj.getAnno();
            }

            public void put(Cnf_SoCnfFestivitaImpl obj, Object value) {
                obj.setAnno((Integer) value);
            }
        }
        ,
        Annuale {
            public Object get(Cnf_SoCnfFestivitaImpl obj) {
                return obj.getAnnuale();
            }

            public void put(Cnf_SoCnfFestivitaImpl obj, Object value) {
                obj.setAnnuale((Boolean) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(Cnf_SoCnfFestivitaImpl object);

        public abstract void put(Cnf_SoCnfFestivitaImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int FST0 = AttributesEnum.Fst0.index();
    public static final int ULSS = AttributesEnum.Ulss.index();
    public static final int GIORNO = AttributesEnum.Giorno.index();
    public static final int MESE = AttributesEnum.Mese.index();
    public static final int ANNO = AttributesEnum.Anno.index();
    public static final int ANNUALE = AttributesEnum.Annuale.index();

    /**
     * This is the default constructor (do not remove).
     */
    public Cnf_SoCnfFestivitaImpl() {
    }

    /**
     * Gets the attribute value for Fst0, using the alias name Fst0.
     * @return the value of Fst0
     */
    public Integer getFst0() {
        return (Integer) getAttributeInternal(FST0);
    }

    /**
     * Sets <code>value</code> as the attribute value for Fst0.
     * @param value value to set the Fst0
     */
    public void setFst0(Integer value) {
        setAttributeInternal(FST0, value);
    }

    /**
     * Gets the attribute value for Ulss, using the alias name Ulss.
     * @return the value of Ulss
     */
    public String getUlss() {
        return (String) getAttributeInternal(ULSS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ulss.
     * @param value value to set the Ulss
     */
    public void setUlss(String value) {
        setAttributeInternal(ULSS, value);
    }

    /**
     * Gets the attribute value for Giorno, using the alias name Giorno.
     * @return the value of Giorno
     */
    public Integer getGiorno() {
        return (Integer) getAttributeInternal(GIORNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Giorno.
     * @param value value to set the Giorno
     */
    public void setGiorno(Integer value) {
        setAttributeInternal(GIORNO, value);
    }

    /**
     * Gets the attribute value for Mese, using the alias name Mese.
     * @return the value of Mese
     */
    public Integer getMese() {
        return (Integer) getAttributeInternal(MESE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Mese.
     * @param value value to set the Mese
     */
    public void setMese(Integer value) {
        setAttributeInternal(MESE, value);
    }

    /**
     * Gets the attribute value for Anno, using the alias name Anno.
     * @return the value of Anno
     */
    public Integer getAnno() {
        return (Integer) getAttributeInternal(ANNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Anno.
     * @param value value to set the Anno
     */
    public void setAnno(Integer value) {
        setAttributeInternal(ANNO, value);
    }

    /**
     * Gets the attribute value for Annuale, using the alias name Annuale.
     * @return the value of Annuale
     */
    public Boolean getAnnuale() {
        return (Boolean) getAttributeInternal(ANNUALE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Annuale.
     * @param value value to set the Annuale
     */
    public void setAnnuale(Boolean value) {
        setAttributeInternal(ANNUALE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param fst0 key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer fst0) {
        return new Key(new Object[] { fst0 });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.conf.Cnf_SoCnfFestivita");
    }


    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        
        SequenceImpl s = new SequenceImpl("SO_CNF_FESTIVITA_SEQ", getDBTransaction());     
        this.setFst0(s.getSequenceNumber().intValue()); 
    }
}

