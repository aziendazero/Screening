package model.conf;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---    Warning: Do not modify method signatures of generated methods.
//  ---------------------------------------------------------------------

public class Cnf_EsclProposteViewRowImpl extends ViewRowImpl implements model.common.Cnf_EsclProposteViewRow 
{


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Idcnfescl {
            public Object get(Cnf_EsclProposteViewRowImpl obj) {
                return obj.getIdcnfescl();
            }

            public void put(Cnf_EsclProposteViewRowImpl obj, Object value) {
                obj.setIdcnfescl((Integer) value);
            }
        }
        ,
        Descrizione {
            public Object get(Cnf_EsclProposteViewRowImpl obj) {
                return obj.getDescrizione();
            }

            public void put(Cnf_EsclProposteViewRowImpl obj, Object value) {
                obj.setDescrizione((String) value);
            }
        }
        ,
        TipoEscl {
            public Object get(Cnf_EsclProposteViewRowImpl obj) {
                return obj.getTipoEscl();
            }

            public void put(Cnf_EsclProposteViewRowImpl obj, Object value) {
                obj.setTipoEscl((String) value);
            }
        }
        ,
        Numgiorni {
            public Object get(Cnf_EsclProposteViewRowImpl obj) {
                return obj.getNumgiorni();
            }

            public void put(Cnf_EsclProposteViewRowImpl obj, Object value) {
                obj.setNumgiorni((Integer) value);
            }
        }
        ,
        Codregionale {
            public Object get(Cnf_EsclProposteViewRowImpl obj) {
                return obj.getCodregionale();
            }

            public void put(Cnf_EsclProposteViewRowImpl obj, Object value) {
                obj.setCodregionale((Integer) value);
            }
        }
        ,
        Ulss {
            public Object get(Cnf_EsclProposteViewRowImpl obj) {
                return obj.getUlss();
            }

            public void put(Cnf_EsclProposteViewRowImpl obj, Object value) {
                obj.setUlss((String) value);
            }
        }
        ,
        Tpscr {
            public Object get(Cnf_EsclProposteViewRowImpl obj) {
                return obj.getTpscr();
            }

            public void put(Cnf_EsclProposteViewRowImpl obj, Object value) {
                obj.setTpscr((String) value);
            }
        }
        ,
        Predominante {
            public Object get(Cnf_EsclProposteViewRowImpl obj) {
                return obj.getPredominante();
            }

            public void put(Cnf_EsclProposteViewRowImpl obj, Object value) {
                obj.setPredominante((Integer) value);
            }
        }
        ,
        Selected {
            public Object get(Cnf_EsclProposteViewRowImpl obj) {
                return obj.getSelected();
            }

            public void put(Cnf_EsclProposteViewRowImpl obj, Object value) {
                obj.setSelected((Boolean) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(Cnf_EsclProposteViewRowImpl object);

        public abstract void put(Cnf_EsclProposteViewRowImpl object, Object value);

        public int index() {
            return Cnf_EsclProposteViewRowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return Cnf_EsclProposteViewRowImpl.AttributesEnum.firstIndex() + Cnf_EsclProposteViewRowImpl.AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = Cnf_EsclProposteViewRowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int IDCNFESCL = AttributesEnum.Idcnfescl.index();
    public static final int DESCRIZIONE = AttributesEnum.Descrizione.index();
    public static final int TIPOESCL = AttributesEnum.TipoEscl.index();
    public static final int NUMGIORNI = AttributesEnum.Numgiorni.index();
    public static final int CODREGIONALE = AttributesEnum.Codregionale.index();
    public static final int ULSS = AttributesEnum.Ulss.index();
    public static final int TPSCR = AttributesEnum.Tpscr.index();
    public static final int PREDOMINANTE = AttributesEnum.Predominante.index();
    public static final int SELECTED = AttributesEnum.Selected.index();

    /**
     *
     *  This is the default constructor (do not remove)
     */
  public Cnf_EsclProposteViewRowImpl()
  {
  }

  /**
   * 
   *  Gets the attribute value for the calculated attribute Idcnfescl
   */
  public Integer getIdcnfescl()
  {
    return (Integer)getAttributeInternal(IDCNFESCL);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for the calculated attribute Idcnfescl
   */
  public void setIdcnfescl(Integer value)
  {
    setAttributeInternal(IDCNFESCL, value);
  }

  /**
   * 
   *  Gets the attribute value for the calculated attribute Descrizione
   */
  public String getDescrizione()
  {
    return (String)getAttributeInternal(DESCRIZIONE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for the calculated attribute Descrizione
   */
  public void setDescrizione(String value)
  {
    setAttributeInternal(DESCRIZIONE, value);
  }

  /**
   * 
   *  Gets the attribute value for the calculated attribute TipoEscl
   */
  public String getTipoEscl()
  {
    return (String)getAttributeInternal(TIPOESCL);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for the calculated attribute TipoEscl
   */
  public void setTipoEscl(String value)
  {
    setAttributeInternal(TIPOESCL, value);
  }

  /**
   * 
   *  Gets the attribute value for the calculated attribute Numgiorni
   */
  public Integer getNumgiorni()
  {
    return (Integer)getAttributeInternal(NUMGIORNI);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for the calculated attribute Numgiorni
   */
  public void setNumgiorni(Integer value)
  {
    setAttributeInternal(NUMGIORNI, value);
  }

  /**
   * 
   *  Gets the attribute value for the calculated attribute Codregionale
   */
  public Integer getCodregionale()
  {
    return (Integer)getAttributeInternal(CODREGIONALE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for the calculated attribute Codregionale
   */
  public void setCodregionale(Integer value)
  {
    setAttributeInternal(CODREGIONALE, value);
  }

  /**
   * 
   *  Gets the attribute value for the calculated attribute Ulss
   */
  public String getUlss()
  {
    return (String)getAttributeInternal(ULSS);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for the calculated attribute Ulss
   */
  public void setUlss(String value)
  {
    setAttributeInternal(ULSS, value);
  }

  /**
   * 
   *  Gets the attribute value for the calculated attribute Tpscr
   */
  public String getTpscr()
  {
    return (String)getAttributeInternal(TPSCR);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for the calculated attribute Tpscr
   */
  public void setTpscr(String value)
  {
    setAttributeInternal(TPSCR, value);
  }

  /**
   * 
   *  Gets the attribute value for the calculated attribute Predominante
   */
  public Integer getPredominante()
  {
    return (Integer)getAttributeInternal(PREDOMINANTE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for the calculated attribute Predominante
   */
  public void setPredominante(Integer value)
  {
    setAttributeInternal(PREDOMINANTE, value);
  }

    /**
     * Gets the attribute value for the calculated attribute Selected.
     * @return the Selected
     */
    public Boolean getSelected() {
        return (Boolean) getAttributeInternal(SELECTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Selected.
     * @param value value to set the  Selected
     */
    public void setSelected(Boolean value) {
        setAttributeInternal(SELECTED, value);
    }

    /**
     *
     *  getAttrInvokeAccessor: generated method. Do not modify.
     */
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

  /**
   * 
   *  setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}