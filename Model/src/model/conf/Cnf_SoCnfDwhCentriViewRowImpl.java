package model.conf;

import model.conf.common.Cnf_SoCnfDwhCentriViewRow;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Dec 21 11:01:16 CET 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class Cnf_SoCnfDwhCentriViewRowImpl extends ViewRowImpl implements Cnf_SoCnfDwhCentriViewRow {


    public static final int ENTITY_CNF_SOCNFDWHCENTRI = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Idcentro {
            public Object get(Cnf_SoCnfDwhCentriViewRowImpl obj) {
                return obj.getIdcentro();
            }

            public void put(Cnf_SoCnfDwhCentriViewRowImpl obj, Object value) {
                obj.setIdcentro((Integer) value);
            }
        }
        ,
        Ulss {
            public Object get(Cnf_SoCnfDwhCentriViewRowImpl obj) {
                return obj.getUlss();
            }

            public void put(Cnf_SoCnfDwhCentriViewRowImpl obj, Object value) {
                obj.setUlss((String) value);
            }
        }
        ,
        Tpscr {
            public Object get(Cnf_SoCnfDwhCentriViewRowImpl obj) {
                return obj.getTpscr();
            }

            public void put(Cnf_SoCnfDwhCentriViewRowImpl obj, Object value) {
                obj.setTpscr((String) value);
            }
        }
        ,
        Codice {
            public Object get(Cnf_SoCnfDwhCentriViewRowImpl obj) {
                return obj.getCodice();
            }

            public void put(Cnf_SoCnfDwhCentriViewRowImpl obj, Object value) {
                obj.setCodice((String) value);
            }
        }
        ,
        Descrizione {
            public Object get(Cnf_SoCnfDwhCentriViewRowImpl obj) {
                return obj.getDescrizione();
            }

            public void put(Cnf_SoCnfDwhCentriViewRowImpl obj, Object value) {
                obj.setDescrizione((String) value);
            }
        }
        ,
        Tipo {
            public Object get(Cnf_SoCnfDwhCentriViewRowImpl obj) {
                return obj.getTipo();
            }

            public void put(Cnf_SoCnfDwhCentriViewRowImpl obj, Object value) {
                obj.setTipo((String) value);
            }
        }
        ,
        Descrbreve {
            public Object get(Cnf_SoCnfDwhCentriViewRowImpl obj) {
                return obj.getDescrbreve();
            }

            public void put(Cnf_SoCnfDwhCentriViewRowImpl obj, Object value) {
                obj.setDescrbreve((String) value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public abstract Object get(Cnf_SoCnfDwhCentriViewRowImpl object);

        public abstract void put(Cnf_SoCnfDwhCentriViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int IDCENTRO = AttributesEnum.Idcentro.index();
    public static final int ULSS = AttributesEnum.Ulss.index();
    public static final int TPSCR = AttributesEnum.Tpscr.index();
    public static final int CODICE = AttributesEnum.Codice.index();
    public static final int DESCRIZIONE = AttributesEnum.Descrizione.index();
    public static final int TIPO = AttributesEnum.Tipo.index();
    public static final int DESCRBREVE = AttributesEnum.Descrbreve.index();

    /**
     * This is the default constructor (do not remove).
     */
    public Cnf_SoCnfDwhCentriViewRowImpl() {
    }

    /**
     * Gets Cnf_SoCnfDwhCentri entity object.
     * @return the Cnf_SoCnfDwhCentri
     */
    public Cnf_SoCnfDwhCentriImpl getCnf_SoCnfDwhCentri() {
        return (Cnf_SoCnfDwhCentriImpl) getEntity(ENTITY_CNF_SOCNFDWHCENTRI);
    }

    /**
     * Gets the attribute value for IDCENTRO using the alias name Idcentro.
     * @return the IDCENTRO
     */
    public Integer getIdcentro() {
        return (Integer) getAttributeInternal(IDCENTRO);
    }

    /**
     * Sets <code>value</code> as attribute value for IDCENTRO using the alias name Idcentro.
     * @param value value to set the IDCENTRO
     */
    public void setIdcentro(Integer value) {
        setAttributeInternal(IDCENTRO, value);
    }

    /**
     * Gets the attribute value for ULSS using the alias name Ulss.
     * @return the ULSS
     */
    public String getUlss() {
        return (String) getAttributeInternal(ULSS);
    }

    /**
     * Sets <code>value</code> as attribute value for ULSS using the alias name Ulss.
     * @param value value to set the ULSS
     */
    public void setUlss(String value) {
        setAttributeInternal(ULSS, value);
    }

    /**
     * Gets the attribute value for TPSCR using the alias name Tpscr.
     * @return the TPSCR
     */
    public String getTpscr() {
        return (String) getAttributeInternal(TPSCR);
    }

    /**
     * Sets <code>value</code> as attribute value for TPSCR using the alias name Tpscr.
     * @param value value to set the TPSCR
     */
    public void setTpscr(String value) {
        setAttributeInternal(TPSCR, value);
    }

    /**
     * Gets the attribute value for CODICE using the alias name Codice.
     * @return the CODICE
     */
    public String getCodice() {
        return (String) getAttributeInternal(CODICE);
    }

    /**
     * Sets <code>value</code> as attribute value for CODICE using the alias name Codice.
     * @param value value to set the CODICE
     */
    public void setCodice(String value) {
        setAttributeInternal(CODICE, value);
    }

    /**
     * Gets the attribute value for DESCRIZIONE using the alias name Descrizione.
     * @return the DESCRIZIONE
     */
    public String getDescrizione() {
        return (String) getAttributeInternal(DESCRIZIONE);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIZIONE using the alias name Descrizione.
     * @param value value to set the DESCRIZIONE
     */
    public void setDescrizione(String value) {
        setAttributeInternal(DESCRIZIONE, value);
    }

    /**
     * Gets the attribute value for TIPO using the alias name Tipo.
     * @return the TIPO
     */
    public String getTipo() {
        return (String) getAttributeInternal(TIPO);
    }

    /**
     * Sets <code>value</code> as attribute value for TIPO using the alias name Tipo.
     * @param value value to set the TIPO
     */
    public void setTipo(String value) {
        setAttributeInternal(TIPO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Descrbreve.
     * @return the Descrbreve
     */
    public String getDescrbreve() {
        Object db = getAttributeInternal(DESCRBREVE);
        //this.refresh(DESCRBREVE);
        return (String)db;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Descrbreve.
     * @param value value to set the  Descrbreve
     */
    public void setDescrbreve(String value) {
        setAttributeInternal(DESCRBREVE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

