package model.conf;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---    Warning: Do not modify method signatures of generated methods.
//  ---------------------------------------------------------------------

public class Cnf_SoCnfCentroFisicoImpl extends EntityImpl {


    protected void doDML(int operation, TransactionEvent e)
  {
    if(operation==this.DML_INSERT)
    {//inserisco il codice da sequenza
      SequenceImpl s = new SequenceImpl("SO_CENTRO_F_SEQ", getDBTransaction());     
      this.setIdcentro(s.getSequenceNumber().intValue());

      
    }
      
    super.doDML(operation, e);
  }


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Idcentro {
            public Object get(Cnf_SoCnfCentroFisicoImpl obj) {
                return obj.getIdcentro();
            }

            public void put(Cnf_SoCnfCentroFisicoImpl obj, Object value) {
                obj.setIdcentro((Integer)value);
            }
        }
        ,
        DescrBreve {
            public Object get(Cnf_SoCnfCentroFisicoImpl obj) {
                return obj.getDescrBreve();
            }

            public void put(Cnf_SoCnfCentroFisicoImpl obj, Object value) {
                obj.setDescrBreve((String)value);
            }
        }
        ,
        Descrizione {
            public Object get(Cnf_SoCnfCentroFisicoImpl obj) {
                return obj.getDescrizione();
            }

            public void put(Cnf_SoCnfCentroFisicoImpl obj, Object value) {
                obj.setDescrizione((String)value);
            }
        }
        ,
        Idcentro1liv {
            public Object get(Cnf_SoCnfCentroFisicoImpl obj) {
                return obj.getIdcentro1liv();
            }

            public void put(Cnf_SoCnfCentroFisicoImpl obj, Object value) {
                obj.setIdcentro1liv((Integer)value);
            }
        }
        ,
        Idcentro2liv {
            public Object get(Cnf_SoCnfCentroFisicoImpl obj) {
                return obj.getIdcentro2liv();
            }

            public void put(Cnf_SoCnfCentroFisicoImpl obj, Object value) {
                obj.setIdcentro2liv((Integer)value);
            }
        }
        ,
        Ulss {
            public Object get(Cnf_SoCnfCentroFisicoImpl obj) {
                return obj.getUlss();
            }

            public void put(Cnf_SoCnfCentroFisicoImpl obj, Object value) {
                obj.setUlss((String)value);
            }
        }
        ,
        Tpscr {
            public Object get(Cnf_SoCnfCentroFisicoImpl obj) {
                return obj.getTpscr();
            }

            public void put(Cnf_SoCnfCentroFisicoImpl obj, Object value) {
                obj.setTpscr((String)value);
            }
        }
        ,
        Cnf_SoUtentiCentri {
            public Object get(Cnf_SoCnfCentroFisicoImpl obj) {
                return obj.getCnf_SoUtentiCentri();
            }

            public void put(Cnf_SoCnfCentroFisicoImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(Cnf_SoCnfCentroFisicoImpl object);

        public abstract void put(Cnf_SoCnfCentroFisicoImpl object, Object value);

        public int index() {
            return Cnf_SoCnfCentroFisicoImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return Cnf_SoCnfCentroFisicoImpl.AttributesEnum.firstIndex() + Cnf_SoCnfCentroFisicoImpl.AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = Cnf_SoCnfCentroFisicoImpl.AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int IDCENTRO = AttributesEnum.Idcentro.index();
    public static final int DESCRBREVE = AttributesEnum.DescrBreve.index();
    public static final int DESCRIZIONE = AttributesEnum.Descrizione.index();
    public static final int IDCENTRO1LIV = AttributesEnum.Idcentro1liv.index();
    public static final int IDCENTRO2LIV = AttributesEnum.Idcentro2liv.index();
    public static final int ULSS = AttributesEnum.Ulss.index();
    public static final int TPSCR = AttributesEnum.Tpscr.index();
    public static final int CNF_SOUTENTICENTRI = AttributesEnum.Cnf_SoUtentiCentri.index();

    /**
     *
     *  This is the default constructor (do not remove)
     */
  public Cnf_SoCnfCentroFisicoImpl()
  {
  }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.Cnf_SoCnfCentroFisico");
    }

    /**
     *
     *  Gets the attribute value for Idcentro, using the alias name Idcentro
     */
    public Integer getIdcentro()
  {
    return (Integer)getAttributeInternal(IDCENTRO);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Idcentro
   */
  public void setIdcentro(Integer value)
  {
    setAttributeInternal(IDCENTRO, value);
  }

  /**
   * 
   *  Gets the attribute value for DescrBreve, using the alias name DescrBreve
   */
  public String getDescrBreve()
  {
    return (String)getAttributeInternal(DESCRBREVE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for DescrBreve
   */
  public void setDescrBreve(String value)
  {
    setAttributeInternal(DESCRBREVE, value);
  }

  /**
   * 
   *  Gets the attribute value for Descrizione, using the alias name Descrizione
   */
  public String getDescrizione()
  {
    return (String)getAttributeInternal(DESCRIZIONE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Descrizione
   */
  public void setDescrizione(String value)
  {
    setAttributeInternal(DESCRIZIONE, value);
  }

  /**
   * 
   *  Gets the attribute value for Idcentro1liv, using the alias name Idcentro1liv
   */
  public Integer getIdcentro1liv()
  {
    return (Integer)getAttributeInternal(IDCENTRO1LIV);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Idcentro1liv
   */
  public void setIdcentro1liv(Integer value)
  {
    setAttributeInternal(IDCENTRO1LIV, value);
  }

  /**
   * 
   *  Gets the attribute value for Idcentro2liv, using the alias name Idcentro2liv
   */
  public Integer getIdcentro2liv()
  {
    return (Integer)getAttributeInternal(IDCENTRO2LIV);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Idcentro2liv
   */
  public void setIdcentro2liv(Integer value)
  {
    setAttributeInternal(IDCENTRO2LIV, value);
  }

  /**
   * 
   *  Gets the attribute value for Ulss, using the alias name Ulss
   */
  public String getUlss()
  {
    return (String)getAttributeInternal(ULSS);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Ulss
   */
  public void setUlss(String value)
  {
    setAttributeInternal(ULSS, value);
  }

  /**
   * 
   *  Gets the attribute value for Tpscr, using the alias name Tpscr
   */
  public String getTpscr()
  {
    return (String)getAttributeInternal(TPSCR);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Tpscr
   */
  public void setTpscr(String value)
  {
    setAttributeInternal(TPSCR, value);
  }

  /**
   * 
   *  getAttrInvokeAccessor: generated method. Do not modify.
   */
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

  /**
   * 
   *  setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


  /**
   *
   *  Gets the associated entity oracle.jbo.RowIterator
   */
    public RowIterator getCnf_SoUtentiCentri()
  {
        return (RowIterator)getAttributeInternal(CNF_SOUTENTICENTRI);
    }

    /**
     * @param idcentro key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer idcentro) {
        return new Key(new Object[]{idcentro});
    }


}
