package model.referto;

import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jun 15 13:00:48 CEST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class Ref_SoCnfRef2livHPVES2ViewRowImpl extends ViewRowImpl {
    public static final int ENTITY_REF_SOCNFREF2LIV = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Idcnfref2l {
            public Object get(Ref_SoCnfRef2livHPVES2ViewRowImpl obj) {
                return obj.getIdcnfref2l();
            }

            public void put(Ref_SoCnfRef2livHPVES2ViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Gruppo {
            public Object get(Ref_SoCnfRef2livHPVES2ViewRowImpl obj) {
                return obj.getGruppo();
            }

            public void put(Ref_SoCnfRef2livHPVES2ViewRowImpl obj, Object value) {
                obj.setGruppo((String) value);
            }
        }
        ,
        Ulss {
            public Object get(Ref_SoCnfRef2livHPVES2ViewRowImpl obj) {
                return obj.getUlss();
            }

            public void put(Ref_SoCnfRef2livHPVES2ViewRowImpl obj, Object value) {
                obj.setUlss((String) value);
            }
        }
        ,
        Tpscr {
            public Object get(Ref_SoCnfRef2livHPVES2ViewRowImpl obj) {
                return obj.getTpscr();
            }

            public void put(Ref_SoCnfRef2livHPVES2ViewRowImpl obj, Object value) {
                obj.setTpscr((String) value);
            }
        }
        ,
        Descrizione {
            public Object get(Ref_SoCnfRef2livHPVES2ViewRowImpl obj) {
                return obj.getDescrizione();
            }

            public void put(Ref_SoCnfRef2livHPVES2ViewRowImpl obj, Object value) {
                obj.setDescrizione((String) value);
            }
        }
        ,
        Codreg {
            public Object get(Ref_SoCnfRef2livHPVES2ViewRowImpl obj) {
                return obj.getCodreg();
            }

            public void put(Ref_SoCnfRef2livHPVES2ViewRowImpl obj, Object value) {
                obj.setCodreg((Integer) value);
            }
        }
        ,
        Ordine {
            public Object get(Ref_SoCnfRef2livHPVES2ViewRowImpl obj) {
                return obj.getOrdine();
            }

            public void put(Ref_SoCnfRef2livHPVES2ViewRowImpl obj, Object value) {
                obj.setOrdine((Integer) value);
            }
        }
        ,
        Dtfinevalidita {
            public Object get(Ref_SoCnfRef2livHPVES2ViewRowImpl obj) {
                return obj.getDtfinevalidita();
            }

            public void put(Ref_SoCnfRef2livHPVES2ViewRowImpl obj, Object value) {
                obj.setDtfinevalidita((Date) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(Ref_SoCnfRef2livHPVES2ViewRowImpl object);

        public abstract void put(Ref_SoCnfRef2livHPVES2ViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int IDCNFREF2L = AttributesEnum.Idcnfref2l.index();
    public static final int GRUPPO = AttributesEnum.Gruppo.index();
    public static final int ULSS = AttributesEnum.Ulss.index();
    public static final int TPSCR = AttributesEnum.Tpscr.index();
    public static final int DESCRIZIONE = AttributesEnum.Descrizione.index();
    public static final int CODREG = AttributesEnum.Codreg.index();
    public static final int ORDINE = AttributesEnum.Ordine.index();
    public static final int DTFINEVALIDITA = AttributesEnum.Dtfinevalidita.index();

    /**
     * This is the default constructor (do not remove).
     */
    public Ref_SoCnfRef2livHPVES2ViewRowImpl() {
    }

    /**
     * Gets Ref_SoCnfRef2liv entity object.
     * @return the Ref_SoCnfRef2liv
     */
    public Ref_SoCnfRef2livImpl getRef_SoCnfRef2liv() {
        return (Ref_SoCnfRef2livImpl) getEntity(ENTITY_REF_SOCNFREF2LIV);
    }

    /**
     * Gets the attribute value for IDCNFREF2L using the alias name Idcnfref2l.
     * @return the IDCNFREF2L
     */
    public Integer getIdcnfref2l() {
        return (Integer) getAttributeInternal(IDCNFREF2L);
    }

    /**
     * Gets the attribute value for GRUPPO using the alias name Gruppo.
     * @return the GRUPPO
     */
    public String getGruppo() {
        return (String) getAttributeInternal(GRUPPO);
    }

    /**
     * Sets <code>value</code> as attribute value for GRUPPO using the alias name Gruppo.
     * @param value value to set the GRUPPO
     */
    public void setGruppo(String value) {
        setAttributeInternal(GRUPPO, value);
    }

    /**
     * Gets the attribute value for ULSS using the alias name Ulss.
     * @return the ULSS
     */
    public String getUlss() {
        return (String) getAttributeInternal(ULSS);
    }

    /**
     * Sets <code>value</code> as attribute value for ULSS using the alias name Ulss.
     * @param value value to set the ULSS
     */
    public void setUlss(String value) {
        setAttributeInternal(ULSS, value);
    }

    /**
     * Gets the attribute value for TPSCR using the alias name Tpscr.
     * @return the TPSCR
     */
    public String getTpscr() {
        return (String) getAttributeInternal(TPSCR);
    }

    /**
     * Sets <code>value</code> as attribute value for TPSCR using the alias name Tpscr.
     * @param value value to set the TPSCR
     */
    public void setTpscr(String value) {
        setAttributeInternal(TPSCR, value);
    }

    /**
     * Gets the attribute value for DESCRIZIONE using the alias name Descrizione.
     * @return the DESCRIZIONE
     */
    public String getDescrizione() {
        return (String) getAttributeInternal(DESCRIZIONE);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIZIONE using the alias name Descrizione.
     * @param value value to set the DESCRIZIONE
     */
    public void setDescrizione(String value) {
        setAttributeInternal(DESCRIZIONE, value);
    }

    /**
     * Gets the attribute value for CODREG using the alias name Codreg.
     * @return the CODREG
     */
    public Integer getCodreg() {
        return (Integer) getAttributeInternal(CODREG);
    }

    /**
     * Sets <code>value</code> as attribute value for CODREG using the alias name Codreg.
     * @param value value to set the CODREG
     */
    public void setCodreg(Integer value) {
        setAttributeInternal(CODREG, value);
    }

    /**
     * Gets the attribute value for ORDINE using the alias name Ordine.
     * @return the ORDINE
     */
    public Integer getOrdine() {
        return (Integer) getAttributeInternal(ORDINE);
    }

    /**
     * Sets <code>value</code> as attribute value for ORDINE using the alias name Ordine.
     * @param value value to set the ORDINE
     */
    public void setOrdine(Integer value) {
        setAttributeInternal(ORDINE, value);
    }

    /**
     * Gets the attribute value for DTFINEVALIDITA using the alias name Dtfinevalidita.
     * @return the DTFINEVALIDITA
     */
    public Date getDtfinevalidita() {
        return (Date) getAttributeInternal(DTFINEVALIDITA);
    }

    /**
     * Sets <code>value</code> as attribute value for DTFINEVALIDITA using the alias name Dtfinevalidita.
     * @param value value to set the DTFINEVALIDITA
     */
    public void setDtfinevalidita(Date value) {
        setAttributeInternal(DTFINEVALIDITA, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

