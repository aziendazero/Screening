package model.referto;

import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Feb 02 15:06:08 CET 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class Ref_SoAllegatoViewRowImpl extends ViewRowImpl {
    public static final int ENTITY_REF_SOALLEGATO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Idallegato {
            public Object get(Ref_SoAllegatoViewRowImpl obj) {
                return obj.getIdallegato();
            }

            public void put(Ref_SoAllegatoViewRowImpl obj, Object value) {
                obj.setIdallegato((Integer) value);
            }
        }
        ,
        Idinvito {
            public Object get(Ref_SoAllegatoViewRowImpl obj) {
                return obj.getIdinvito();
            }

            public void put(Ref_SoAllegatoViewRowImpl obj, Object value) {
                obj.setIdinvito((Integer) value);
            }
        }
        ,
        Codts {
            public Object get(Ref_SoAllegatoViewRowImpl obj) {
                return obj.getCodts();
            }

            public void put(Ref_SoAllegatoViewRowImpl obj, Object value) {
                obj.setCodts((String)value);
            }
        }
        ,
        Lettera {
            public Object get(Ref_SoAllegatoViewRowImpl obj) {
                return obj.getLettera();
            }

            public void put(Ref_SoAllegatoViewRowImpl obj, Object value) {
                obj.setLettera((BlobDomain)value);
            }
        }
        ,
        Dtcreazione {
            public Object get(Ref_SoAllegatoViewRowImpl obj) {
                return obj.getDtcreazione();
            }

            public void put(Ref_SoAllegatoViewRowImpl obj, Object value) {
                obj.setDtcreazione((Date)value);
            }
        }
        ,
        Dtstampa {
            public Object get(Ref_SoAllegatoViewRowImpl obj) {
                return obj.getDtstampa();
            }

            public void put(Ref_SoAllegatoViewRowImpl obj, Object value) {
                obj.setDtstampa((Date)value);
            }
        }
        ,
        Stampapostel {
            public Object get(Ref_SoAllegatoViewRowImpl obj) {
                return obj.getStampapostel();
            }

            public void put(Ref_SoAllegatoViewRowImpl obj, Object value) {
                obj.setStampapostel((Integer) value);
            }
        }
        ,
        Ulss {
            public Object get(Ref_SoAllegatoViewRowImpl obj) {
                return obj.getUlss();
            }

            public void put(Ref_SoAllegatoViewRowImpl obj, Object value) {
                obj.setUlss((String)value);
            }
        }
        ,
        Tpscr {
            public Object get(Ref_SoAllegatoViewRowImpl obj) {
                return obj.getTpscr();
            }

            public void put(Ref_SoAllegatoViewRowImpl obj, Object value) {
                obj.setTpscr((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(Ref_SoAllegatoViewRowImpl object);

        public abstract void put(Ref_SoAllegatoViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int IDALLEGATO = AttributesEnum.Idallegato.index();
    public static final int IDINVITO = AttributesEnum.Idinvito.index();
    public static final int CODTS = AttributesEnum.Codts.index();
    public static final int LETTERA = AttributesEnum.Lettera.index();
    public static final int DTCREAZIONE = AttributesEnum.Dtcreazione.index();
    public static final int DTSTAMPA = AttributesEnum.Dtstampa.index();
    public static final int STAMPAPOSTEL = AttributesEnum.Stampapostel.index();
    public static final int ULSS = AttributesEnum.Ulss.index();
    public static final int TPSCR = AttributesEnum.Tpscr.index();

    /**
     * This is the default constructor (do not remove).
     */
    public Ref_SoAllegatoViewRowImpl() {
    }

    /**
     * Gets Ref_SoAllegato entity object.
     * @return the Ref_SoAllegato
     */
    public Ref_SoAllegatoImpl getRef_SoAllegato() {
        return (Ref_SoAllegatoImpl)getEntity(ENTITY_REF_SOALLEGATO);
    }

    /**
     * Gets the attribute value for IDALLEGATO using the alias name Idallegato.
     * @return the IDALLEGATO
     */
    public Integer getIdallegato() {
        return (Integer) getAttributeInternal(IDALLEGATO);
    }

    /**
     * Sets <code>value</code> as attribute value for IDALLEGATO using the alias name Idallegato.
     * @param value value to set the IDALLEGATO
     */
    public void setIdallegato(Integer value) {
        setAttributeInternal(IDALLEGATO, value);
    }

    /**
     * Gets the attribute value for IDINVITO using the alias name Idinvito.
     * @return the IDINVITO
     */
    public Integer getIdinvito() {
        return (Integer) getAttributeInternal(IDINVITO);
    }

    /**
     * Sets <code>value</code> as attribute value for IDINVITO using the alias name Idinvito.
     * @param value value to set the IDINVITO
     */
    public void setIdinvito(Integer value) {
        setAttributeInternal(IDINVITO, value);
    }

    /**
     * Gets the attribute value for CODTS using the alias name Codts.
     * @return the CODTS
     */
    public String getCodts() {
        return (String) getAttributeInternal(CODTS);
    }

    /**
     * Sets <code>value</code> as attribute value for CODTS using the alias name Codts.
     * @param value value to set the CODTS
     */
    public void setCodts(String value) {
        setAttributeInternal(CODTS, value);
    }

    /**
     * Gets the attribute value for LETTERA using the alias name Lettera.
     * @return the LETTERA
     */
    public BlobDomain getLettera() {
        return (BlobDomain) getAttributeInternal(LETTERA);
    }

    /**
     * Sets <code>value</code> as attribute value for LETTERA using the alias name Lettera.
     * @param value value to set the LETTERA
     */
    public void setLettera(BlobDomain value) {
        setAttributeInternal(LETTERA, value);
    }

    /**
     * Gets the attribute value for DTCREAZIONE using the alias name Dtcreazione.
     * @return the DTCREAZIONE
     */
    public Date getDtcreazione() {
        return (Date) getAttributeInternal(DTCREAZIONE);
    }

    /**
     * Sets <code>value</code> as attribute value for DTCREAZIONE using the alias name Dtcreazione.
     * @param value value to set the DTCREAZIONE
     */
    public void setDtcreazione(Date value) {
        setAttributeInternal(DTCREAZIONE, value);
    }

    /**
     * Gets the attribute value for DTSTAMPA using the alias name Dtstampa.
     * @return the DTSTAMPA
     */
    public Date getDtstampa() {
        return (Date) getAttributeInternal(DTSTAMPA);
    }

    /**
     * Sets <code>value</code> as attribute value for DTSTAMPA using the alias name Dtstampa.
     * @param value value to set the DTSTAMPA
     */
    public void setDtstampa(Date value) {
        setAttributeInternal(DTSTAMPA, value);
    }

    /**
     * Gets the attribute value for STAMPAPOSTEL using the alias name Stampapostel.
     * @return the STAMPAPOSTEL
     */
    public Integer getStampapostel() {
        return (Integer) getAttributeInternal(STAMPAPOSTEL);
    }

    /**
     * Sets <code>value</code> as attribute value for STAMPAPOSTEL using the alias name Stampapostel.
     * @param value value to set the STAMPAPOSTEL
     */
    public void setStampapostel(Integer value) {
        setAttributeInternal(STAMPAPOSTEL, value);
    }

    /**
     * Gets the attribute value for ULSS using the alias name Ulss.
     * @return the ULSS
     */
    public String getUlss() {
        return (String) getAttributeInternal(ULSS);
    }

    /**
     * Sets <code>value</code> as attribute value for ULSS using the alias name Ulss.
     * @param value value to set the ULSS
     */
    public void setUlss(String value) {
        setAttributeInternal(ULSS, value);
    }

    /**
     * Gets the attribute value for TPSCR using the alias name Tpscr.
     * @return the TPSCR
     */
    public String getTpscr() {
        return (String) getAttributeInternal(TPSCR);
    }

    /**
     * Sets <code>value</code> as attribute value for TPSCR using the alias name Tpscr.
     * @param value value to set the TPSCR
     */
    public void setTpscr(String value) {
        setAttributeInternal(TPSCR, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
