package model.referto;

import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Apr 12 13:59:48 CEST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class Ref_SoOpmedicoViewRowImpl extends ViewRowImpl {


	public static final int ENTITY_REF_SOOPMEDICO = 0;

	/**
	 * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
	 */
	public enum AttributesEnum {
		Idop {
			public Object get(Ref_SoOpmedicoViewRowImpl obj) {
				return obj.getIdop();
			}

			public void put(Ref_SoOpmedicoViewRowImpl obj, Object value) {
				obj.setIdop((Integer)value);
			}
		}
		,
		Codop {
			public Object get(Ref_SoOpmedicoViewRowImpl obj) {
				return obj.getCodop();
			}

			public void put(Ref_SoOpmedicoViewRowImpl obj, Object value) {
				obj.setCodop((Integer)value);
			}
		}
		,
		Idcentro {
			public Object get(Ref_SoOpmedicoViewRowImpl obj) {
				return obj.getIdcentro();
			}

			public void put(Ref_SoOpmedicoViewRowImpl obj, Object value) {
				obj.setIdcentro((Integer)value);
			}
		}
		,
		Cognome {
			public Object get(Ref_SoOpmedicoViewRowImpl obj) {
				return obj.getCognome();
			}

			public void put(Ref_SoOpmedicoViewRowImpl obj, Object value) {
				obj.setCognome((String)value);
			}
		}
		,
		Nome {
			public Object get(Ref_SoOpmedicoViewRowImpl obj) {
				return obj.getNome();
			}

			public void put(Ref_SoOpmedicoViewRowImpl obj, Object value) {
				obj.setNome((String)value);
			}
		}
		,
		Titolo {
			public Object get(Ref_SoOpmedicoViewRowImpl obj) {
				return obj.getTitolo();
			}

			public void put(Ref_SoOpmedicoViewRowImpl obj, Object value) {
				obj.setTitolo((String)value);
			}
		}
		,
		Dtfinevalopmedico {
			public Object get(Ref_SoOpmedicoViewRowImpl obj) {
				return obj.getDtfinevalopmedico();
			}

			public void put(Ref_SoOpmedicoViewRowImpl obj, Object value) {
				obj.setDtfinevalopmedico((Date)value);
			}
		}
		,
		Tpscr {
			public Object get(Ref_SoOpmedicoViewRowImpl obj) {
				return obj.getTpscr();
			}

			public void put(Ref_SoOpmedicoViewRowImpl obj, Object value) {
				obj.setTpscr((String)value);
			}
		}
		,
		Ulss {
			public Object get(Ref_SoOpmedicoViewRowImpl obj) {
				return obj.getUlss();
			}

			public void put(Ref_SoOpmedicoViewRowImpl obj, Object value) {
				obj.setUlss((String)value);
			}
		}
		,
		Cf {
			public Object get(Ref_SoOpmedicoViewRowImpl obj) {
				return obj.getCf();
			}

			public void put(Ref_SoOpmedicoViewRowImpl obj, Object value) {
				obj.setCf((String)value);
			}
		}
		;
		private static AttributesEnum[] vals = null;
		private static int firstIndex = 0;

		public abstract Object get(Ref_SoOpmedicoViewRowImpl object);

		public abstract void put(Ref_SoOpmedicoViewRowImpl object, Object value);

		public int index() {
			return AttributesEnum.firstIndex() + ordinal();
		}

		public static int firstIndex() {
			return firstIndex;
		}

		public static int count() {
			return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
		}

		public static AttributesEnum[] staticValues() {
			if (vals == null) {
				vals = AttributesEnum.values();
			}
			return vals;
		}
	}


	public static final int IDOP = AttributesEnum.Idop.index();
	public static final int CODOP = AttributesEnum.Codop.index();
	public static final int IDCENTRO = AttributesEnum.Idcentro.index();
	public static final int COGNOME = AttributesEnum.Cognome.index();
	public static final int NOME = AttributesEnum.Nome.index();
	public static final int TITOLO = AttributesEnum.Titolo.index();
	public static final int DTFINEVALOPMEDICO = AttributesEnum.Dtfinevalopmedico.index();
	public static final int TPSCR = AttributesEnum.Tpscr.index();
	public static final int ULSS = AttributesEnum.Ulss.index();
	public static final int CF = AttributesEnum.Cf.index();

	/**
	 * This is the default constructor (do not remove).
	 */
	public Ref_SoOpmedicoViewRowImpl() {
	}

	/**
	 * Gets Ref_SoOpmedico entity object.
	 * @return the Ref_SoOpmedico
	 */
	public Ref_SoOpmedicoImpl getRef_SoOpmedico() {
		return (Ref_SoOpmedicoImpl)getEntity(ENTITY_REF_SOOPMEDICO);
	}

	/**
	 * Gets the attribute value for IDOP using the alias name Idop.
	 * @return the IDOP
	 */
	public Integer getIdop() {
		return (Integer) getAttributeInternal(IDOP);
	}

	/**
	 * Sets <code>value</code> as attribute value for IDOP using the alias name Idop.
	 * @param value value to set the IDOP
	 */
	public void setIdop(Integer value) {
		setAttributeInternal(IDOP, value);
	}

	/**
	 * Gets the attribute value for CODOP using the alias name Codop.
	 * @return the CODOP
	 */
	public Integer getCodop() {
		return (Integer) getAttributeInternal(CODOP);
	}

	/**
	 * Sets <code>value</code> as attribute value for CODOP using the alias name Codop.
	 * @param value value to set the CODOP
	 */
	public void setCodop(Integer value) {
		setAttributeInternal(CODOP, value);
	}

	/**
	 * Gets the attribute value for IDCENTRO using the alias name Idcentro.
	 * @return the IDCENTRO
	 */
	public Integer getIdcentro() {
		return (Integer) getAttributeInternal(IDCENTRO);
	}

	/**
	 * Sets <code>value</code> as attribute value for IDCENTRO using the alias name Idcentro.
	 * @param value value to set the IDCENTRO
	 */
	public void setIdcentro(Integer value) {
		setAttributeInternal(IDCENTRO, value);
	}

	/**
	 * Gets the attribute value for COGNOME using the alias name Cognome.
	 * @return the COGNOME
	 */
	public String getCognome() {
		return (String) getAttributeInternal(COGNOME);
	}

	/**
	 * Sets <code>value</code> as attribute value for COGNOME using the alias name Cognome.
	 * @param value value to set the COGNOME
	 */
	public void setCognome(String value) {
		setAttributeInternal(COGNOME, value);
	}

	/**
	 * Gets the attribute value for NOME using the alias name Nome.
	 * @return the NOME
	 */
	public String getNome() {
		return (String) getAttributeInternal(NOME);
	}

	/**
	 * Sets <code>value</code> as attribute value for NOME using the alias name Nome.
	 * @param value value to set the NOME
	 */
	public void setNome(String value) {
		setAttributeInternal(NOME, value);
	}

	/**
	 * Gets the attribute value for TITOLO using the alias name Titolo.
	 * @return the TITOLO
	 */
	public String getTitolo() {
		return (String) getAttributeInternal(TITOLO);
	}

	/**
	 * Sets <code>value</code> as attribute value for TITOLO using the alias name Titolo.
	 * @param value value to set the TITOLO
	 */
	public void setTitolo(String value) {
		setAttributeInternal(TITOLO, value);
	}

	/**
	 * Gets the attribute value for DTFINEVALOPMEDICO using the alias name Dtfinevalopmedico.
	 * @return the DTFINEVALOPMEDICO
	 */
	public Date getDtfinevalopmedico() {
		return (Date) getAttributeInternal(DTFINEVALOPMEDICO);
	}

	/**
	 * Sets <code>value</code> as attribute value for DTFINEVALOPMEDICO using the alias name Dtfinevalopmedico.
	 * @param value value to set the DTFINEVALOPMEDICO
	 */
	public void setDtfinevalopmedico(Date value) {
		setAttributeInternal(DTFINEVALOPMEDICO, value);
	}

	/**
	 * Gets the attribute value for TPSCR using the alias name Tpscr.
	 * @return the TPSCR
	 */
	public String getTpscr() {
		return (String) getAttributeInternal(TPSCR);
	}

	/**
	 * Sets <code>value</code> as attribute value for TPSCR using the alias name Tpscr.
	 * @param value value to set the TPSCR
	 */
	public void setTpscr(String value) {
		setAttributeInternal(TPSCR, value);
	}

	/**
	 * Gets the attribute value for ULSS using the alias name Ulss.
	 * @return the ULSS
	 */
	public String getUlss() {
		return (String) getAttributeInternal(ULSS);
	}

	/**
	 * Sets <code>value</code> as attribute value for ULSS using the alias name Ulss.
	 * @param value value to set the ULSS
	 */
	public void setUlss(String value) {
		setAttributeInternal(ULSS, value);
	}

	/**
	 * Gets the attribute value for CF using the alias name Cf.
	 * @return the CF
	 */
	public String getCf() {
		return (String) getAttributeInternal(CF);
	}

	/**
	 * Sets <code>value</code> as attribute value for CF using the alias name Cf.
	 * @param value value to set the CF
	 */
	public void setCf(String value) {
		setAttributeInternal(CF, value);
	}

	/**
	 * getAttrInvokeAccessor: generated method. Do not modify.
	 * @param index the index identifying the attribute
	 * @param attrDef the attribute

	 * @return the attribute value
	 * @throws Exception
	 */
	protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
		if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
			return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
		}
		return super.getAttrInvokeAccessor(index, attrDef);
	}

	/**
	 * setAttrInvokeAccessor: generated method. Do not modify.
	 * @param index the index identifying the attribute
	 * @param value the value to assign to the attribute
	 * @param attrDef the attribute

	 * @throws Exception
	 */
	protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
		if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
			AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
			return;
		}
		super.setAttrInvokeAccessor(index, value, attrDef);
	}
}
