package model.referto;


import model.referto.common.Ref_SoCnfIndicazioniViewRow;

import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.RowID;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---    Warning: Do not modify method signatures of generated methods.
//  ---------------------------------------------------------------------

public class Ref_SoCnfIndicazioniViewRowImpl extends ViewRowImpl implements Ref_SoCnfIndicazioniViewRow {


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Descrizione {
            public Object get(Ref_SoCnfIndicazioniViewRowImpl obj) {
                return obj.getDescrizione();
            }

            public void put(Ref_SoCnfIndicazioniViewRowImpl obj, Object value) {
                obj.setDescrizione((String) value);
            }
        }
        ,
        Idcnfref {
            public Object get(Ref_SoCnfIndicazioniViewRowImpl obj) {
                return obj.getIdcnfref();
            }

            public void put(Ref_SoCnfIndicazioniViewRowImpl obj, Object value) {
                obj.setIdcnfref((Integer) value);
            }
        }
        ,
        Gruppo {
            public Object get(Ref_SoCnfIndicazioniViewRowImpl obj) {
                return obj.getGruppo();
            }

            public void put(Ref_SoCnfIndicazioniViewRowImpl obj, Object value) {
                obj.setGruppo((String) value);
            }
        }
        ,
        Dx {
            public Object get(Ref_SoCnfIndicazioniViewRowImpl obj) {
                return obj.getDx();
            }

            public void put(Ref_SoCnfIndicazioniViewRowImpl obj, Object value) {
                obj.setDx((Number) value);
            }
        }
        ,
        Sx {
            public Object get(Ref_SoCnfIndicazioniViewRowImpl obj) {
                return obj.getSx();
            }

            public void put(Ref_SoCnfIndicazioniViewRowImpl obj, Object value) {
                obj.setSx((Number) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(Ref_SoCnfIndicazioniViewRowImpl object);

        public abstract void put(Ref_SoCnfIndicazioniViewRowImpl object, Object value);

        public int index() {
            return Ref_SoCnfIndicazioniViewRowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return Ref_SoCnfIndicazioniViewRowImpl.AttributesEnum.firstIndex() + Ref_SoCnfIndicazioniViewRowImpl.AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = Ref_SoCnfIndicazioniViewRowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DESCRIZIONE = AttributesEnum.Descrizione.index();
    public static final int IDCNFREF = AttributesEnum.Idcnfref.index();
    public static final int GRUPPO = AttributesEnum.Gruppo.index();
    public static final int DX = AttributesEnum.Dx.index();
    public static final int SX = AttributesEnum.Sx.index();

    /**
     *
     *  This is the default constructor (do not remove)
     */
  public Ref_SoCnfIndicazioniViewRowImpl()
  {
  }

    /**
     * Gets the attribute value for the calculated attribute Descrizione.
     * @return the Descrizione
     */
    public String getDescrizione() {
        return (String) getAttributeInternal(DESCRIZIONE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Descrizione.
     * @param value value to set the  Descrizione
     */
    public void setDescrizione(String value) {
        setAttributeInternal(DESCRIZIONE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Idcnfref.
     * @return the Idcnfref
     */
    public Integer getIdcnfref() {
        return (Integer) getAttributeInternal(IDCNFREF);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Idcnfref.
     * @param value value to set the  Idcnfref
     */
    public void setIdcnfref(Integer value) {
        setAttributeInternal(IDCNFREF, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Gruppo.
     * @return the Gruppo
     */
    public String getGruppo() {
        return (String) getAttributeInternal(GRUPPO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Gruppo.
     * @param value value to set the  Gruppo
     */
    public void setGruppo(String value) {
        setAttributeInternal(GRUPPO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Dx.
     * @return the Dx
     */
    public oracle.jbo.domain.Number getDx() {
        return (oracle.jbo.domain.Number) getAttributeInternal(DX);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Dx.
     * @param value value to set the  Dx
     */
    public void setDx(oracle.jbo.domain.Number value) {
        setAttributeInternal(DX, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Sx.
     * @return the Sx
     */
    public Number getSx() {
        return (Number) getAttributeInternal(SX);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Sx.
     * @param value value to set the  Sx
     */
    public void setSx(Number value) {
        setAttributeInternal(SX, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


}
