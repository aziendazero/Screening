package model.accettazione;

import model.global.A_SoOpmedicoImpl;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---    Warning: Do not modify method signatures of generated methods.
//  ---------------------------------------------------------------------

public class AccCo_SoAnamnesicolonImpl extends EntityImpl {


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        IdAnamco {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getIdAnamco();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setIdAnamco((Integer) value);
            }
        }
        ,
        Idaccco2liv {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getIdaccco2liv();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setIdaccco2liv((Integer) value);
            }
        }
        ,
        Dtcreazione {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getDtcreazione();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setDtcreazione((Date) value);
            }
        }
        ,
        Opcreazione {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getOpcreazione();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setOpcreazione((String) value);
            }
        }
        ,
        Dtultmod {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getDtultmod();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setDtultmod((Date) value);
            }
        }
        ,
        Opultmod {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getOpultmod();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setOpultmod((String) value);
            }
        }
        ,
        Idopanamnesi {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getIdopanamnesi();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setIdopanamnesi((Integer) value);
            }
        }
        ,
        Dtanamnesi {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getDtanamnesi();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setDtanamnesi((Date) value);
            }
        }
        ,
        Idesitoaf {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getIdesitoaf();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setIdesitoaf((Integer) value);
            }
        }
        ,
        NoteFam {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getNoteFam();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setNoteFam((String) value);
            }
        }
        ,
        Ibd {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getIbd();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setIbd((Integer) value);
            }
        }
        ,
        PcPresente {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getPcPresente();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setPcPresente((Integer) value);
            }
        }
        ,
        PcDtintervento {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getPcDtintervento();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setPcDtintervento((Date) value);
            }
        }
        ,
        PcIntnoncod {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getPcIntnoncod();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setPcIntnoncod((String) value);
            }
        }
        ,
        PcNota {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getPcNota();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setPcNota((String) value);
            }
        }
        ,
        AcPresenti {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getAcPresenti();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setAcPresenti((Integer) value);
            }
        }
        ,
        AcDtsosp {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getAcDtsosp();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setAcDtsosp((Date) value);
            }
        }
        ,
        AcNote {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getAcNote();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setAcNote((String) value);
            }
        }
        ,
        PaPresente {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getPaPresente();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setPaPresente((Integer) value);
            }
        }
        ,
        PaDatainizio {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getPaDatainizio();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setPaDatainizio((Date) value);
            }
        }
        ,
        PaNote {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getPaNote();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setPaNote((String) value);
            }
        }
        ,
        RcPresente {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getRcPresente();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setRcPresente((Integer) value);
            }
        }
        ,
        RcNote {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getRcNote();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setRcNote((String) value);
            }
        }
        ,
        AlPresente {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getAlPresente();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setAlPresente((Integer) value);
            }
        }
        ,
        AlNote {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getAlNote();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setAlNote((String) value);
            }
        }
        ,
        NotePers {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getNotePers();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setNotePers((String) value);
            }
        }
        ,
        Tpscr {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getTpscr();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setTpscr((String) value);
            }
        }
        ,
        Ulss {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getUlss();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setUlss((String) value);
            }
        }
        ,
        Exulss {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getExulss();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setExulss((String) value);
            }
        }
        ,
        A_SoOpmedico {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getA_SoOpmedico();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setA_SoOpmedico((A_SoOpmedicoImpl) value);
            }
        }
        ,
        A_SoAccColon2liv {
            public Object get(AccCo_SoAnamnesicolonImpl obj) {
                return obj.getA_SoAccColon2liv();
            }

            public void put(AccCo_SoAnamnesicolonImpl obj, Object value) {
                obj.setA_SoAccColon2liv((A_SoAccColon2livImpl) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AccCo_SoAnamnesicolonImpl object);

        public abstract void put(AccCo_SoAnamnesicolonImpl object, Object value);

        public int index() {
            return AccCo_SoAnamnesicolonImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AccCo_SoAnamnesicolonImpl.AttributesEnum.firstIndex() + AccCo_SoAnamnesicolonImpl.AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AccCo_SoAnamnesicolonImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int IDANAMCO = AttributesEnum.IdAnamco.index();
    public static final int IDACCCO2LIV = AttributesEnum.Idaccco2liv.index();
    public static final int DTCREAZIONE = AttributesEnum.Dtcreazione.index();
    public static final int OPCREAZIONE = AttributesEnum.Opcreazione.index();
    public static final int DTULTMOD = AttributesEnum.Dtultmod.index();
    public static final int OPULTMOD = AttributesEnum.Opultmod.index();
    public static final int IDOPANAMNESI = AttributesEnum.Idopanamnesi.index();
    public static final int DTANAMNESI = AttributesEnum.Dtanamnesi.index();
    public static final int IDESITOAF = AttributesEnum.Idesitoaf.index();
    public static final int NOTEFAM = AttributesEnum.NoteFam.index();
    public static final int IBD = AttributesEnum.Ibd.index();
    public static final int PCPRESENTE = AttributesEnum.PcPresente.index();
    public static final int PCDTINTERVENTO = AttributesEnum.PcDtintervento.index();
    public static final int PCINTNONCOD = AttributesEnum.PcIntnoncod.index();
    public static final int PCNOTA = AttributesEnum.PcNota.index();
    public static final int ACPRESENTI = AttributesEnum.AcPresenti.index();
    public static final int ACDTSOSP = AttributesEnum.AcDtsosp.index();
    public static final int ACNOTE = AttributesEnum.AcNote.index();
    public static final int PAPRESENTE = AttributesEnum.PaPresente.index();
    public static final int PADATAINIZIO = AttributesEnum.PaDatainizio.index();
    public static final int PANOTE = AttributesEnum.PaNote.index();
    public static final int RCPRESENTE = AttributesEnum.RcPresente.index();
    public static final int RCNOTE = AttributesEnum.RcNote.index();
    public static final int ALPRESENTE = AttributesEnum.AlPresente.index();
    public static final int ALNOTE = AttributesEnum.AlNote.index();
    public static final int NOTEPERS = AttributesEnum.NotePers.index();
    public static final int TPSCR = AttributesEnum.Tpscr.index();
    public static final int ULSS = AttributesEnum.Ulss.index();
    public static final int EXULSS = AttributesEnum.Exulss.index();
    public static final int A_SOOPMEDICO = AttributesEnum.A_SoOpmedico.index();
    public static final int A_SOACCCOLON2LIV = AttributesEnum.A_SoAccColon2liv.index();

    /**
     *
     *  This is the default constructor (do not remove)
     */
  public AccCo_SoAnamnesicolonImpl()
  {
  }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.accettazione.AccCo_SoAnamnesicolon");
    }


    /**
     *
     *  Gets the attribute value for IdAnamco, using the alias name IdAnamco
     */
    public Integer getIdAnamco()
  {
    return (Integer)getAttributeInternal(IDANAMCO);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for IdAnamco
   */
  public void setIdAnamco(Integer value)
  {
    setAttributeInternal(IDANAMCO, value);
  }

  /**
   * 
   *  Gets the attribute value for Idaccco2liv, using the alias name Idaccco2liv
   */
  public Integer getIdaccco2liv()
  {
    return (Integer)getAttributeInternal(IDACCCO2LIV);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Idaccco2liv
   */
  public void setIdaccco2liv(Integer value)
  {
    setAttributeInternal(IDACCCO2LIV, value);
  }

  /**
   * 
   *  Gets the attribute value for Dtcreazione, using the alias name Dtcreazione
   */
  public Date getDtcreazione()
  {
    return (Date)getAttributeInternal(DTCREAZIONE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Dtcreazione
   */
  public void setDtcreazione(Date value)
  {
    setAttributeInternal(DTCREAZIONE, value);
  }

  /**
   * 
   *  Gets the attribute value for Opcreazione, using the alias name Opcreazione
   */
  public String getOpcreazione()
  {
    return (String)getAttributeInternal(OPCREAZIONE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Opcreazione
   */
  public void setOpcreazione(String value)
  {
    setAttributeInternal(OPCREAZIONE, value);
  }

  /**
   * 
   *  Gets the attribute value for Dtultmod, using the alias name Dtultmod
   */
  public Date getDtultmod()
  {
    return (Date)getAttributeInternal(DTULTMOD);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Dtultmod
   */
  public void setDtultmod(Date value)
  {
    setAttributeInternal(DTULTMOD, value);
  }

  /**
   * 
   *  Gets the attribute value for Opultmod, using the alias name Opultmod
   */
  public String getOpultmod()
  {
    return (String)getAttributeInternal(OPULTMOD);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Opultmod
   */
  public void setOpultmod(String value)
  {
    setAttributeInternal(OPULTMOD, value);
  }

  /**
   * 
   *  Gets the attribute value for Idopanamnesi, using the alias name Idopanamnesi
   */
  public Integer getIdopanamnesi()
  {
    return (Integer)getAttributeInternal(IDOPANAMNESI);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Idopanamnesi
   */
  public void setIdopanamnesi(Integer value)
  {
    setAttributeInternal(IDOPANAMNESI, value);
  }

  /**
   * 
   *  Gets the attribute value for Dtanamnesi, using the alias name Dtanamnesi
   */
  public Date getDtanamnesi()
  {
    return (Date)getAttributeInternal(DTANAMNESI);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Dtanamnesi
   */
  public void setDtanamnesi(Date value)
  {
    setAttributeInternal(DTANAMNESI, value);
  }

  /**
   * 
   *  Gets the attribute value for Idesitoaf, using the alias name Idesitoaf
   */
  public Integer getIdesitoaf()
  {
    return (Integer)getAttributeInternal(IDESITOAF);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Idesitoaf
   */
  public void setIdesitoaf(Integer value)
  {
    setAttributeInternal(IDESITOAF, value);
  }

  /**
   * 
   *  Gets the attribute value for NoteFam, using the alias name NoteFam
   */
  public String getNoteFam()
  {
    return (String)getAttributeInternal(NOTEFAM);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for NoteFam
   */
  public void setNoteFam(String value)
  {
    setAttributeInternal(NOTEFAM, value);
  }

  /**
   * 
   *  Gets the attribute value for Ibd, using the alias name Ibd
   */
  public Integer getIbd()
  {
    return (Integer)getAttributeInternal(IBD);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Ibd
   */
  public void setIbd(Integer value)
  {
    setAttributeInternal(IBD, value);
  }

  /**
   * 
   *  Gets the attribute value for PcPresente, using the alias name PcPresente
   */
  public Integer getPcPresente()
  {
    return (Integer)getAttributeInternal(PCPRESENTE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for PcPresente
   */
  public void setPcPresente(Integer value)
  {
    setAttributeInternal(PCPRESENTE, value);
  }

  /**
   * 
   *  Gets the attribute value for PcDtintervento, using the alias name PcDtintervento
   */
  public Date getPcDtintervento()
  {
    return (Date)getAttributeInternal(PCDTINTERVENTO);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for PcDtintervento
   */
  public void setPcDtintervento(Date value)
  {
    setAttributeInternal(PCDTINTERVENTO, value);
  }

  /**
   * 
   *  Gets the attribute value for PcIntnoncod, using the alias name PcIntnoncod
   */
  public String getPcIntnoncod()
  {
    return (String)getAttributeInternal(PCINTNONCOD);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for PcIntnoncod
   */
  public void setPcIntnoncod(String value)
  {
    setAttributeInternal(PCINTNONCOD, value);
  }

  /**
   * 
   *  Gets the attribute value for PcNota, using the alias name PcNota
   */
  public String getPcNota()
  {
    return (String)getAttributeInternal(PCNOTA);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for PcNota
   */
  public void setPcNota(String value)
  {
    setAttributeInternal(PCNOTA, value);
  }

  /**
   * 
   *  Gets the attribute value for AcPresenti, using the alias name AcPresenti
   */
  public Integer getAcPresenti()
  {
    return (Integer)getAttributeInternal(ACPRESENTI);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for AcPresenti
   */
  public void setAcPresenti(Integer value)
  {
    setAttributeInternal(ACPRESENTI, value);
  }

  /**
   * 
   *  Gets the attribute value for AcDtsosp, using the alias name AcDtsosp
   */
  public Date getAcDtsosp()
  {
    return (Date)getAttributeInternal(ACDTSOSP);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for AcDtsosp
   */
  public void setAcDtsosp(Date value)
  {
    setAttributeInternal(ACDTSOSP, value);
  }

  /**
   * 
   *  Gets the attribute value for AcNote, using the alias name AcNote
   */
  public String getAcNote()
  {
    return (String)getAttributeInternal(ACNOTE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for AcNote
   */
  public void setAcNote(String value)
  {
    setAttributeInternal(ACNOTE, value);
  }

  /**
   * 
   *  Gets the attribute value for PaPresente, using the alias name PaPresente
   */
  public Integer getPaPresente()
  {
    return (Integer)getAttributeInternal(PAPRESENTE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for PaPresente
   */
  public void setPaPresente(Integer value)
  {
    setAttributeInternal(PAPRESENTE, value);
  }

  /**
   * 
   *  Gets the attribute value for PaDatainizio, using the alias name PaDatainizio
   */
  public Date getPaDatainizio()
  {
    return (Date)getAttributeInternal(PADATAINIZIO);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for PaDatainizio
   */
  public void setPaDatainizio(Date value)
  {
    setAttributeInternal(PADATAINIZIO, value);
  }

  /**
   * 
   *  Gets the attribute value for PaNote, using the alias name PaNote
   */
  public String getPaNote()
  {
    return (String)getAttributeInternal(PANOTE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for PaNote
   */
  public void setPaNote(String value)
  {
    setAttributeInternal(PANOTE, value);
  }

  /**
   * 
   *  Gets the attribute value for RcPresente, using the alias name RcPresente
   */
  public Integer getRcPresente()
  {
    return (Integer)getAttributeInternal(RCPRESENTE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for RcPresente
   */
  public void setRcPresente(Integer value)
  {
    setAttributeInternal(RCPRESENTE, value);
  }

  /**
   * 
   *  Gets the attribute value for RcNote, using the alias name RcNote
   */
  public String getRcNote()
  {
    return (String)getAttributeInternal(RCNOTE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for RcNote
   */
  public void setRcNote(String value)
  {
    setAttributeInternal(RCNOTE, value);
  }

  /**
   * 
   *  Gets the attribute value for AlPresente, using the alias name AlPresente
   */
  public Integer getAlPresente()
  {
    return (Integer)getAttributeInternal(ALPRESENTE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for AlPresente
   */
  public void setAlPresente(Integer value)
  {
    setAttributeInternal(ALPRESENTE, value);
  }

  /**
   * 
   *  Gets the attribute value for AlNote, using the alias name AlNote
   */
  public String getAlNote()
  {
    return (String)getAttributeInternal(ALNOTE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for AlNote
   */
  public void setAlNote(String value)
  {
    setAttributeInternal(ALNOTE, value);
  }

  /**
   * 
   *  Gets the attribute value for NotePers, using the alias name NotePers
   */
  public String getNotePers()
  {
    return (String)getAttributeInternal(NOTEPERS);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for NotePers
   */
  public void setNotePers(String value)
  {
    setAttributeInternal(NOTEPERS, value);
  }

  /**
   * 
   *  getAttrInvokeAccessor: generated method. Do not modify.
   */
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

  /**
   * 
   *  setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


  /**
   * 
   *  Gets the attribute value for Tpscr, using the alias name Tpscr
   */
  public String getTpscr()
  {
    return (String)getAttributeInternal(TPSCR);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Tpscr
   */
  public void setTpscr(String value)
  {
    setAttributeInternal(TPSCR, value);
  }

  /**
   * 
   *  Gets the attribute value for Ulss, using the alias name Ulss
   */
  public String getUlss()
  {
    return (String)getAttributeInternal(ULSS);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Ulss
   */
  public void setUlss(String value)
  {
    setAttributeInternal(ULSS, value);
  }


    /**
     * Gets the attribute value for Exulss, using the alias name Exulss.
     * @return the value of Exulss
     */
    public String getExulss() {
        return (String) getAttributeInternal(EXULSS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Exulss.
     * @param value value to set the Exulss
     */
    public void setExulss(String value) {
        setAttributeInternal(EXULSS, value);
    }

    /**
     *
     *  Gets the associated entity A_SoOpmedicoImpl
     */
    public A_SoOpmedicoImpl getA_SoOpmedico()
	{
		return (A_SoOpmedicoImpl)getAttributeInternal(A_SOOPMEDICO);
	}

	/**
	 * 
	 *  Sets <code>value</code> as the associated entity A_SoOpmedicoImpl
	 */
	public void setA_SoOpmedico(A_SoOpmedicoImpl value)
	{
		setAttributeInternal(A_SOOPMEDICO, value);
	}

    /**
     * @return the associated entity A_SoAccColon2livImpl.
     */
    public A_SoAccColon2livImpl getA_SoAccColon2liv() {
        return (A_SoAccColon2livImpl) getAttributeInternal(A_SOACCCOLON2LIV);
    }

    /**
     * Sets <code>value</code> as the associated entity A_SoAccColon2livImpl.
     */
    public void setA_SoAccColon2liv(A_SoAccColon2livImpl value) {
        setAttributeInternal(A_SOACCCOLON2LIV, value);
    }

    /**
     * @param idAnamco key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer idAnamco) {
        return new Key(new Object[] { idAnamco });
    }


}
