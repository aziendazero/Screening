package model.accettazione;

import model.accettazione.common.AccMa_SoAnamnesimxSintomiViewRow;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Apr 16 10:13:36 CEST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AccMa_SoAnamnesimxSintomiViewRowImpl extends ViewRowImpl implements AccMa_SoAnamnesimxSintomiViewRow {

    public static final int ENTITY_ACCMA_SOANAMNESIMXSINTOMI = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        IdAnammxSint {
            public Object get(AccMa_SoAnamnesimxSintomiViewRowImpl obj) {
                return obj.getIdAnammxSint();
            }

            public void put(AccMa_SoAnamnesimxSintomiViewRowImpl obj, Object value) {
                obj.setIdAnammxSint((Integer) value);
            }
        }
        ,
        IdAnamma {
            public Object get(AccMa_SoAnamnesimxSintomiViewRowImpl obj) {
                return obj.getIdAnamma();
            }

            public void put(AccMa_SoAnamnesimxSintomiViewRowImpl obj, Object value) {
                obj.setIdAnamma((Integer) value);
            }
        }
        ,
        Idsintomo {
            public Object get(AccMa_SoAnamnesimxSintomiViewRowImpl obj) {
                return obj.getIdsintomo();
            }

            public void put(AccMa_SoAnamnesimxSintomiViewRowImpl obj, Object value) {
                obj.setIdsintomo((Integer) value);
            }
        }
        ,
        Ulss {
            public Object get(AccMa_SoAnamnesimxSintomiViewRowImpl obj) {
                return obj.getUlss();
            }

            public void put(AccMa_SoAnamnesimxSintomiViewRowImpl obj, Object value) {
                obj.setUlss((String) value);
            }
        }
        ,
        Tpscr {
            public Object get(AccMa_SoAnamnesimxSintomiViewRowImpl obj) {
                return obj.getTpscr();
            }

            public void put(AccMa_SoAnamnesimxSintomiViewRowImpl obj, Object value) {
                obj.setTpscr((String) value);
            }
        }
        ,
        DxIdsede {
            public Object get(AccMa_SoAnamnesimxSintomiViewRowImpl obj) {
                return obj.getDxIdsede();
            }

            public void put(AccMa_SoAnamnesimxSintomiViewRowImpl obj, Object value) {
                obj.setDxIdsede((Integer) value);
            }
        }
        ,
        SxIdsede {
            public Object get(AccMa_SoAnamnesimxSintomiViewRowImpl obj) {
                return obj.getSxIdsede();
            }

            public void put(AccMa_SoAnamnesimxSintomiViewRowImpl obj, Object value) {
                obj.setSxIdsede((Integer) value);
            }
        }
        ,
        Descr {
            public Object get(AccMa_SoAnamnesimxSintomiViewRowImpl obj) {
                return obj.getDescr();
            }

            public void put(AccMa_SoAnamnesimxSintomiViewRowImpl obj, Object value) {
                obj.setDescr((String) value);
            }
        }
        ,
        Ordine {
            public Object get(AccMa_SoAnamnesimxSintomiViewRowImpl obj) {
                return obj.getOrdine();
            }

            public void put(AccMa_SoAnamnesimxSintomiViewRowImpl obj, Object value) {
                obj.setOrdine((Integer) value);
            }
        }
        ,
        Dessededx {
            public Object get(AccMa_SoAnamnesimxSintomiViewRowImpl obj) {
                return obj.getDessededx();
            }

            public void put(AccMa_SoAnamnesimxSintomiViewRowImpl obj, Object value) {
                obj.setDessededx((String) value);
            }
        }
        ,
        Dessedesx {
            public Object get(AccMa_SoAnamnesimxSintomiViewRowImpl obj) {
                return obj.getDessedesx();
            }

            public void put(AccMa_SoAnamnesimxSintomiViewRowImpl obj, Object value) {
                obj.setDessedesx((String) value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public abstract Object get(AccMa_SoAnamnesimxSintomiViewRowImpl object);

        public abstract void put(AccMa_SoAnamnesimxSintomiViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int IDANAMMXSINT = AttributesEnum.IdAnammxSint.index();
    public static final int IDANAMMA = AttributesEnum.IdAnamma.index();
    public static final int IDSINTOMO = AttributesEnum.Idsintomo.index();
    public static final int ULSS = AttributesEnum.Ulss.index();
    public static final int TPSCR = AttributesEnum.Tpscr.index();
    public static final int DXIDSEDE = AttributesEnum.DxIdsede.index();
    public static final int SXIDSEDE = AttributesEnum.SxIdsede.index();
    public static final int DESCR = AttributesEnum.Descr.index();
    public static final int ORDINE = AttributesEnum.Ordine.index();
    public static final int DESSEDEDX = AttributesEnum.Dessededx.index();
    public static final int DESSEDESX = AttributesEnum.Dessedesx.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AccMa_SoAnamnesimxSintomiViewRowImpl() {
    }

    /**
     * Gets AccMa_SoAnamnesimxSintomi entity object.
     * @return the AccMa_SoAnamnesimxSintomi
     */
    public AccMa_SoAnamnesimxSintomiImpl getAccMa_SoAnamnesimxSintomi() {
        return (AccMa_SoAnamnesimxSintomiImpl) getEntity(ENTITY_ACCMA_SOANAMNESIMXSINTOMI);
    }

    /**
     * Gets the attribute value for ID_ANAMMX_SINT using the alias name IdAnammxSint.
     * @return the ID_ANAMMX_SINT
     */
    public Integer getIdAnammxSint() {
        return (Integer) getAttributeInternal(IDANAMMXSINT);
    }

    /**
     * Sets <code>value</code> as attribute value for ID_ANAMMX_SINT using the alias name IdAnammxSint.
     * @param value value to set the ID_ANAMMX_SINT
     */
    public void setIdAnammxSint(Integer value) {
        setAttributeInternal(IDANAMMXSINT, value);
    }

    /**
     * Gets the attribute value for ID_ANAMMA using the alias name IdAnamma.
     * @return the ID_ANAMMA
     */
    public Integer getIdAnamma() {
        return (Integer) getAttributeInternal(IDANAMMA);
    }

    /**
     * Sets <code>value</code> as attribute value for ID_ANAMMA using the alias name IdAnamma.
     * @param value value to set the ID_ANAMMA
     */
    public void setIdAnamma(Integer value) {
        setAttributeInternal(IDANAMMA, value);
    }

    /**
     * Gets the attribute value for IDSINTOMO using the alias name Idsintomo.
     * @return the IDSINTOMO
     */
    public Integer getIdsintomo() {
        return (Integer) getAttributeInternal(IDSINTOMO);
    }

    /**
     * Sets <code>value</code> as attribute value for IDSINTOMO using the alias name Idsintomo.
     * @param value value to set the IDSINTOMO
     */
    public void setIdsintomo(Integer value) {
        setAttributeInternal(IDSINTOMO, value);
    }

    /**
     * Gets the attribute value for ULSS using the alias name Ulss.
     * @return the ULSS
     */
    public String getUlss() {
        return (String) getAttributeInternal(ULSS);
    }

    /**
     * Sets <code>value</code> as attribute value for ULSS using the alias name Ulss.
     * @param value value to set the ULSS
     */
    public void setUlss(String value) {
        setAttributeInternal(ULSS, value);
    }

    /**
     * Gets the attribute value for TPSCR using the alias name Tpscr.
     * @return the TPSCR
     */
    public String getTpscr() {
        return (String) getAttributeInternal(TPSCR);
    }

    /**
     * Sets <code>value</code> as attribute value for TPSCR using the alias name Tpscr.
     * @param value value to set the TPSCR
     */
    public void setTpscr(String value) {
        setAttributeInternal(TPSCR, value);
    }

    /**
     * Gets the attribute value for DX_IDSEDE using the alias name DxIdsede.
     * @return the DX_IDSEDE
     */
    public Integer getDxIdsede() {
        return (Integer) getAttributeInternal(DXIDSEDE);
    }

    /**
     * Sets <code>value</code> as attribute value for DX_IDSEDE using the alias name DxIdsede.
     * @param value value to set the DX_IDSEDE
     */
    public void setDxIdsede(Integer value) {
        setAttributeInternal(DXIDSEDE, value);
    }

    /**
     * Gets the attribute value for SX_IDSEDE using the alias name SxIdsede.
     * @return the SX_IDSEDE
     */
    public Integer getSxIdsede() {
        return (Integer) getAttributeInternal(SXIDSEDE);
    }

    /**
     * Sets <code>value</code> as attribute value for SX_IDSEDE using the alias name SxIdsede.
     * @param value value to set the SX_IDSEDE
     */
    public void setSxIdsede(Integer value) {
        setAttributeInternal(SXIDSEDE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Descr.
     * @return the Descr
     */
    public String getDescr() {
        return (String) getAttributeInternal(DESCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Descr.
     * @param value value to set the  Descr
     */
    public void setDescr(String value) {
        setAttributeInternal(DESCR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Ordine.
     * @return the Ordine
     */
    public Integer getOrdine() {
        return (Integer) getAttributeInternal(ORDINE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Ordine.
     * @param value value to set the  Ordine
     */
    public void setOrdine(Integer value) {
        setAttributeInternal(ORDINE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Dessededx.
     * @return the Dessededx
     */
    public String getDessededx() {
        return (String) getAttributeInternal(DESSEDEDX);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Dessededx.
     * @param value value to set the  Dessededx
     */
    public void setDessededx(String value) {
        setAttributeInternal(DESSEDEDX, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Dessedesx.
     * @return the Dessedesx
     */
    public String getDessedesx() {
        return (String) getAttributeInternal(DESSEDESX);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Dessedesx.
     * @param value value to set the  Dessedesx
     */
    public void setDessedesx(String value) {
        setAttributeInternal(DESSEDESX, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

