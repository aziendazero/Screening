package model.accettazione;

import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---    Warning: Do not modify method signatures of generated methods.
//  ---------------------------------------------------------------------

public class AccCo_SoSoggScrImpl extends EntityImpl {

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Codts {
            public Object get(AccCo_SoSoggScrImpl obj) {
                return obj.getCodts();
            }

            public void put(AccCo_SoSoggScrImpl obj, Object value) {
                obj.setCodts((String)value);
            }
        }
        ,
        Ulss {
            public Object get(AccCo_SoSoggScrImpl obj) {
                return obj.getUlss();
            }

            public void put(AccCo_SoSoggScrImpl obj, Object value) {
                obj.setUlss((String)value);
            }
        }
        ,
        Tpscr {
            public Object get(AccCo_SoSoggScrImpl obj) {
                return obj.getTpscr();
            }

            public void put(AccCo_SoSoggScrImpl obj, Object value) {
                obj.setTpscr((String)value);
            }
        }
        ,
        Roundindiv {
            public Object get(AccCo_SoSoggScrImpl obj) {
                return obj.getRoundindiv();
            }

            public void put(AccCo_SoSoggScrImpl obj, Object value) {
                obj.setRoundindiv((Integer)value);
            }
        }
        ,
        Numanatomia {
            public Object get(AccCo_SoSoggScrImpl obj) {
                return obj.getNumanatomia();
            }

            public void put(AccCo_SoSoggScrImpl obj, Object value) {
                obj.setNumanatomia((Integer)value);
            }
        }
        ,
        Numradiologia {
            public Object get(AccCo_SoSoggScrImpl obj) {
                return obj.getNumradiologia();
            }

            public void put(AccCo_SoSoggScrImpl obj, Object value) {
                obj.setNumradiologia((Integer)value);
            }
        }
        ,
        Numlab {
            public Object get(AccCo_SoSoggScrImpl obj) {
                return obj.getNumlab();
            }

            public void put(AccCo_SoSoggScrImpl obj, Object value) {
                obj.setNumlab((Integer)value);
            }
        }
        ,
        Roundinviti {
            public Object get(AccCo_SoSoggScrImpl obj) {
                return obj.getRoundinviti();
            }

            public void put(AccCo_SoSoggScrImpl obj, Object value) {
                obj.setRoundinviti((Integer)value);
            }
        }
        ,
        Altorischio {
            public Object get(AccCo_SoSoggScrImpl obj) {
                return obj.getAltorischio();
            }

            public void put(AccCo_SoSoggScrImpl obj, Object value) {
                obj.setAltorischio((Integer)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AccCo_SoSoggScrImpl object);

        public abstract void put(AccCo_SoSoggScrImpl object, Object value);

        public int index() {
            return AccCo_SoSoggScrImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AccCo_SoSoggScrImpl.AttributesEnum.firstIndex() + AccCo_SoSoggScrImpl.AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AccCo_SoSoggScrImpl.AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CODTS = AttributesEnum.Codts.index();
    public static final int ULSS = AttributesEnum.Ulss.index();
    public static final int TPSCR = AttributesEnum.Tpscr.index();
    public static final int ROUNDINDIV = AttributesEnum.Roundindiv.index();
    public static final int NUMANATOMIA = AttributesEnum.Numanatomia.index();
    public static final int NUMRADIOLOGIA = AttributesEnum.Numradiologia.index();
    public static final int NUMLAB = AttributesEnum.Numlab.index();
    public static final int ROUNDINVITI = AttributesEnum.Roundinviti.index();
    public static final int ALTORISCHIO = AttributesEnum.Altorischio.index();

    /**
     *
     *  This is the default constructor (do not remove)
     */
  public AccCo_SoSoggScrImpl()
  {
  }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.accettazione.AccCo_SoSoggScr");
    }

    /**
     *
     *  Gets the attribute value for Codts, using the alias name Codts
     */
    public String getCodts()
  {
    return (String)getAttributeInternal(CODTS);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Codts
   */
  public void setCodts(String value)
  {
    setAttributeInternal(CODTS, value);
  }

  /**
   * 
   *  Gets the attribute value for Ulss, using the alias name Ulss
   */
  public String getUlss()
  {
    return (String)getAttributeInternal(ULSS);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Ulss
   */
  public void setUlss(String value)
  {
    setAttributeInternal(ULSS, value);
  }

  /**
   * 
   *  Gets the attribute value for Tpscr, using the alias name Tpscr
   */
  public String getTpscr()
  {
    return (String)getAttributeInternal(TPSCR);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Tpscr
   */
  public void setTpscr(String value)
  {
    setAttributeInternal(TPSCR, value);
  }

  /**
   * 
   *  Gets the attribute value for Roundindiv, using the alias name Roundindiv
   */
  public Integer getRoundindiv()
  {
    return (Integer)getAttributeInternal(ROUNDINDIV);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Roundindiv
   */
  public void setRoundindiv(Integer value)
  {
    setAttributeInternal(ROUNDINDIV, value);
  }

  /**
   * 
   *  Gets the attribute value for Numanatomia, using the alias name Numanatomia
   */
  public Integer getNumanatomia()
  {
    return (Integer)getAttributeInternal(NUMANATOMIA);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Numanatomia
   */
  public void setNumanatomia(Integer value)
  {
    setAttributeInternal(NUMANATOMIA, value);
  }

  /**
   * 
   *  Gets the attribute value for Numradiologia, using the alias name Numradiologia
   */
  public Integer getNumradiologia()
  {
    return (Integer)getAttributeInternal(NUMRADIOLOGIA);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Numradiologia
   */
  public void setNumradiologia(Integer value)
  {
    setAttributeInternal(NUMRADIOLOGIA, value);
  }

  /**
   * 
   *  Gets the attribute value for Numlab, using the alias name Numlab
   */
  public Integer getNumlab()
  {
    return (Integer)getAttributeInternal(NUMLAB);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Numlab
   */
  public void setNumlab(Integer value)
  {
    setAttributeInternal(NUMLAB, value);
  }

  /**
   * 
   *  Gets the attribute value for Roundinviti, using the alias name Roundinviti
   */
  public Integer getRoundinviti()
  {
    return (Integer)getAttributeInternal(ROUNDINVITI);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Roundinviti
   */
  public void setRoundinviti(Integer value)
  {
    setAttributeInternal(ROUNDINVITI, value);
  }

  /**
   * 
   *  Gets the attribute value for Altorischio, using the alias name Altorischio
   */
  public Integer getAltorischio()
  {
    return (Integer)getAttributeInternal(ALTORISCHIO);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Altorischio
   */
  public void setAltorischio(Integer value)
  {
    setAttributeInternal(ALTORISCHIO, value);
  }

  /**
   * 
   *  getAttrInvokeAccessor: generated method. Do not modify.
   */
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

  /**
   * 
   *  setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param codts key constituent
     * @param ulss key constituent
     * @param tpscr key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String codts, String ulss, String tpscr) {
        return new Key(new Object[]{codts, ulss, tpscr});
    }

}
