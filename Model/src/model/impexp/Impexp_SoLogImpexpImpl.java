package model.impexp;

import model.conf.Cnf_SoErroreImpl;

import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.Key;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---    Warning: Do not modify method signatures of generated methods.
//  ---------------------------------------------------------------------

public class Impexp_SoLogImpexpImpl extends EntityImpl {


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Codts {
            public Object get(Impexp_SoLogImpexpImpl obj) {
                return obj.getCodts();
            }

            public void put(Impexp_SoLogImpexpImpl obj, Object value) {
                obj.setCodts((String)value);
            }
        }
        ,
        Gruppo {
            public Object get(Impexp_SoLogImpexpImpl obj) {
                return obj.getGruppo();
            }

            public void put(Impexp_SoLogImpexpImpl obj, Object value) {
                obj.setGruppo((String)value);
            }
        }
        ,
        Impexp {
            public Object get(Impexp_SoLogImpexpImpl obj) {
                return obj.getImpexp();
            }

            public void put(Impexp_SoLogImpexpImpl obj, Object value) {
                obj.setImpexp((String)value);
            }
        }
        ,
        Coderrore {
            public Object get(Impexp_SoLogImpexpImpl obj) {
                return obj.getCoderrore();
            }

            public void put(Impexp_SoLogImpexpImpl obj, Object value) {
                obj.setCoderrore((String)value);
            }
        }
        ,
        Ulss {
            public Object get(Impexp_SoLogImpexpImpl obj) {
                return obj.getUlss();
            }

            public void put(Impexp_SoLogImpexpImpl obj, Object value) {
                obj.setUlss((String)value);
            }
        }
        ,
        Tpscr {
            public Object get(Impexp_SoLogImpexpImpl obj) {
                return obj.getTpscr();
            }

            public void put(Impexp_SoLogImpexpImpl obj, Object value) {
                obj.setTpscr((String)value);
            }
        }
        ,
        Msg {
            public Object get(Impexp_SoLogImpexpImpl obj) {
                return obj.getMsg();
            }

            public void put(Impexp_SoLogImpexpImpl obj, Object value) {
                obj.setMsg((String)value);
            }
        }
        ,
        Numero {
            public Object get(Impexp_SoLogImpexpImpl obj) {
                return obj.getNumero();
            }

            public void put(Impexp_SoLogImpexpImpl obj, Object value) {
                obj.setNumero((Integer)value);
            }
        }
        ,
        Cnf_SoErrore {
            public Object get(Impexp_SoLogImpexpImpl obj) {
                return obj.getCnf_SoErrore();
            }

            public void put(Impexp_SoLogImpexpImpl obj, Object value) {
                obj.setCnf_SoErrore((Cnf_SoErroreImpl)value);
            }
        }
        ,
        Impexp_SoErrore {
            public Object get(Impexp_SoLogImpexpImpl obj) {
                return obj.getImpexp_SoErrore();
            }

            public void put(Impexp_SoLogImpexpImpl obj, Object value) {
                obj.setImpexp_SoErrore((EntityImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(Impexp_SoLogImpexpImpl object);

        public abstract void put(Impexp_SoLogImpexpImpl object, Object value);

        public int index() {
            return Impexp_SoLogImpexpImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return Impexp_SoLogImpexpImpl.AttributesEnum.firstIndex() + Impexp_SoLogImpexpImpl.AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = Impexp_SoLogImpexpImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CODTS = AttributesEnum.Codts.index();
    public static final int GRUPPO = AttributesEnum.Gruppo.index();
    public static final int IMPEXP = AttributesEnum.Impexp.index();
    public static final int CODERRORE = AttributesEnum.Coderrore.index();
    public static final int ULSS = AttributesEnum.Ulss.index();
    public static final int TPSCR = AttributesEnum.Tpscr.index();
    public static final int MSG = AttributesEnum.Msg.index();
    public static final int NUMERO = AttributesEnum.Numero.index();
    public static final int CNF_SOERRORE = AttributesEnum.Cnf_SoErrore.index();
    public static final int IMPEXP_SOERRORE = AttributesEnum.Impexp_SoErrore.index();

    /**
     *
     *  This is the default constructor (do not remove)
     */
  public Impexp_SoLogImpexpImpl()
  {
  }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.impexp.Impexp_SoLogImpexp");
    }

    /**
     *
     *  Gets the attribute value for Codts, using the alias name Codts
     */
    public String getCodts()
  {
    return (String)getAttributeInternal(CODTS);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Codts
   */
  public void setCodts(String value)
  {
    setAttributeInternal(CODTS, value);
  }

  /**
   * 
   *  Gets the attribute value for Gruppo, using the alias name Gruppo
   */
  public String getGruppo()
  {
    return (String)getAttributeInternal(GRUPPO);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Gruppo
   */
  public void setGruppo(String value)
  {
    setAttributeInternal(GRUPPO, value);
  }

  /**
   * 
   *  Gets the attribute value for Impexp, using the alias name Impexp
   */
  public String getImpexp()
  {
    return (String)getAttributeInternal(IMPEXP);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Impexp
   */
  public void setImpexp(String value)
  {
    setAttributeInternal(IMPEXP, value);
  }

  /**
   * 
   *  Gets the attribute value for Coderrore, using the alias name Coderrore
   */
  public String getCoderrore()
  {
    return (String)getAttributeInternal(CODERRORE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Coderrore
   */
  public void setCoderrore(String value)
  {
    setAttributeInternal(CODERRORE, value);
  }

  /**
   * 
   *  Gets the attribute value for Ulss, using the alias name Ulss
   */
  public String getUlss()
  {
    return (String)getAttributeInternal(ULSS);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Ulss
   */
  public void setUlss(String value)
  {
    setAttributeInternal(ULSS, value);
  }

  /**
   * 
   *  Gets the attribute value for Tpscr, using the alias name Tpscr
   */
  public String getTpscr()
  {
    return (String)getAttributeInternal(TPSCR);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Tpscr
   */
  public void setTpscr(String value)
  {
    setAttributeInternal(TPSCR, value);
  }

  /**
   * 
   *  getAttrInvokeAccessor: generated method. Do not modify.
   */
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

  /**
   * 
   *  setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

  /**
     *
     *  Gets the associated entity Cnf_SoErroreImpl
     */
    public Cnf_SoErroreImpl getCnf_SoErrore()
  {
    return (Cnf_SoErroreImpl)getAttributeInternal(CNF_SOERRORE);
  }

  /**
   * 
   *  Sets <code>value</code> as the associated entity Cnf_SoErroreImpl
   */
  public void setCnf_SoErrore(Cnf_SoErroreImpl value)
  {
    setAttributeInternal(CNF_SOERRORE, value);
  }


    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getImpexp_SoErrore() {
        return (EntityImpl)getAttributeInternal(IMPEXP_SOERRORE);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setImpexp_SoErrore(EntityImpl value) {
        setAttributeInternal(IMPEXP_SOERRORE, value);
    }

    /**
     * @param codts key constituent
     * @param gruppo key constituent
     * @param impexp key constituent
     * @param coderrore key constituent
     * @param ulss key constituent
     * @param tpscr key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String codts, String gruppo, String impexp, String coderrore, String ulss,
                                       String tpscr) {
        return new Key(new Object[]{codts, gruppo, impexp, coderrore, ulss, tpscr});
    }

    /**
     *
     *  Gets the attribute value for Msg, using the alias name Msg
     */
  public String getMsg()
  {
    return (String)getAttributeInternal(MSG);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Msg
   */
  public void setMsg(String value)
  {
    setAttributeInternal(MSG, value);
  }

	/**
	 * Gets the attribute value for Numero, using the alias name Numero.
	 * @return the value of Numero
	 */
	public Integer getNumero() {
		return (Integer)getAttributeInternal(NUMERO);
	}

	/**
	 * Sets <code>value</code> as the attribute value for Numero.
	 * @param value value to set the Numero
	 */
	public void setNumero(Integer value) {
		setAttributeInternal(NUMERO, value);
	}


}
