package model.impexp;


import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.AttributeDefImpl;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---    Warning: Do not modify method signatures of generated methods.
//  ---------------------------------------------------------------------

public class Impexp_SoLogImpexpViewRowImpl extends ViewRowImpl implements model.common.Impexp_SoLogImpexpViewRow 
{


	public static final int ENTITY_IMPEXP_SOLOGIMPEXP = 0;

	/**
	 * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
	 */
    public enum AttributesEnum {
		Codts {
			public Object get(Impexp_SoLogImpexpViewRowImpl obj) {
				return obj.getCodts();
			}

			public void put(Impexp_SoLogImpexpViewRowImpl obj, Object value) {
				obj.setCodts((String)value);
			}
		}
		,
		Gruppo {
			public Object get(Impexp_SoLogImpexpViewRowImpl obj) {
				return obj.getGruppo();
			}

			public void put(Impexp_SoLogImpexpViewRowImpl obj, Object value) {
				obj.setGruppo((String)value);
			}
		}
		,
		Impexp {
			public Object get(Impexp_SoLogImpexpViewRowImpl obj) {
				return obj.getImpexp();
			}

			public void put(Impexp_SoLogImpexpViewRowImpl obj, Object value) {
				obj.setImpexp((String)value);
			}
		}
		,
		Coderrore {
			public Object get(Impexp_SoLogImpexpViewRowImpl obj) {
				return obj.getCoderrore();
			}

			public void put(Impexp_SoLogImpexpViewRowImpl obj, Object value) {
				obj.setCoderrore((String)value);
			}
		}
		,
		Ulss {
			public Object get(Impexp_SoLogImpexpViewRowImpl obj) {
				return obj.getUlss();
			}

			public void put(Impexp_SoLogImpexpViewRowImpl obj, Object value) {
				obj.setUlss((String)value);
			}
		}
		,
		Tpscr {
			public Object get(Impexp_SoLogImpexpViewRowImpl obj) {
				return obj.getTpscr();
			}

			public void put(Impexp_SoLogImpexpViewRowImpl obj, Object value) {
				obj.setTpscr((String)value);
			}
		}
		,
		Msg {
			public Object get(Impexp_SoLogImpexpViewRowImpl obj) {
				return obj.getMsg();
			}

			public void put(Impexp_SoLogImpexpViewRowImpl obj, Object value) {
				obj.setMsg((String)value);
			}
		}
		,
		Numero {
			public Object get(Impexp_SoLogImpexpViewRowImpl obj) {
				return obj.getNumero();
			}

			public void put(Impexp_SoLogImpexpViewRowImpl obj, Object value) {
				obj.setNumero((Integer)value);
			}
		}
		;
		private static AttributesEnum[] vals = null;
		private static int firstIndex = 0;

        public abstract Object get(Impexp_SoLogImpexpViewRowImpl object);

        public abstract void put(Impexp_SoLogImpexpViewRowImpl object, Object value);

        public int index() {
            return Impexp_SoLogImpexpViewRowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return Impexp_SoLogImpexpViewRowImpl.AttributesEnum.firstIndex() + Impexp_SoLogImpexpViewRowImpl.AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = Impexp_SoLogImpexpViewRowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }

	public static final int CODTS = AttributesEnum.Codts.index();
	public static final int GRUPPO = AttributesEnum.Gruppo.index();
	public static final int IMPEXP = AttributesEnum.Impexp.index();
	public static final int CODERRORE = AttributesEnum.Coderrore.index();
	public static final int ULSS = AttributesEnum.Ulss.index();
	public static final int TPSCR = AttributesEnum.Tpscr.index();
	public static final int MSG = AttributesEnum.Msg.index();
	public static final int NUMERO = AttributesEnum.Numero.index();

	/**
	 *
	 *  This is the default constructor (do not remove)
	 */
  public Impexp_SoLogImpexpViewRowImpl()
  {
  }

  /**
   * 
   *  Gets Impexp_SoLogImpexp entity object.
   */
  public Impexp_SoLogImpexpImpl getImpexp_SoLogImpexp()
  {
    return (Impexp_SoLogImpexpImpl)getEntity(0);
  }

  /**
   * 
   *  Gets the attribute value for CODTS using the alias name Codts
   */
  public String getCodts()
  {
    return (String)getAttributeInternal(CODTS);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for CODTS using the alias name Codts
   */
  public void setCodts(String value)
  {
    setAttributeInternal(CODTS, value);
  }

  /**
   * 
   *  Gets the attribute value for GRUPPO using the alias name Gruppo
   */
  public String getGruppo()
  {
    return (String)getAttributeInternal(GRUPPO);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for GRUPPO using the alias name Gruppo
   */
  public void setGruppo(String value)
  {
    setAttributeInternal(GRUPPO, value);
  }

  /**
   * 
   *  Gets the attribute value for IMPEXP using the alias name Impexp
   */
  public String getImpexp()
  {
    return (String)getAttributeInternal(IMPEXP);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for IMPEXP using the alias name Impexp
   */
  public void setImpexp(String value)
  {
    setAttributeInternal(IMPEXP, value);
  }

  /**
   * 
   *  Gets the attribute value for CODERRORE using the alias name Coderrore
   */
  public String getCoderrore()
  {
    return (String)getAttributeInternal(CODERRORE);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for CODERRORE using the alias name Coderrore
   */
  public void setCoderrore(String value)
  {
    setAttributeInternal(CODERRORE, value);
  }

  /**
   * 
   *  Gets the attribute value for ULSS using the alias name Ulss
   */
  public String getUlss()
  {
    return (String)getAttributeInternal(ULSS);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for ULSS using the alias name Ulss
   */
  public void setUlss(String value)
  {
    setAttributeInternal(ULSS, value);
  }

  /**
   * 
   *  Gets the attribute value for TPSCR using the alias name Tpscr
   */
  public String getTpscr()
  {
    return (String)getAttributeInternal(TPSCR);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for TPSCR using the alias name Tpscr
   */
  public void setTpscr(String value)
  {
    setAttributeInternal(TPSCR, value);
  }

	/**
	 * Gets the attribute value for MSG using the alias name Msg.
	 * @return the MSG
	 */
	public String getMsg() {
		return (String) getAttributeInternal(MSG);
	}

	/**
	 * Sets <code>value</code> as attribute value for MSG using the alias name Msg.
	 * @param value value to set the MSG
	 */
	public void setMsg(String value) {
		setAttributeInternal(MSG, value);
	}

	/**
	 * Gets the attribute value for NUMERO using the alias name Numero.
	 * @return the NUMERO
	 */
	public Integer getNumero() {
		return (Integer) getAttributeInternal(NUMERO);
	}

	/**
	 * Sets <code>value</code> as attribute value for NUMERO using the alias name Numero.
	 * @param value value to set the NUMERO
	 */
	public void setNumero(Integer value) {
		setAttributeInternal(NUMERO, value);
	}

	/**
	 *
	 *  getAttrInvokeAccessor: generated method. Do not modify.
	 */
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
		if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
			return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
		}
		return super.getAttrInvokeAccessor(index, attrDef);
	}

  /**
   * 
   *  setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
		if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
			AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
			return;
		}
		super.setAttrInvokeAccessor(index, value, attrDef);
	}
}