package model.impexp;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Apr 22 11:43:40 CEST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class Impexp_SoParametriUlssViewRowImpl extends ViewRowImpl {
	public static final int ENTITY_IMPEXP_SOPARAMETRIULSS = 0;

	/**
	 * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
	 */
	public enum AttributesEnum {
		Accspo {
			public Object get(Impexp_SoParametriUlssViewRowImpl obj) {
				return obj.getAccspo();
			}

			public void put(Impexp_SoParametriUlssViewRowImpl obj, Object value) {
				obj.setAccspo((String)value);
			}
		}
		,
		Codescl {
			public Object get(Impexp_SoParametriUlssViewRowImpl obj) {
				return obj.getCodescl();
			}

			public void put(Impexp_SoParametriUlssViewRowImpl obj, Object value) {
				obj.setCodescl((Integer)value);
			}
		}
		,
		Codesito {
			public Object get(Impexp_SoParametriUlssViewRowImpl obj) {
				return obj.getCodesito();
			}

			public void put(Impexp_SoParametriUlssViewRowImpl obj, Object value) {
				obj.setCodesito((String)value);
			}
		}
		,
		Gruppo {
			public Object get(Impexp_SoParametriUlssViewRowImpl obj) {
				return obj.getGruppo();
			}

			public void put(Impexp_SoParametriUlssViewRowImpl obj, Object value) {
				obj.setGruppo((String)value);
			}
		}
		,
		Impexp {
			public Object get(Impexp_SoParametriUlssViewRowImpl obj) {
				return obj.getImpexp();
			}

			public void put(Impexp_SoParametriUlssViewRowImpl obj, Object value) {
				obj.setImpexp((String)value);
			}
		}
		,
		Tpesame {
			public Object get(Impexp_SoParametriUlssViewRowImpl obj) {
				return obj.getTpesame();
			}

			public void put(Impexp_SoParametriUlssViewRowImpl obj, Object value) {
				obj.setTpesame((String)value);
			}
		}
		,
		TpesameAltro {
			public Object get(Impexp_SoParametriUlssViewRowImpl obj) {
				return obj.getTpesameAltro();
			}

			public void put(Impexp_SoParametriUlssViewRowImpl obj, Object value) {
				obj.setTpesameAltro((String)value);
			}
		}
		,
		Tpintegrazione {
			public Object get(Impexp_SoParametriUlssViewRowImpl obj) {
				return obj.getTpintegrazione();
			}

			public void put(Impexp_SoParametriUlssViewRowImpl obj, Object value) {
				obj.setTpintegrazione((Integer)value);
			}
		}
		,
		Tpscr {
			public Object get(Impexp_SoParametriUlssViewRowImpl obj) {
				return obj.getTpscr();
			}

			public void put(Impexp_SoParametriUlssViewRowImpl obj, Object value) {
				obj.setTpscr((String)value);
			}
		}
		,
		Ulss {
			public Object get(Impexp_SoParametriUlssViewRowImpl obj) {
				return obj.getUlss();
			}

			public void put(Impexp_SoParametriUlssViewRowImpl obj, Object value) {
				obj.setUlss((String)value);
			}
		}
		,
		UlssReg {
			public Object get(Impexp_SoParametriUlssViewRowImpl obj) {
				return obj.getUlssReg();
			}

			public void put(Impexp_SoParametriUlssViewRowImpl obj, Object value) {
				obj.setUlssReg((String)value);
			}
		}
		;
		private static AttributesEnum[] vals = null;
		private static int firstIndex = 0;

		public abstract Object get(Impexp_SoParametriUlssViewRowImpl object);

		public abstract void put(Impexp_SoParametriUlssViewRowImpl object, Object value);

		public int index() {
			return AttributesEnum.firstIndex() + ordinal();
		}

		public static int firstIndex() {
			return firstIndex;
		}

		public static int count() {
			return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
		}

		public static AttributesEnum[] staticValues() {
			if (vals == null) {
				vals = AttributesEnum.values();
			}
			return vals;
		}
	}
	public static final int ACCSPO = AttributesEnum.Accspo.index();
	public static final int CODESCL = AttributesEnum.Codescl.index();
	public static final int CODESITO = AttributesEnum.Codesito.index();
	public static final int GRUPPO = AttributesEnum.Gruppo.index();
	public static final int IMPEXP = AttributesEnum.Impexp.index();
	public static final int TPESAME = AttributesEnum.Tpesame.index();
	public static final int TPESAMEALTRO = AttributesEnum.TpesameAltro.index();
	public static final int TPINTEGRAZIONE = AttributesEnum.Tpintegrazione.index();
	public static final int TPSCR = AttributesEnum.Tpscr.index();
	public static final int ULSS = AttributesEnum.Ulss.index();
	public static final int ULSSREG = AttributesEnum.UlssReg.index();

	/**
	 * This is the default constructor (do not remove).
	 */
	public Impexp_SoParametriUlssViewRowImpl() {
	}

	/**
	 * Gets Impexp_SoParametriUlss entity object.
	 * @return the Impexp_SoParametriUlss
	 */
	public EntityImpl getImpexp_SoParametriUlss() {
		return (EntityImpl)getEntity(ENTITY_IMPEXP_SOPARAMETRIULSS);
	}

	/**
	 * Gets the attribute value for ACCSPO using the alias name Accspo.
	 * @return the ACCSPO
	 */
	public String getAccspo() {
		return (String) getAttributeInternal(ACCSPO);
	}

	/**
	 * Sets <code>value</code> as attribute value for ACCSPO using the alias name Accspo.
	 * @param value value to set the ACCSPO
	 */
	public void setAccspo(String value) {
		setAttributeInternal(ACCSPO, value);
	}

	/**
	 * Gets the attribute value for CODESCL using the alias name Codescl.
	 * @return the CODESCL
	 */
	public Integer getCodescl() {
		return (Integer) getAttributeInternal(CODESCL);
	}

	/**
	 * Sets <code>value</code> as attribute value for CODESCL using the alias name Codescl.
	 * @param value value to set the CODESCL
	 */
	public void setCodescl(Integer value) {
		setAttributeInternal(CODESCL, value);
	}

	/**
	 * Gets the attribute value for CODESITO using the alias name Codesito.
	 * @return the CODESITO
	 */
	public String getCodesito() {
		return (String) getAttributeInternal(CODESITO);
	}

	/**
	 * Sets <code>value</code> as attribute value for CODESITO using the alias name Codesito.
	 * @param value value to set the CODESITO
	 */
	public void setCodesito(String value) {
		setAttributeInternal(CODESITO, value);
	}

	/**
	 * Gets the attribute value for GRUPPO using the alias name Gruppo.
	 * @return the GRUPPO
	 */
	public String getGruppo() {
		return (String) getAttributeInternal(GRUPPO);
	}

	/**
	 * Sets <code>value</code> as attribute value for GRUPPO using the alias name Gruppo.
	 * @param value value to set the GRUPPO
	 */
	public void setGruppo(String value) {
		setAttributeInternal(GRUPPO, value);
	}

	/**
	 * Gets the attribute value for IMPEXP using the alias name Impexp.
	 * @return the IMPEXP
	 */
	public String getImpexp() {
		return (String) getAttributeInternal(IMPEXP);
	}

	/**
	 * Sets <code>value</code> as attribute value for IMPEXP using the alias name Impexp.
	 * @param value value to set the IMPEXP
	 */
	public void setImpexp(String value) {
		setAttributeInternal(IMPEXP, value);
	}

	/**
	 * Gets the attribute value for TPESAME using the alias name Tpesame.
	 * @return the TPESAME
	 */
	public String getTpesame() {
		return (String) getAttributeInternal(TPESAME);
	}

	/**
	 * Sets <code>value</code> as attribute value for TPESAME using the alias name Tpesame.
	 * @param value value to set the TPESAME
	 */
	public void setTpesame(String value) {
		setAttributeInternal(TPESAME, value);
	}

	/**
	 * Gets the attribute value for TPESAME_ALTRO using the alias name TpesameAltro.
	 * @return the TPESAME_ALTRO
	 */
	public String getTpesameAltro() {
		return (String) getAttributeInternal(TPESAMEALTRO);
	}

	/**
	 * Sets <code>value</code> as attribute value for TPESAME_ALTRO using the alias name TpesameAltro.
	 * @param value value to set the TPESAME_ALTRO
	 */
	public void setTpesameAltro(String value) {
		setAttributeInternal(TPESAMEALTRO, value);
	}

	/**
	 * Gets the attribute value for TPINTEGRAZIONE using the alias name Tpintegrazione.
	 * @return the TPINTEGRAZIONE
	 */
	public Integer getTpintegrazione() {
		return (Integer) getAttributeInternal(TPINTEGRAZIONE);
	}

	/**
	 * Sets <code>value</code> as attribute value for TPINTEGRAZIONE using the alias name Tpintegrazione.
	 * @param value value to set the TPINTEGRAZIONE
	 */
	public void setTpintegrazione(Integer value) {
		setAttributeInternal(TPINTEGRAZIONE, value);
	}

	/**
	 * Gets the attribute value for TPSCR using the alias name Tpscr.
	 * @return the TPSCR
	 */
	public String getTpscr() {
		return (String) getAttributeInternal(TPSCR);
	}

	/**
	 * Sets <code>value</code> as attribute value for TPSCR using the alias name Tpscr.
	 * @param value value to set the TPSCR
	 */
	public void setTpscr(String value) {
		setAttributeInternal(TPSCR, value);
	}

	/**
	 * Gets the attribute value for ULSS using the alias name Ulss.
	 * @return the ULSS
	 */
	public String getUlss() {
		return (String) getAttributeInternal(ULSS);
	}

	/**
	 * Sets <code>value</code> as attribute value for ULSS using the alias name Ulss.
	 * @param value value to set the ULSS
	 */
	public void setUlss(String value) {
		setAttributeInternal(ULSS, value);
	}

	/**
	 * Gets the attribute value for ULSS_REG using the alias name UlssReg.
	 * @return the ULSS_REG
	 */
	public String getUlssReg() {
		return (String) getAttributeInternal(ULSSREG);
	}

	/**
	 * Sets <code>value</code> as attribute value for ULSS_REG using the alias name UlssReg.
	 * @param value value to set the ULSS_REG
	 */
	public void setUlssReg(String value) {
		setAttributeInternal(ULSSREG, value);
	}

	/**
	 * getAttrInvokeAccessor: generated method. Do not modify.
	 * @param index the index identifying the attribute
	 * @param attrDef the attribute

	 * @return the attribute value
	 * @throws Exception
	 */
	protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
		if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
			return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
		}
		return super.getAttrInvokeAccessor(index, attrDef);
	}

	/**
	 * setAttrInvokeAccessor: generated method. Do not modify.
	 * @param index the index identifying the attribute
	 * @param value the value to assign to the attribute
	 * @param attrDef the attribute

	 * @throws Exception
	 */
	protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
		if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
			AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
			return;
		}
		super.setAttrInvokeAccessor(index, value, attrDef);
	}
}
