package model.common;

import java.math.BigDecimal;

import java.sql.Connection;

import java.util.HashMap;

import oracle.jbo.ApplicationModule;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---    Warning: Do not modify method signatures of generated methods.
//  ---------------------------------------------------------------------

public interface ImpExp_AppModule extends Parent_AppModule, ApplicationModule {


    void doRollback(String[] voNames);


    HashMap callDWHwrite(String ulss, String tpscr, String anno, String periodo, String test);

    HashMap callExport(String ulss, String tpscr, BigDecimal centro, String dal, String al, BigDecimal centro_prel,
                       BigDecimal livello, BigDecimal exptype, String tpdip, BigDecimal hpv, BigDecimal id_invito,
                       String user);

    String callFunCodtsTrovaDoc(String codts, String ulss, String tipoDoc);

    HashMap callGetCentroRichiamo(String tessera, String ulss, String tpscr, BigDecimal idinvito,
                                  BigDecimal livellorichiamo);

    String callImportAnagrafe(String ulss, Integer modalita);
    
    String callImportAnagrafeSingola(String ulss, BigDecimal chiaveMsg);

    String callImportEsclusioni(String ulss, String tpscr, String tipoFlusso, String eroganti, String user,
                                String modalita, int anno, int fase);

    String callImportPresenze(String ulss, String tpscr, BigDecimal centro, String tpdip, Integer[] rc);

    String callImportReferti(String ulss, String tpscr, BigDecimal centro, String tpdip, Integer[] rc);

    String callImportRefertiFromDB(String ulss, String tpscr, BigDecimal centro, String dal, String al);

    HashMap callPrepareCancToDB(String ulss, String tpscr, BigDecimal centro, String dal, String al,
                                BigDecimal centro_prel, BigDecimal livello);

    HashMap callSPSwrite (String ulss, String tpscr, String dal, String al, 
                BigDecimal centro_prel, String centro_ref, String prestazioni, String tipi_invito, String labor_hpv);

    HashMap callTUwriteAnagrafeInFascia(String ulss, String tpscr, String data, String filename, String delimiter,
                                        String format);

    HashMap callTUwriteAnagrafeTU(String ulss, String tpscr, String data_dal, String data_al, String filename,
                                  String delimiter, String format);

    HashMap callTUwriteEsclusioni(String ulss, String tpscr, String data_dal, String data_al, String filename,
                                  String delimiter, String format);

    HashMap callTUwriteInviti(String ulss, String tpscr, String data_dal, String data_al, String inviti_filename,
                              String anam_filename, String anam_extra_filename, String ref1_filename,
                              String ref1_extra_filename, String ref2_filename, String ref2_extra_filename,
                              String int_filename, String int_extra_filename, String endo_filename, String delimiter,
                              String format);

    String callUnpackReferti(String ulss, String tpscr);

    void doRollback();

    void doRollback(String voName);

    void doRollback(String voName1, String voName2);

    void filterConfiguration(String ulss, String scr, boolean regionale);

    Connection getDBConnection();

    Integer getNextEndoscopia();

    Integer getNextIdAccColon1();

    Integer getNextIdAccColon2();

    Integer getNextIdAccMammo1();

    Integer getNextIdAccMammo2();

    Integer getNextIdAccPFAS1();

    Integer getNextIdAccPFAS2();

    Integer getNextIdAccettazione();

    Integer getNextIdAccettazione2();

    Integer getNextIdAllegato();

    Integer getNextIdAmbIstric();

    Integer getNextIdAnamCito();

    Integer getNextIdAnamMx();

    Integer getNextIdAnamMxSint();

    Integer getNextIdAnamco();

    Integer getNextIdAppuntamento();

    Integer getNextIdCentriRacc();

    Integer getNextIdCnfFestivita();

    Integer getNextIdCnfRef1livMA();

    Integer getNextIdCnfRef2livMA();

    Integer getNextIdCnfRef2livPF();

    Integer getNextIdCnfRef3livMA();

    Integer getNextIdCnfRefPF();

    Integer getNextIdConfReferto1liv();

    Integer getNextIdConfReferto2liv();

    Integer getNextIdDomanda();

    Integer getNextIdEsclusione();

    Integer getNextIdInserto();

    Integer getNextIdIntervento();

    Integer getNextIdInterventoCO();

    Integer getNextIdInterventoMA();

    Integer getNextIdInvito();

    Integer getNextIdProceduraPF();

    Integer getNextIdQuestionario();

    Integer getNextIdRef1livMA();

    Integer getNextIdRef2livMA();

    Integer getNextIdRefPF();

    Integer getNextIdRefPF2liv();

    Integer getNextIdRefPfasDati();

    Integer getNextIdRefcardioDati();

    Integer getNextIdReferto1liv();

    Integer getNextIdReferto1livCO();

    Integer getNextIdReferto2liv();

    Integer getNextIdReferto2livCO();

    Integer getNextIdRefertocardio();

    Integer getNextIdStoricoConsenso();

    Integer getNextIdUtenteOperatore();

    Integer getNextPID();

    void log(String azienda, String tipoDip, String verso, String msg, String tpscr);

    void logDWH(String azienda, String tipoDip, String verso, String msg, String tpscr);

    void logMsg(String codts, String group, String coderrore, String impexp, String ulss, String tpscr);

    void logSPS(String azienda, String tipoDip, String verso, String msg, String tpscr);

    void preapareJournaling(String user, String ulss, String tpscr);
}
