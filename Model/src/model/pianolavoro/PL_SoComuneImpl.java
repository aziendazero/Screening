package model.pianolavoro;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.Key;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---    Warning: Do not modify method signatures of generated methods.
//  ---------------------------------------------------------------------

public class PL_SoComuneImpl extends EntityImpl {


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Codcom {
            public Object get(PL_SoComuneImpl obj) {
                return obj.getCodcom();
            }

            public void put(PL_SoComuneImpl obj, Object value) {
                obj.setCodcom((String)value);
            }
        }
        ,
        Descrizione {
            public Object get(PL_SoComuneImpl obj) {
                return obj.getDescrizione();
            }

            public void put(PL_SoComuneImpl obj, Object value) {
                obj.setDescrizione((String)value);
            }
        }
        ,
        Ulss {
            public Object get(PL_SoComuneImpl obj) {
                return obj.getUlss();
            }

            public void put(PL_SoComuneImpl obj, Object value) {
                obj.setUlss((String)value);
            }
        }
        ,
        Codpr {
            public Object get(PL_SoComuneImpl obj) {
                return obj.getCodpr();
            }

            public void put(PL_SoComuneImpl obj, Object value) {
                obj.setCodpr((String)value);
            }
        }
        ,
        Cap {
            public Object get(PL_SoComuneImpl obj) {
                return obj.getCap();
            }

            public void put(PL_SoComuneImpl obj, Object value) {
                obj.setCap((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(PL_SoComuneImpl object);

        public abstract void put(PL_SoComuneImpl object, Object value);

        public int index() {
            return PL_SoComuneImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return PL_SoComuneImpl.AttributesEnum.firstIndex() + PL_SoComuneImpl.AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = PL_SoComuneImpl.AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CODCOM = AttributesEnum.Codcom.index();
    public static final int DESCRIZIONE = AttributesEnum.Descrizione.index();
    public static final int ULSS = AttributesEnum.Ulss.index();
    public static final int CODPR = AttributesEnum.Codpr.index();
    public static final int CAP = AttributesEnum.Cap.index();

    /**
     *
     *  This is the default constructor (do not remove)
     */
  public PL_SoComuneImpl()
  {
  }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.pianolavoro.PL_SoComune");
    }

    /**
     *
     *  Gets the attribute value for Codcom, using the alias name Codcom
     */
    public String getCodcom()
  {
    return (String)getAttributeInternal(CODCOM);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Codcom
   */
  public void setCodcom(String value)
  {
    setAttributeInternal(CODCOM, value);
  }

  /**
   * 
   *  Gets the attribute value for Descrizione, using the alias name Descrizione
   */
  public String getDescrizione()
  {
    return (String)getAttributeInternal(DESCRIZIONE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Descrizione
   */
  public void setDescrizione(String value)
  {
    setAttributeInternal(DESCRIZIONE, value);
  }

  /**
   * 
   *  Gets the attribute value for Ulss, using the alias name Ulss
   */
  public String getUlss()
  {
    return (String)getAttributeInternal(ULSS);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Ulss
   */
  public void setUlss(String value)
  {
    setAttributeInternal(ULSS, value);
  }

  /**
   * 
   *  Gets the attribute value for Codpr, using the alias name Codpr
   */
  public String getCodpr()
  {
    return (String)getAttributeInternal(CODPR);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Codpr
   */
  public void setCodpr(String value)
  {
    setAttributeInternal(CODPR, value);
  }

  /**
   * 
   *  Gets the attribute value for Cap, using the alias name Cap
   */
  public String getCap()
  {
    return (String)getAttributeInternal(CAP);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Cap
   */
  public void setCap(String value)
  {
    setAttributeInternal(CAP, value);
  }

  /**
   * 
   *  getAttrInvokeAccessor: generated method. Do not modify.
   */
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

  /**
   * 
   *  setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param codcom key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String codcom) {
        return new Key(new Object[]{codcom});
    }


}
