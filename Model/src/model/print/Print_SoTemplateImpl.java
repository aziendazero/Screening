package model.print;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.Date;
import oracle.jbo.Key;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---    Warning: Do not modify method signatures of generated methods.
//  ---------------------------------------------------------------------

public class Print_SoTemplateImpl extends EntityImpl {


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Codtempl {
            public Object get(Print_SoTemplateImpl obj) {
                return obj.getCodtempl();
            }

            public void put(Print_SoTemplateImpl obj, Object value) {
                obj.setCodtempl((Integer) value);
            }
        }
        ,
        Idtplettera {
            public Object get(Print_SoTemplateImpl obj) {
                return obj.getIdtplettera();
            }

            public void put(Print_SoTemplateImpl obj, Object value) {
                obj.setIdtplettera((Integer) value);
            }
        }
        ,
        Codtemplreg {
            public Object get(Print_SoTemplateImpl obj) {
                return obj.getCodtemplreg();
            }

            public void put(Print_SoTemplateImpl obj, Object value) {
                obj.setCodtemplreg((Integer) value);
            }
        }
        ,
        Nomefile {
            public Object get(Print_SoTemplateImpl obj) {
                return obj.getNomefile();
            }

            public void put(Print_SoTemplateImpl obj, Object value) {
                obj.setNomefile((String) value);
            }
        }
        ,
        Filexml {
            public Object get(Print_SoTemplateImpl obj) {
                return obj.getFilexml();
            }

            public void put(Print_SoTemplateImpl obj, Object value) {
                obj.setFilexml((BlobDomain) value);
            }
        }
        ,
        Descrizione {
            public Object get(Print_SoTemplateImpl obj) {
                return obj.getDescrizione();
            }

            public void put(Print_SoTemplateImpl obj, Object value) {
                obj.setDescrizione((String) value);
            }
        }
        ,
        Dtcreazione {
            public Object get(Print_SoTemplateImpl obj) {
                return obj.getDtcreazione();
            }

            public void put(Print_SoTemplateImpl obj, Object value) {
                obj.setDtcreazione((Date) value);
            }
        }
        ,
        Autore {
            public Object get(Print_SoTemplateImpl obj) {
                return obj.getAutore();
            }

            public void put(Print_SoTemplateImpl obj, Object value) {
                obj.setAutore((String) value);
            }
        }
        ,
        Dtultmod {
            public Object get(Print_SoTemplateImpl obj) {
                return obj.getDtultmod();
            }

            public void put(Print_SoTemplateImpl obj, Object value) {
                obj.setDtultmod((Date) value);
            }
        }
        ,
        Opultmod {
            public Object get(Print_SoTemplateImpl obj) {
                return obj.getOpultmod();
            }

            public void put(Print_SoTemplateImpl obj, Object value) {
                obj.setOpultmod((String) value);
            }
        }
        ,
        Dtfinevaltempl {
            public Object get(Print_SoTemplateImpl obj) {
                return obj.getDtfinevaltempl();
            }

            public void put(Print_SoTemplateImpl obj, Object value) {
                obj.setDtfinevaltempl((Date) value);
            }
        }
        ,
        Ulss {
            public Object get(Print_SoTemplateImpl obj) {
                return obj.getUlss();
            }

            public void put(Print_SoTemplateImpl obj, Object value) {
                obj.setUlss((String) value);
            }
        }
        ,
        Tpscr {
            public Object get(Print_SoTemplateImpl obj) {
                return obj.getTpscr();
            }

            public void put(Print_SoTemplateImpl obj, Object value) {
                obj.setTpscr((String) value);
            }
        }
        ,
        Compiled {
            public Object get(Print_SoTemplateImpl obj) {
                return obj.getCompiled();
            }

            public void put(Print_SoTemplateImpl obj, Object value) {
                obj.setCompiled((BlobDomain) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(Print_SoTemplateImpl object);

        public abstract void put(Print_SoTemplateImpl object, Object value);

        public int index() {
            return Print_SoTemplateImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return Print_SoTemplateImpl.AttributesEnum.firstIndex() + Print_SoTemplateImpl.AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = Print_SoTemplateImpl.AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CODTEMPL = AttributesEnum.Codtempl.index();
    public static final int IDTPLETTERA = AttributesEnum.Idtplettera.index();
    public static final int CODTEMPLREG = AttributesEnum.Codtemplreg.index();
    public static final int NOMEFILE = AttributesEnum.Nomefile.index();
    public static final int FILEXML = AttributesEnum.Filexml.index();
    public static final int DESCRIZIONE = AttributesEnum.Descrizione.index();
    public static final int DTCREAZIONE = AttributesEnum.Dtcreazione.index();
    public static final int AUTORE = AttributesEnum.Autore.index();
    public static final int DTULTMOD = AttributesEnum.Dtultmod.index();
    public static final int OPULTMOD = AttributesEnum.Opultmod.index();
    public static final int DTFINEVALTEMPL = AttributesEnum.Dtfinevaltempl.index();
    public static final int ULSS = AttributesEnum.Ulss.index();
    public static final int TPSCR = AttributesEnum.Tpscr.index();
    public static final int COMPILED = AttributesEnum.Compiled.index();

    /**
     *
     *  This is the default constructor (do not remove)
     */
  public Print_SoTemplateImpl()
  {
  }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.print.Print_SoTemplate");
    }


    /**
     *
     *  Gets the attribute value for Codtempl, using the alias name Codtempl
     */
    public Integer getCodtempl()
  {
        return (Integer) getAttributeInternal(CODTEMPL);
    }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Codtempl
   */
  public void setCodtempl(Integer value)
  {
    setAttributeInternal(CODTEMPL, value);
  }

  /**
   * 
   *  Gets the attribute value for Idtplettera, using the alias name Idtplettera
   */
  public Integer getIdtplettera()
  {
    return (Integer)getAttributeInternal(IDTPLETTERA);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Idtplettera
   */
  public void setIdtplettera(Integer value)
  {
    setAttributeInternal(IDTPLETTERA, value);
  }

  /**
   * 
   *  Gets the attribute value for Codtemplreg, using the alias name Codtemplreg
   */
  public Integer getCodtemplreg()
  {
    return (Integer)getAttributeInternal(CODTEMPLREG);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Codtemplreg
   */
  public void setCodtemplreg(Integer value)
  {
    setAttributeInternal(CODTEMPLREG, value);
  }

  /**
   * 
   *  Gets the attribute value for Nomefile, using the alias name Nomefile
   */
  public String getNomefile()
  {
    return (String)getAttributeInternal(NOMEFILE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Nomefile
   */
  public void setNomefile(String value)
  {
    setAttributeInternal(NOMEFILE, value);
  }

  /**
   * 
   *  Gets the attribute value for Filexml, using the alias name Filexml
   */
  public BlobDomain getFilexml()
  {
    return (BlobDomain)getAttributeInternal(FILEXML);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Filexml
   */
  public void setFilexml(BlobDomain value)
  {
    setAttributeInternal(FILEXML, value);
  }

  /**
   * 
   *  Gets the attribute value for Descrizione, using the alias name Descrizione
   */
  public String getDescrizione()
  {
    return (String)getAttributeInternal(DESCRIZIONE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Descrizione
   */
  public void setDescrizione(String value)
  {
    setAttributeInternal(DESCRIZIONE, value);
  }

  /**
   * 
   *  Gets the attribute value for Dtcreazione, using the alias name Dtcreazione
   */
  public Date getDtcreazione()
  {
    return (Date)getAttributeInternal(DTCREAZIONE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Dtcreazione
   */
  public void setDtcreazione(Date value)
  {
    setAttributeInternal(DTCREAZIONE, value);
  }

  /**
   * 
   *  Gets the attribute value for Autore, using the alias name Autore
   */
  public String getAutore()
  {
    return (String)getAttributeInternal(AUTORE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Autore
   */
  public void setAutore(String value)
  {
    setAttributeInternal(AUTORE, value);
  }

  /**
   * 
   *  Gets the attribute value for Dtultmod, using the alias name Dtultmod
   */
  public Date getDtultmod()
  {
    return (Date)getAttributeInternal(DTULTMOD);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Dtultmod
   */
  public void setDtultmod(Date value)
  {
    setAttributeInternal(DTULTMOD, value);
  }

  /**
   * 
   *  Gets the attribute value for Opultmod, using the alias name Opultmod
   */
  public String getOpultmod()
  {
    return (String)getAttributeInternal(OPULTMOD);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Opultmod
   */
  public void setOpultmod(String value)
  {
    setAttributeInternal(OPULTMOD, value);
  }

  /**
   * 
   *  Gets the attribute value for Dtfinevaltempl, using the alias name Dtfinevaltempl
   */
  public Date getDtfinevaltempl()
  {
    return (Date)getAttributeInternal(DTFINEVALTEMPL);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Dtfinevaltempl
   */
  public void setDtfinevaltempl(Date value)
  {
    setAttributeInternal(DTFINEVALTEMPL, value);
  }

  /**
   * 
   *  Gets the attribute value for Ulss, using the alias name Ulss
   */
  public String getUlss()
  {
    return (String)getAttributeInternal(ULSS);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Ulss
   */
  public void setUlss(String value)
  {
    setAttributeInternal(ULSS, value);
  }

  /**
   * 
   *  Gets the attribute value for Tpscr, using the alias name Tpscr
   */
  public String getTpscr()
  {
    return (String)getAttributeInternal(TPSCR);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Tpscr
   */
  public void setTpscr(String value)
  {
    setAttributeInternal(TPSCR, value);
  }

  /**
   * 
   *  getAttrInvokeAccessor: generated method. Do not modify.
   */
  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

  /**
   * 
   *  setAttrInvokeAccessor: generated method. Do not modify.
   */
  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param codtempl key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer codtempl) {
        return new Key(new Object[] { codtempl });
    }

    /**
     *
     *  Gets the attribute value for Compiled, using the alias name Compiled
     */
  public BlobDomain getCompiled()
  {
    return (BlobDomain)getAttributeInternal(COMPILED);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Compiled
   */
  public void setCompiled(BlobDomain value)
  {
    setAttributeInternal(COMPILED, value);
  }


}
