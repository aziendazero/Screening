package model.sicurezze;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.server.TransactionEvent;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Feb 15 15:56:51 CET 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class Sec_SecCnfUsersViewImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public Sec_SecCnfUsersViewImpl() {
    }


    /**
     * Returns the variable value for CognomeVar.
     * @return variable value for CognomeVar
     */
    public String getCognomeVar() {
        return (String)ensureVariableManager().getVariableValue("CognomeVar");
    }

    /**
     * Sets <code>value</code> for variable CognomeVar.
     * @param value value to bind as CognomeVar
     */
    public void setCognomeVar(String value) {
        ensureVariableManager().setVariableValue("CognomeVar", value);
    }

    /**
     * Returns the variable value for NomeVar.
     * @return variable value for NomeVar
     */
    public String getNomeVar() {
        return (String)ensureVariableManager().getVariableValue("NomeVar");
    }

    /**
     * Sets <code>value</code> for variable NomeVar.
     * @param value value to bind as NomeVar
     */
    public void setNomeVar(String value) {
        ensureVariableManager().setVariableValue("NomeVar", value);
    }

    /**
     * Returns the variable value for UlssVar.
     * @return variable value for UlssVar
     */
    public String getUlssVar() {
        return (String)ensureVariableManager().getVariableValue("UlssVar");
    }

    /**
     * Sets <code>value</code> for variable UlssVar.
     * @param value value to bind as UlssVar
     */
    public void setUlssVar(String value) {
        ensureVariableManager().setVariableValue("UlssVar", value);
    }

    /**
     * Returns the variable value for UsernameVar.
     * @return variable value for UsernameVar
     */
    public String getUsernameVar() {
        return (String)ensureVariableManager().getVariableValue("UsernameVar");
    }

    /**
     * Sets <code>value</code> for variable UsernameVar.
     * @param value value to bind as UsernameVar
     */
    public void setUsernameVar(String value) {
        ensureVariableManager().setVariableValue("UsernameVar", value);
    }
    
    /**
     * NON FUNZIONA
     */
    /*public void beforeCommit(TransactionEvent transactionEvent){
        Sec_SecCnfUsersViewRowImpl userRow = (Sec_SecCnfUsersViewRowImpl) this.getCurrentRow();
        ADFContext adfCtx = ADFContext.getCurrent();
        Map sessionMap = adfCtx.getSessionScope();
        String ulss = (String)sessionMap.get("ulss");
        if (!"050000".equals(ulss) && (userRow.getSec_SecCnfUsersUlssView() == null || userRow.getSec_SecCnfUsersUlssView().getRowCount() < 1)){
            Row ulssRow = userRow.getSec_SecCnfUsersUlssView().createRow();
            ulssRow.setAttribute("Ulss",ulss);
            System.out.println(ulssRow.getAttribute("SoUserId"));
            userRow.getSec_SecCnfUsersUlssView().insertRow(ulssRow);
        }
        
        super.beforeCommit(transactionEvent);
    }*/

}
