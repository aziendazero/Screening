package model.sicurezze;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Sep 17 12:34:24 CEST 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class Sec_SoWarningImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Idwarning {
            public Object get(Sec_SoWarningImpl obj) {
                return obj.getIdwarning();
            }

            public void put(Sec_SoWarningImpl obj, Object value) {
                obj.setIdwarning((Number) value);
            }
        }
        ,
        Ulss {
            public Object get(Sec_SoWarningImpl obj) {
                return obj.getUlss();
            }

            public void put(Sec_SoWarningImpl obj, Object value) {
                obj.setUlss((String) value);
            }
        }
        ,
        Tpscr {
            public Object get(Sec_SoWarningImpl obj) {
                return obj.getTpscr();
            }

            public void put(Sec_SoWarningImpl obj, Object value) {
                obj.setTpscr((String) value);
            }
        }
        ,
        Applicativo {
            public Object get(Sec_SoWarningImpl obj) {
                return obj.getApplicativo();
            }

            public void put(Sec_SoWarningImpl obj, Object value) {
                obj.setApplicativo((String) value);
            }
        }
        ,
        Titolo {
            public Object get(Sec_SoWarningImpl obj) {
                return obj.getTitolo();
            }

            public void put(Sec_SoWarningImpl obj, Object value) {
                obj.setTitolo((String) value);
            }
        }
        ,
        Testo {
            public Object get(Sec_SoWarningImpl obj) {
                return obj.getTesto();
            }

            public void put(Sec_SoWarningImpl obj, Object value) {
                obj.setTesto((String) value);
            }
        }
        ,
        Iniziovalidita {
            public Object get(Sec_SoWarningImpl obj) {
                return obj.getIniziovalidita();
            }

            public void put(Sec_SoWarningImpl obj, Object value) {
                obj.setIniziovalidita((Date) value);
            }
        }
        ,
        Finevalidita {
            public Object get(Sec_SoWarningImpl obj) {
                return obj.getFinevalidita();
            }

            public void put(Sec_SoWarningImpl obj, Object value) {
                obj.setFinevalidita((Date) value);
            }
        }
        ,
        Opins {
            public Object get(Sec_SoWarningImpl obj) {
                return obj.getOpins();
            }

            public void put(Sec_SoWarningImpl obj, Object value) {
                obj.setOpins((String) value);
            }
        }
        ,
        Ordine {
            public Object get(Sec_SoWarningImpl obj) {
                return obj.getOrdine();
            }

            public void put(Sec_SoWarningImpl obj, Object value) {
                obj.setOrdine((Number) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(Sec_SoWarningImpl object);

        public abstract void put(Sec_SoWarningImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int IDWARNING = AttributesEnum.Idwarning.index();
    public static final int ULSS = AttributesEnum.Ulss.index();
    public static final int TPSCR = AttributesEnum.Tpscr.index();
    public static final int APPLICATIVO = AttributesEnum.Applicativo.index();
    public static final int TITOLO = AttributesEnum.Titolo.index();
    public static final int TESTO = AttributesEnum.Testo.index();
    public static final int INIZIOVALIDITA = AttributesEnum.Iniziovalidita.index();
    public static final int FINEVALIDITA = AttributesEnum.Finevalidita.index();
    public static final int OPINS = AttributesEnum.Opins.index();
    public static final int ORDINE = AttributesEnum.Ordine.index();

    /**
     * This is the default constructor (do not remove).
     */
    public Sec_SoWarningImpl() {
    }

    /**
     * Gets the attribute value for Idwarning, using the alias name Idwarning.
     * @return the value of Idwarning
     */
    public Number getIdwarning() {
        return (Number) getAttributeInternal(IDWARNING);
    }

    /**
     * Sets <code>value</code> as the attribute value for Idwarning.
     * @param value value to set the Idwarning
     */
    public void setIdwarning(Number value) {
        setAttributeInternal(IDWARNING, value);
    }

    /**
     * Gets the attribute value for Ulss, using the alias name Ulss.
     * @return the value of Ulss
     */
    public String getUlss() {
        return (String) getAttributeInternal(ULSS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ulss.
     * @param value value to set the Ulss
     */
    public void setUlss(String value) {
        setAttributeInternal(ULSS, value);
    }

    /**
     * Gets the attribute value for Tpscr, using the alias name Tpscr.
     * @return the value of Tpscr
     */
    public String getTpscr() {
        return (String) getAttributeInternal(TPSCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for Tpscr.
     * @param value value to set the Tpscr
     */
    public void setTpscr(String value) {
        setAttributeInternal(TPSCR, value);
    }

    /**
     * Gets the attribute value for Applicativo, using the alias name Applicativo.
     * @return the value of Applicativo
     */
    public String getApplicativo() {
        return (String) getAttributeInternal(APPLICATIVO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Applicativo.
     * @param value value to set the Applicativo
     */
    public void setApplicativo(String value) {
        setAttributeInternal(APPLICATIVO, value);
    }

    /**
     * Gets the attribute value for Titolo, using the alias name Titolo.
     * @return the value of Titolo
     */
    public String getTitolo() {
        return (String) getAttributeInternal(TITOLO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Titolo.
     * @param value value to set the Titolo
     */
    public void setTitolo(String value) {
        setAttributeInternal(TITOLO, value);
    }

    /**
     * Gets the attribute value for Testo, using the alias name Testo.
     * @return the value of Testo
     */
    public String getTesto() {
        return (String) getAttributeInternal(TESTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Testo.
     * @param value value to set the Testo
     */
    public void setTesto(String value) {
        setAttributeInternal(TESTO, value);
    }

    /**
     * Gets the attribute value for Iniziovalidita, using the alias name Iniziovalidita.
     * @return the value of Iniziovalidita
     */
    public Date getIniziovalidita() {
        return (Date) getAttributeInternal(INIZIOVALIDITA);
    }

    /**
     * Sets <code>value</code> as the attribute value for Iniziovalidita.
     * @param value value to set the Iniziovalidita
     */
    public void setIniziovalidita(Date value) {
        setAttributeInternal(INIZIOVALIDITA, value);
    }

    /**
     * Gets the attribute value for Finevalidita, using the alias name Finevalidita.
     * @return the value of Finevalidita
     */
    public Date getFinevalidita() {
        return (Date) getAttributeInternal(FINEVALIDITA);
    }

    /**
     * Sets <code>value</code> as the attribute value for Finevalidita.
     * @param value value to set the Finevalidita
     */
    public void setFinevalidita(Date value) {
        setAttributeInternal(FINEVALIDITA, value);
    }

    /**
     * Gets the attribute value for Opins, using the alias name Opins.
     * @return the value of Opins
     */
    public String getOpins() {
        return (String) getAttributeInternal(OPINS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Opins.
     * @param value value to set the Opins
     */
    public void setOpins(String value) {
        setAttributeInternal(OPINS, value);
    }

    /**
     * Gets the attribute value for Ordine, using the alias name Ordine.
     * @return the value of Ordine
     */
    public Number getOrdine() {
        return (Number) getAttributeInternal(ORDINE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ordine.
     * @param value value to set the Ordine
     */
    public void setOrdine(Number value) {
        setAttributeInternal(ORDINE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param idwarning key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number idwarning) {
        return new Key(new Object[] { idwarning });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.sicurezze.Sec_SoWarning");
    }
}

