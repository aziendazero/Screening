package model.sicurezze;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Feb 19 10:29:56 CET 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class Sec_SecCnfUsersImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
		SoUserId {
			public Object get(Sec_SecCnfUsersImpl obj) {
				return obj.getSoUserId();
			}

			public void put(Sec_SecCnfUsersImpl obj, Object value) {
				obj.setSoUserId((Integer)value);
			}
		}
		,
		IsEnabled {
			public Object get(Sec_SecCnfUsersImpl obj) {
				return obj.getIsEnabled();
			}

			public void put(Sec_SecCnfUsersImpl obj, Object value) {
				obj.setIsEnabled((Boolean)value);
			}
		}
		,
		CreateDate {
			public Object get(Sec_SecCnfUsersImpl obj) {
				return obj.getCreateDate();
			}

			public void put(Sec_SecCnfUsersImpl obj, Object value) {
				obj.setCreateDate((Date)value);
			}
		}
		,
		LastConnection {
			public Object get(Sec_SecCnfUsersImpl obj) {
				return obj.getLastConnection();
			}

			public void put(Sec_SecCnfUsersImpl obj, Object value) {
				obj.setLastConnection((Date)value);
			}
		}
		,
		LdapUserId {
			public Object get(Sec_SecCnfUsersImpl obj) {
				return obj.getLdapUserId();
			}

			public void put(Sec_SecCnfUsersImpl obj, Object value) {
				obj.setLdapUserId((String)value);
			}
		}
		,
		Nome {
			public Object get(Sec_SecCnfUsersImpl obj) {
				return obj.getNome();
			}

			public void put(Sec_SecCnfUsersImpl obj, Object value) {
				obj.setNome((String)value);
			}
		}
		,
		Cognome {
			public Object get(Sec_SecCnfUsersImpl obj) {
				return obj.getCognome();
			}

			public void put(Sec_SecCnfUsersImpl obj, Object value) {
				obj.setCognome((String)value);
			}
		}
		,
		CodiceFiscale {
			public Object get(Sec_SecCnfUsersImpl obj) {
				return obj.getCodiceFiscale();
			}

			public void put(Sec_SecCnfUsersImpl obj, Object value) {
				obj.setCodiceFiscale((String)value);
			}
		}
		,
		Ufficio {
			public Object get(Sec_SecCnfUsersImpl obj) {
				return obj.getUfficio();
			}

			public void put(Sec_SecCnfUsersImpl obj, Object value) {
				obj.setUfficio((String)value);
			}
		}
		,
		Email {
			public Object get(Sec_SecCnfUsersImpl obj) {
				return obj.getEmail();
			}

			public void put(Sec_SecCnfUsersImpl obj, Object value) {
				obj.setEmail((String)value);
			}
		}
		,
		Telefono {
			public Object get(Sec_SecCnfUsersImpl obj) {
				return obj.getTelefono();
			}

			public void put(Sec_SecCnfUsersImpl obj, Object value) {
				obj.setTelefono((String)value);
			}
		}
		,
		DtfineValidita {
			public Object get(Sec_SecCnfUsersImpl obj) {
				return obj.getDtfineValidita();
			}

			public void put(Sec_SecCnfUsersImpl obj, Object value) {
				obj.setDtfineValidita((Date)value);
			}
		}
		;
		private static AttributesEnum[] vals = null;
		private static int firstIndex = 0;

        public abstract Object get(Sec_SecCnfUsersImpl object);

        public abstract void put(Sec_SecCnfUsersImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


	public static final int SOUSERID = AttributesEnum.SoUserId.index();
	public static final int ISENABLED = AttributesEnum.IsEnabled.index();
	public static final int CREATEDATE = AttributesEnum.CreateDate.index();
	public static final int LASTCONNECTION = AttributesEnum.LastConnection.index();
	public static final int LDAPUSERID = AttributesEnum.LdapUserId.index();
	public static final int NOME = AttributesEnum.Nome.index();
	public static final int COGNOME = AttributesEnum.Cognome.index();
	public static final int CODICEFISCALE = AttributesEnum.CodiceFiscale.index();
	public static final int UFFICIO = AttributesEnum.Ufficio.index();
	public static final int EMAIL = AttributesEnum.Email.index();
	public static final int TELEFONO = AttributesEnum.Telefono.index();
	public static final int DTFINEVALIDITA = AttributesEnum.DtfineValidita.index();

	/**
	 * This is the default constructor (do not remove).
	 */
    public Sec_SecCnfUsersImpl() {
    }


	/**
	 * @return the definition object for this instance class.
	 */
	public static synchronized EntityDefImpl getDefinitionObject() {
		return EntityDefImpl.findDefObject("model.sicurezze.Sec_SecCnfUsers");
	}

	/**
	 * Gets the attribute value for SoUserId, using the alias name SoUserId.
	 * @return the value of SoUserId
	 */
    public Integer getSoUserId() {
        return (Integer)getAttributeInternal(SOUSERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SoUserId.
     * @param value value to set the SoUserId
     */
    public void setSoUserId(Integer value) {
        setAttributeInternal(SOUSERID, value);
    }

    /**
     * Gets the attribute value for IsEnabled, using the alias name IsEnabled.
     * @return the value of IsEnabled
     */
    public Boolean getIsEnabled() {
        return (Boolean)getAttributeInternal(ISENABLED);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsEnabled.
     * @param value value to set the IsEnabled
     */
    public void setIsEnabled(Boolean value) {
        setAttributeInternal(ISENABLED, value);
    }

    /**
     * Gets the attribute value for CreateDate, using the alias name CreateDate.
     * @return the value of CreateDate
     */
    public Date getCreateDate() {
        return (Date)getAttributeInternal(CREATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreateDate.
     * @param value value to set the CreateDate
     */
    public void setCreateDate(Date value) {
        setAttributeInternal(CREATEDATE, value);
    }

    /**
     * Gets the attribute value for LastConnection, using the alias name LastConnection.
     * @return the value of LastConnection
     */
    public Date getLastConnection() {
        return (Date)getAttributeInternal(LASTCONNECTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastConnection.
     * @param value value to set the LastConnection
     */
    public void setLastConnection(Date value) {
        setAttributeInternal(LASTCONNECTION, value);
    }

    /**
     * Gets the attribute value for LdapUserId, using the alias name LdapUserId.
     * @return the value of LdapUserId
     */
    public String getLdapUserId() {
        return (String)getAttributeInternal(LDAPUSERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LdapUserId.
     * @param value value to set the LdapUserId
     */
    public void setLdapUserId(String value) {
        setAttributeInternal(LDAPUSERID, value);
    }

    /**
     * Gets the attribute value for Nome, using the alias name Nome.
     * @return the value of Nome
     */
    public String getNome() {
        return (String)getAttributeInternal(NOME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Nome.
     * @param value value to set the Nome
     */
    public void setNome(String value) {
        setAttributeInternal(NOME, value);
    }

    /**
     * Gets the attribute value for Cognome, using the alias name Cognome.
     * @return the value of Cognome
     */
    public String getCognome() {
        return (String)getAttributeInternal(COGNOME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Cognome.
     * @param value value to set the Cognome
     */
    public void setCognome(String value) {
        setAttributeInternal(COGNOME, value);
    }

    /**
     * Gets the attribute value for CodiceFiscale, using the alias name CodiceFiscale.
     * @return the value of CodiceFiscale
     */
    public String getCodiceFiscale() {
        return (String)getAttributeInternal(CODICEFISCALE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CodiceFiscale.
     * @param value value to set the CodiceFiscale
     */
    public void setCodiceFiscale(String value) {
        setAttributeInternal(CODICEFISCALE, value);
    }

    /**
     * Gets the attribute value for Ufficio, using the alias name Ufficio.
     * @return the value of Ufficio
     */
    public String getUfficio() {
        return (String)getAttributeInternal(UFFICIO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ufficio.
     * @param value value to set the Ufficio
     */
    public void setUfficio(String value) {
        setAttributeInternal(UFFICIO, value);
    }

    /**
     * Gets the attribute value for Email, using the alias name Email.
     * @return the value of Email
     */
    public String getEmail() {
        return (String)getAttributeInternal(EMAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Email.
     * @param value value to set the Email
     */
    public void setEmail(String value) {
        setAttributeInternal(EMAIL, value);
    }

    /**
     * Gets the attribute value for Telefono, using the alias name Telefono.
     * @return the value of Telefono
     */
    public String getTelefono() {
        return (String)getAttributeInternal(TELEFONO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Telefono.
     * @param value value to set the Telefono
     */
    public void setTelefono(String value) {
        setAttributeInternal(TELEFONO, value);
    }

    /**
     * Gets the attribute value for DtfineValidita, using the alias name DtfineValidita.
     * @return the value of DtfineValidita
     */
    public Date getDtfineValidita() {
        return (Date)getAttributeInternal(DTFINEVALIDITA);
    }

    /**
     * Sets <code>value</code> as the attribute value for DtfineValidita.
     * @param value value to set the DtfineValidita
     */
    public void setDtfineValidita(Date value) {
        setAttributeInternal(DTFINEVALIDITA, value);
    }


	/**
	 * getAttrInvokeAccessor: generated method. Do not modify.
	 * @param index the index identifying the attribute
	 * @param attrDef the attribute

	 * @return the attribute value
	 * @throws Exception
	 */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
		if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
			return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
		}
		return super.getAttrInvokeAccessor(index, attrDef);
	}

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
		if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
			AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
			return;
		}
		super.setAttrInvokeAccessor(index, value, attrDef);
	}


	/**
	 * @param soUserId key constituent

	 * @return a Key object based on given key constituents.
	 */
	public static Key createPrimaryKey(Integer soUserId) {
		return new Key(new Object[]{soUserId});
	}

	protected Integer seqNextVal(String sequenceName) {
    SequenceImpl s = new SequenceImpl(sequenceName, getDBTransaction());
    return s.getSequenceNumber().intValue();
    }
}
